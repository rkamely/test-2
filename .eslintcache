[{"D:\\kanoo main panell\\CandoProject-master\\src\\index.js":"1","D:\\kanoo main panell\\CandoProject-master\\src\\serviceWorker.js":"2","D:\\kanoo main panell\\CandoProject-master\\src\\context\\LayoutContext.js":"3","D:\\kanoo main panell\\CandoProject-master\\src\\components\\App.js":"4","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\context\\AuthProvider.js":"5","D:\\kanoo main panell\\CandoProject-master\\src\\context\\UserContext.js":"6","D:\\kanoo main panell\\CandoProject-master\\src\\components\\config\\apolloClient.js":"7","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\api\\axios.js":"8","D:\\kanoo main panell\\CandoProject-master\\src\\themes\\index.js":"9","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\login\\CompleteInformation.js":"10","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\login\\SmsVerification.js":"11","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Layout\\Layout.js":"12","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\error\\Error.js":"13","D:\\kanoo main panell\\CandoProject-master\\src\\components\\config\\auth.js":"14","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\login\\Login.js":"15","D:\\kanoo main panell\\CandoProject-master\\src\\themes\\default.js":"16","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\login\\styles.js":"17","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\error\\styles.js":"18","D:\\kanoo main panell\\CandoProject-master\\src\\components\\ErrorBoundary\\ErrorBoundary.js":"19","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\tutorialPage\\tutorialPage.js":"20","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\main.js":"21","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\CalenderProject.js":"22","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\JobCalender\\JobCalender.js":"23","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\ChatPage\\QRChatPage.js":"24","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\discoverPage\\discoverPage.js":"25","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\ChatPage\\Style.js":"26","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\ChatPage\\LodaingQr.js":"27","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Loading\\Loading.js":"28","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Typography\\Title\\Title.js":"29","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Loading\\styles.js":"30","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\style.js":"31","D:\\kanoo main panell\\CandoProject-master\\src\\Iran-Sans-normal.js":"32","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\FilterCalender.js":"33","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\JobUser\\AddJob.js":"34","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\User\\Adduser.js":"35","D:\\kanoo main panell\\CandoProject-master\\src\\components\\PageTitle\\PageTitle.js":"36","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\ApiaryList\\ApiaryUpdateList.js":"37","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\ApiaryList\\ApiaryAddList.js":"38","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\event-utils.js":"39","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\User\\PreviewImage.js":"40","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\User\\styles.js":"41","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\JobUser\\styles.js":"42","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\ApiaryList\\styles.js":"43","D:\\kanoo main panell\\CandoProject-master\\src\\components\\MapBox\\MapBox.js":"44","D:\\kanoo main panell\\CandoProject-master\\src\\components\\PageTitle\\styles.js":"45","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\ApiaryList\\ApiaryList.js":"46","D:\\kanoo main panell\\CandoProject-master\\src\\components\\MapBox\\ControlPanel.js":"47","D:\\kanoo main panell\\CandoProject-master\\src\\components\\MapBox\\ PinBar.js":"48","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Wrappers\\Wrappers.js":"49","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\ApiaryList\\styles.js":"50","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\Support.js":"51","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\ChatPage\\ChatPage.js":"52","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\AboutUsMain\\AboutUsMain.js":"53","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Login\\Login.js":"54","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\FrequentlyQuestions\\FrequentlyQuestions.js":"55","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Layout\\styles.js":"56","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportMessage\\SupportMessage.js":"57","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Audio.js":"58","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\Setting\\Edituser.js":"59","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\User\\TableofUser.js":"60","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\HiveStatus.js":"61","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Hive.js":"62","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\youtube.js":"63","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\typography\\Typography.js":"64","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\Dashboard.js":"65","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\Setting\\IOSSwitch.js":"66","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\Setting\\AddSubmitCode.js":"67","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\User\\EditUser.js":"68","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\User\\styles.js":"69","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\AboutUsMain\\styles.js":"70","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\addQRcode.js":"71","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\FrequentlyQuestions\\Styles.js":"72","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportMessage\\Style.js":"73","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Login\\Style.js":"74","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Style.js":"75","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\LinaerStepper.js":"76","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Sidebar\\Sidebar.js":"77","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Header\\Header.js":"78","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\Setting\\EditPhoneNumber.js":"79","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\Setting\\styles.js":"80","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\hooks\\useAxiosPrivate.js":"81","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Questionnaire\\CureHiveStepper.js":"82","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Questionnaire\\NutritionStepper.js":"83","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Questionnaire\\CatchHoneyStepper.js":"84","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\charts\\PieCharts.js":"85","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\charts\\components\\ApexLineChart.js":"86","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Widget\\Widget.js":"87","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Diagram.js":"88","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\webHiveSubmit.js":"89","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\LeftCard.js":"90","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\styles.js":"91","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\addTicket.js":"92","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\Style.js":"93","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Chart\\Chart.js":"94","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\RightTopCard.js":"95","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\typography\\styles.js":"96","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\mock.js":"97","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Sidebar\\components\\Dot.js":"98","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\styles.js":"99","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\hooks\\useRefresh.js":"100","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Header\\styles.js":"101","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\hooks\\useAuth.js":"102","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\BigStat2.js":"103","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"104","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\components\\Table\\Table.js":"105","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Calender\\Calender.js":"106","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Sidebar\\styles.js":"107","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Questionnaire\\Style.js":"108","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Widget\\styles.js":"109","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"110","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\tableDiagram.js":"111","D:\\kanoo main panell\\CandoProject-master\\src\\components\\UserAvatar\\UserAvatar.js":"112","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"113","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Calender\\buildCalender.js":"114","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Calender\\dayStyle.js":"115","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\CategoryForm\\Bardiaadd.js":"116","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Calender\\styles.js":"117","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Calender\\CalenderHeader.js":"118","D:\\kanoo main panell\\CandoProject-master\\src\\components\\UserAvatar\\styles.js":"119","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"120"},{"size":1536,"mtime":1658319093035,"results":"121","hashOfConfig":"122"},{"size":5083,"mtime":1657689678585,"results":"123","hashOfConfig":"122"},{"size":1444,"mtime":1657689678506,"results":"124","hashOfConfig":"122"},{"size":2787,"mtime":1657689678479,"results":"125","hashOfConfig":"122"},{"size":356,"mtime":1657689678555,"results":"126","hashOfConfig":"122"},{"size":2399,"mtime":1658317584816,"results":"127","hashOfConfig":"122"},{"size":865,"mtime":1657689678506,"results":"128","hashOfConfig":"122"},{"size":287,"mtime":1657689678516,"results":"129","hashOfConfig":"122"},{"size":723,"mtime":1657689678586,"results":"130","hashOfConfig":"122"},{"size":6220,"mtime":1657715555186,"results":"131","hashOfConfig":"122"},{"size":7587,"mtime":1658317584830,"results":"132","hashOfConfig":"122"},{"size":4548,"mtime":1658319007419,"results":"133","hashOfConfig":"122"},{"size":1706,"mtime":1657689678560,"results":"134","hashOfConfig":"122"},{"size":727,"mtime":1657689678506,"results":"135","hashOfConfig":"122"},{"size":6572,"mtime":1658317584829,"results":"136","hashOfConfig":"122"},{"size":5532,"mtime":1657689678586,"results":"137","hashOfConfig":"122"},{"size":6422,"mtime":1658317584830,"results":"138","hashOfConfig":"122"},{"size":1397,"mtime":1657689678561,"results":"139","hashOfConfig":"122"},{"size":1248,"mtime":1657689678480,"results":"140","hashOfConfig":"122"},{"size":569,"mtime":1657689678552,"results":"141","hashOfConfig":"122"},{"size":4633,"mtime":1657689678532,"results":"142","hashOfConfig":"122"},{"size":11773,"mtime":1657689678530,"results":"143","hashOfConfig":"122"},{"size":29109,"mtime":1657689678532,"results":"144","hashOfConfig":"122"},{"size":20828,"mtime":1657689678544,"results":"145","hashOfConfig":"122"},{"size":354,"mtime":1657708468642,"results":"146","hashOfConfig":"122"},{"size":3011,"mtime":1657689678544,"results":"147","hashOfConfig":"122"},{"size":1526,"mtime":1657689678543,"results":"148","hashOfConfig":"122"},{"size":358,"mtime":1657689678494,"results":"149","hashOfConfig":"122"},{"size":310,"mtime":1657689678502,"results":"150","hashOfConfig":"122"},{"size":165,"mtime":1657689678494,"results":"151","hashOfConfig":"122"},{"size":1228,"mtime":1657689678533,"results":"152","hashOfConfig":"122"},{"size":167937,"mtime":1657689678479,"results":"153","hashOfConfig":"122"},{"size":4804,"mtime":1657689678530,"results":"154","hashOfConfig":"122"},{"size":25758,"mtime":1657689678485,"results":"155","hashOfConfig":"122"},{"size":9599,"mtime":1657689678489,"results":"156","hashOfConfig":"122"},{"size":453,"mtime":1657689678496,"results":"157","hashOfConfig":"122"},{"size":19227,"mtime":1658317584809,"results":"158","hashOfConfig":"122"},{"size":16272,"mtime":1658319127610,"results":"159","hashOfConfig":"122"},{"size":398,"mtime":1657689678532,"results":"160","hashOfConfig":"122"},{"size":496,"mtime":1657689678489,"results":"161","hashOfConfig":"122"},{"size":6024,"mtime":1657689678490,"results":"162","hashOfConfig":"122"},{"size":7579,"mtime":1657689678486,"results":"163","hashOfConfig":"122"},{"size":6069,"mtime":1657689678482,"results":"164","hashOfConfig":"122"},{"size":2838,"mtime":1657689678495,"results":"165","hashOfConfig":"122"},{"size":488,"mtime":1657689678497,"results":"166","hashOfConfig":"122"},{"size":35871,"mtime":1658319229825,"results":"167","hashOfConfig":"122"},{"size":1049,"mtime":1657689678495,"results":"168","hashOfConfig":"122"},{"size":593,"mtime":1657689678494,"results":"169","hashOfConfig":"122"},{"size":3971,"mtime":1657689678505,"results":"170","hashOfConfig":"122"},{"size":290,"mtime":1657689678526,"results":"171","hashOfConfig":"122"},{"size":15154,"mtime":1657689678547,"results":"172","hashOfConfig":"122"},{"size":20076,"mtime":1657689678543,"results":"173","hashOfConfig":"122"},{"size":2582,"mtime":1657689678517,"results":"174","hashOfConfig":"122"},{"size":689,"mtime":1657689678542,"results":"175","hashOfConfig":"122"},{"size":19830,"mtime":1657689678545,"results":"176","hashOfConfig":"122"},{"size":715,"mtime":1657708879983,"results":"177","hashOfConfig":"122"},{"size":6031,"mtime":1657689678548,"results":"178","hashOfConfig":"122"},{"size":6315,"mtime":1657689678537,"results":"179","hashOfConfig":"122"},{"size":9847,"mtime":1658317584811,"results":"180","hashOfConfig":"122"},{"size":25200,"mtime":1657689678550,"results":"181","hashOfConfig":"122"},{"size":4554,"mtime":1658317584824,"results":"182","hashOfConfig":"122"},{"size":40829,"mtime":1658317584823,"results":"183","hashOfConfig":"122"},{"size":1807,"mtime":1657689678549,"results":"184","hashOfConfig":"122"},{"size":4642,"mtime":1657689678584,"results":"185","hashOfConfig":"122"},{"size":16682,"mtime":1657689678555,"results":"186","hashOfConfig":"122"},{"size":1597,"mtime":1657689678488,"results":"187","hashOfConfig":"122"},{"size":2511,"mtime":1657689678487,"results":"188","hashOfConfig":"122"},{"size":9730,"mtime":1657689678489,"results":"189","hashOfConfig":"122"},{"size":1233,"mtime":1657689678550,"results":"190","hashOfConfig":"122"},{"size":218,"mtime":1657689678524,"results":"191","hashOfConfig":"122"},{"size":5235,"mtime":1657689678548,"results":"192","hashOfConfig":"122"},{"size":1916,"mtime":1657689678545,"results":"193","hashOfConfig":"122"},{"size":1454,"mtime":1657689678547,"results":"194","hashOfConfig":"122"},{"size":100,"mtime":1657689678542,"results":"195","hashOfConfig":"122"},{"size":5767,"mtime":1658317584827,"results":"196","hashOfConfig":"122"},{"size":19758,"mtime":1657689678539,"results":"197","hashOfConfig":"122"},{"size":5986,"mtime":1658317584813,"results":"198","hashOfConfig":"122"},{"size":7085,"mtime":1658317584812,"results":"199","hashOfConfig":"122"},{"size":3459,"mtime":1658317584810,"results":"200","hashOfConfig":"122"},{"size":6133,"mtime":1658317584811,"results":"201","hashOfConfig":"122"},{"size":2007,"mtime":1657689678562,"results":"202","hashOfConfig":"122"},{"size":8821,"mtime":1657689678535,"results":"203","hashOfConfig":"122"},{"size":9372,"mtime":1657689678536,"results":"204","hashOfConfig":"122"},{"size":8392,"mtime":1657689678535,"results":"205","hashOfConfig":"122"},{"size":2741,"mtime":1657689678553,"results":"206","hashOfConfig":"122"},{"size":1328,"mtime":1657689678554,"results":"207","hashOfConfig":"122"},{"size":1714,"mtime":1657689678503,"results":"208","hashOfConfig":"122"},{"size":13031,"mtime":1657689678537,"results":"209","hashOfConfig":"122"},{"size":5163,"mtime":1657689678541,"results":"210","hashOfConfig":"122"},{"size":4624,"mtime":1657689678538,"results":"211","hashOfConfig":"122"},{"size":1391,"mtime":1658317584823,"results":"212","hashOfConfig":"122"},{"size":7834,"mtime":1657689678549,"results":"213","hashOfConfig":"122"},{"size":5234,"mtime":1657707229705,"results":"214","hashOfConfig":"122"},{"size":681,"mtime":1657689678480,"results":"215","hashOfConfig":"122"},{"size":12690,"mtime":1658317584825,"results":"216","hashOfConfig":"122"},{"size":389,"mtime":1657689678585,"results":"217","hashOfConfig":"122"},{"size":9415,"mtime":1658317584827,"results":"218","hashOfConfig":"122"},{"size":902,"mtime":1657689678498,"results":"219","hashOfConfig":"122"},{"size":1592,"mtime":1658317584828,"results":"220","hashOfConfig":"122"},{"size":603,"mtime":1657689678562,"results":"221","hashOfConfig":"122"},{"size":4590,"mtime":1657718262504,"results":"222","hashOfConfig":"122"},{"size":307,"mtime":1657689678561,"results":"223","hashOfConfig":"122"},{"size":1666,"mtime":1657689678556,"results":"224","hashOfConfig":"122"},{"size":1821,"mtime":1657689678556,"results":"225","hashOfConfig":"122"},{"size":1323,"mtime":1657689678558,"results":"226","hashOfConfig":"122"},{"size":2821,"mtime":1658317584817,"results":"227","hashOfConfig":"122"},{"size":1935,"mtime":1658319879926,"results":"228","hashOfConfig":"122"},{"size":765,"mtime":1657689678536,"results":"229","hashOfConfig":"122"},{"size":1068,"mtime":1657689678504,"results":"230","hashOfConfig":"122"},{"size":6999,"mtime":1658317584814,"results":"231","hashOfConfig":"122"},{"size":10063,"mtime":1657689678540,"results":"232","hashOfConfig":"122"},{"size":620,"mtime":1657689678502,"results":"233","hashOfConfig":"122"},{"size":2140,"mtime":1657689678557,"results":"234","hashOfConfig":"122"},{"size":549,"mtime":1657689678527,"results":"235","hashOfConfig":"122"},{"size":448,"mtime":1657689678527,"results":"236","hashOfConfig":"122"},{"size":5407,"mtime":1657689678483,"results":"237","hashOfConfig":"122"},{"size":1113,"mtime":1658317584819,"results":"238","hashOfConfig":"122"},{"size":1028,"mtime":1658317584818,"results":"239","hashOfConfig":"122"},{"size":291,"mtime":1657689678503,"results":"240","hashOfConfig":"122"},{"size":1974,"mtime":1658317584815,"results":"241","hashOfConfig":"122"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w5byu5",{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"248"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"248"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"248"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"248"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"248"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"248"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"248"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"248"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"248"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"248"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"248"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"248"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"248"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":2,"source":"304","usedDeprecatedRules":"248"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"248"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"248"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"248"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"248"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"248"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"248"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"248"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"338","usedDeprecatedRules":"248"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"248"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"248"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"248"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"248"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"248"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":2,"source":"374","usedDeprecatedRules":"248"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"248"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"248"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"248"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"248"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"248"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"248"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"248"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"248"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"248"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"248"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"248"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"248"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"248"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"248"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"248"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"248"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"248"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"248"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"248"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"248"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"248"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"248"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"248"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"248"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"248"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"248"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"248"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"248"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"248"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"248"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"248"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"248"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"248"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"248"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"248"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"248"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"248"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"248"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"248"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"248"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"248"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"248"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},"D:\\kanoo main panell\\CandoProject-master\\src\\index.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\serviceWorker.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\context\\LayoutContext.js",[],["553","554"],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\App.js",["555","556","557","558","559"],"import React, { useContext } from \"react\";\r\nimport { HashRouter, Route, Switch, Redirect, Router } from \"react-router-dom\";\r\n\r\n// components\r\nimport Layout from \"./Layout\";\r\n\r\n// pages\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\n\r\n// context\r\nimport { useUserState } from \"../context/UserContext\";\r\nimport SmsVerification from \"../pages/login/SmsVerification\";\r\nimport CompleteInformation from \"../pages/login/CompleteInformation\";\r\nimport { useAppApolloClient } from \"./config/apolloClient\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport AuthContext from \"../pages/context/AuthProvider\";\r\nimport axios from \"../pages/api/axios\";\r\n// import { createBrowserHistory } from \"history\";\r\n\r\n// const history = createBrowserHistory();\r\nexport default function App() {\r\n  // global\r\n  const { isAuthenticated } = useUserState();\r\n  console.log(\"isAuthenticated\", isAuthenticated);\r\n  const { auth, setAuth } = useContext(AuthContext);\r\n\r\n  const apolloClient = useAppApolloClient();\r\n\r\n  console.log(\"new use ro bede bezanim berim!!!\",auth);\r\n  console.log(\"new use ro bede bezanim berim!!!\", auth.newUser);\r\n\r\n    \r\n\r\n\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/dashboard\" />} />\r\n        <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/dashboard\" />}\r\n        />\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute\r\n            path=\"/login/CompleteInformation\"\r\n            component={CompleteInformation}\r\n          />\r\n        <PublicRoute\r\n          path=\"/login/smsVerification\"\r\n          component={SmsVerification}\r\n        />\r\n        <Route path=\"/login/\" component={Login} />\r\n\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\context\\AuthProvider.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\context\\UserContext.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\config\\apolloClient.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\api\\axios.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\themes\\index.js",["560"],"import defaultTheme from \"./default\";\r\n\r\nimport { createTheme } from '@material-ui/core/styles'\r\nimport { useState } from \"react\";\r\n\r\nconst overrides = {\r\n  typography: {\r\n    h1: {\r\n      fontSize: \"3rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.64rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    h5: {\r\n      fontSize: \"1.285rem\",\r\n    },\r\n    h6: {\r\n      fontSize: \"1.142rem\",\r\n    },\r\n    \r\n  },\r\n};\r\n\r\n\r\n\r\nconst themes = {\r\n  default: createTheme({ ...defaultTheme, ...overrides, direction: \"rtl\",  \r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920\r\n    }\r\n  }}),\r\n};\r\n\r\nexport default themes;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\login\\CompleteInformation.js",["561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport \"./styles.css\";\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport AuthContext from \"../context/AuthProvider\";\r\nimport axios from \"axios\";\r\n\r\nfunction CompleteInformation(props) {\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  const { auth , setAuth } = useContext(AuthContext);\r\n\r\nconsole.log(\"Auth\",auth);\r\nconsole.log(\"setAuth\",setAuth);\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n  // const phoneRegExp = /09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/\r\n  // const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/;\r\n\r\n  const validationSchema = yup.object().shape({\r\n    username: yup.string().required(\"لطفا نام کاربری خود را وارد کنید\"),\r\n    firstname: yup.string().required(\"لطفا نام خود را وارد کنید\"),\r\n    lastname: yup.string().required(\"لطفا نام خانوادگی خود را وارد کنید\"),\r\n    email: yup.string().required(\"لطفا ایمیل خود را وارد کنید\").email(\"لطفا ایمیل معتبر وارد کنید\"),\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const onSubmit = async (data) => {\r\n    const token = localStorage.getItem(\"id_token\")\r\n    // console.log(\"firstname\",data.firstname);\r\n    // console.log(\"token\",token);\r\n    // console.log(JSON.stringify(data, null, 2));\r\n    // alert(JSON.stringify(data, null, 2));\r\n    try {\r\n      setIsLoading(true);\r\n      console.log(\"auth.idUser\",auth.idUser);\r\n      const response = await axios\r\n        .post( \r\n          `http://185.202.113.165:3000/api/auth/profile`,\r\n          data,{\r\n          headers: {\r\n            'token': `${token}` ,\r\n            // withCredentials: true,\r\n\r\n          },}\r\n        )\r\n        .then((respons) => respons.data);\r\n       \r\n      userDispatch({ type: \"LOGIN_SUCCESS\" });\r\n\r\n    \r\n    } catch (err) {\r\n      console.log(\"err.response\", err.response);\r\n    }\r\n  };\r\n  // local\r\n\r\n  return (\r\n    <div className=\"containerLogin\">\r\n      <div className=\"contact-form\">\r\n        {/* <img alt=\"\" className=\"avatar\" src=\"/assets/Untitled-1.svg\"/> */}\r\n        <h2 style={{fontFamily:\"Shabnam\" , fontSize:\"1.7rem\"}}>تکمیل اطلاعات</h2>\r\n        <p>اطلاعات شخصی خود را وارد کنید</p>\r\n\r\n        <TextField\r\n          // style={{ direction: \"ltr\" }}\r\n          className={classes.TextField}\r\n          label=\"نام کاربری\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n          {...register(\"username\")}\r\n          error={errors.username ? true : false}\r\n        />\r\n        <Typography\r\n          variant=\"inherit\"\r\n          color=\"secondary\"\r\n      \r\n        >\r\n          {errors.username?.message}\r\n        </Typography>\r\n\r\n        <TextField\r\n          // style={{ direction: \"ltr\" }}\r\n          className={classes.TextField}\r\n          label=\"نام\"\r\n          id=\"firstname\"\r\n          name=\"firstname\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n          {...register(\"firstname\")}\r\n          error={errors.firstname ? true : false}\r\n        />\r\n        <Typography\r\n          variant=\"inherit\"\r\n          color=\"textSecondary\"\r\n          color=\"secondary\"\r\n\r\n        >\r\n          {errors.firstname?.message}\r\n        </Typography>\r\n\r\n        <TextField\r\n          // style={{ direction: \"ltr\" }}\r\n          className={classes.TextField}\r\n          label=\"نام خانوادگی\"\r\n          id=\"lastname\"\r\n          name=\"lastname\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n          {...register(\"lastname\")}\r\n          error={errors.lastname ? true : false}\r\n        />\r\n        <Typography\r\n          variant=\"inherit\"\r\n          color=\"textSecondary\"\r\n          color=\"secondary\"\r\n\r\n        >\r\n          {errors.lastname?.message}\r\n        </Typography>\r\n\r\n        <TextField\r\n          // style={{ direction: \"ltr\" }}\r\n          className={classes.TextField}\r\n          label=\"ایمیل (اختیاری)\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n          {...register(\"email\")}\r\n          error={errors.phoneNumber ? true : false}\r\n        />\r\n        <Typography\r\n          variant=\"inherit\"\r\n          color=\"textSecondary\"\r\n          color=\"secondary\"\r\n\r\n        >\r\n          {errors.email?.message}\r\n        </Typography>\r\n        <div className={classes.ButtonAndLoading}>\r\n          {isLoading ? (\r\n            <CircularProgress size={40} className={classes.loginLoader} />\r\n          ) : (\r\n            <Button\r\n              // disabled={\r\n              //   loginValue.length === 0\r\n\r\n              // }\r\n              variant=\"contained\"\r\n              className={classes.buttonLogin}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              ثبت اطلاعات\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        {/* <input placeholder=\"Enter Email\" type=\"email\"/>\r\n\t\t\t            <input placeholder=\"Enter Password\" type=\"password\"/> <input type=\"submit\" value=\"Sign in\"/>\r\n\t\t            \t<p><input type=\"checkbox\"/>Remember Me</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(CompleteInformation);\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\login\\SmsVerification.js",["578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport axios from \"../api/axios\";\r\nimport AuthContext from \"../context/AuthProvider\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport \"./styles.css\";\r\n\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useAuthToken } from \"../../components/config/auth\";\r\n\r\nfunction SmsVerification(props) {\r\n  const {auth, setAuth } = useContext(AuthContext);\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [loginValue, setLoginValue] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const errRef = useRef();\r\n  // global\r\n  const userDispatch = useUserDispatch();\r\n  // const mobileRegExp = /09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/\r\n  const mobileRegExp = /09([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/;\r\n\r\n  const validationSchema = yup.object().shape({\r\n    code: yup.string().required(\"لطفا کد تائید را وارد کنید\"),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const [_, setAuthToken, removeAuthtoken] = useAuthToken();\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  const onSubmit = async (data) => {\r\n    const mobile = localStorage.getItem(\"data\");\r\n    // console.log(JSON.stringify(data, null, 2));\r\n    // alert(JSON.stringify({ code: data.code, mobile: mobile }, null, 2));\r\n    // history.push(\"/login/step2\")\r\n    console.log(\"mobileNumber\", mobile);\r\n    // removeAuthtoken()\r\n\r\n    //کد زیر اعمال شود\r\n    try {\r\n      const response = await axios\r\n        .post(\r\n          \"http://185.202.113.165:3000/api/auth/verify\",\r\n          { code: data.code, mobile: \"0\"+mobile },\r\n          {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            withCredentials: true,\r\n          },\r\n        )\r\n        .then((respons) => respons.data);\r\n        console.log(\"response smsVerify\",response);\r\n        localStorage.setItem(\"profileName\",response.data.firstname)\r\n        localStorage.setItem(\"email\",response.data.email)\r\n        localStorage.setItem(\"lastname\",response.data.lastname)\r\n        const token = response?.token;\r\n        const idUser =response.data._id\r\n        console.log(\"idUser\",idUser);\r\n        const newPerson = response.data.username\r\n        const isStaff = response.data.isStaff\r\n        localStorage.setItem(\"isStaff\",isStaff);\r\n        console.log(\"isStaff\",isStaff);\r\n      // setAuth({mobile:mobile,code:data.code,token})\r\n\r\n      if (token) {\r\n        if(newPerson && newPerson !== \"\"){\r\n          setAuth({ mobile: mobile, code: data.code, token  , newUser:newPerson, idUser:idUser});\r\n          localStorage.setItem(\"id_token\", token);\r\n          userDispatch({ type: 'LOGIN_SUCCESS' })\r\n\r\n\r\n        } else {\r\n          localStorage.setItem(\"id_token\", token);\r\n          setAuth({ mobile: mobile, code: data.code, token  , newUser:newPerson, idUser:idUser});\r\n          history.push(\"/login/CompleteInformation\")\r\n        }\r\n\r\n      }\r\n      //  userDispatch({ type: 'LOGIN_SUCCESS' })\r\n      console.log(\"token\", token);\r\n      console.log(\"response\", response.data.newUser);\r\n      console.log(response?.token);\r\n      console.log(response?.message);\r\n    } catch (err) {\r\n      console.log(\"err.response\", err.response);\r\n      if (!err?.response) {\r\n        setErrMsg(\r\n          \" پاسخی از سرور دریافت نشد لطفا از وصل بودن اینترنت خود اطمینان حاصل نمایید و مجدد تلاش کنید\",\r\n        );\r\n      } else if (err.response?.status === 400) {\r\n        setErrMsg(\"لطفا کد تائید را درست وارد نمایید\");\r\n        setTimeout(() => {\r\n          setErrMsg(\"\");\r\n        }, 3000);\r\n      } else {\r\n        setErrMsg(\"لطفا کد تائید را درست وارد نمایید\");\r\n      }\r\n      errRef.current.focus();\r\n    }\r\n\r\n    \r\n\r\n\r\n    // loginUser(userDispatch, loginValue, props.history, setIsLoading, setErrMsg);\r\n  };\r\n\r\n\r\n  console.log(\"auuuuuuutttttthhhhhh\",auth);\r\n\r\n  return (\r\n    <div className=\"containerLogin\">\r\n       <div className={classes.candoTopItem} > \r\n          <div className={classes.candoLogo} >\r\n            <img src=\"/assets/Component 24 – 53.svg\" alt=\"عکس زنبور\" width=\"50px\"/>\r\n          </div>\r\n          <div style={{marginRight:\"16px\"}}>\r\n            <h1 className={classes.candoTopTitle}>کندووان پلاس</h1>\r\n            <h2 className={classes.candoTopsubTitle}>مدیریت هوشمند زنبورستان</h2>\r\n          </div>\r\n        </div>\r\n      <div className=\"contact-form\">\r\n        {errMsg ? (\r\n          <p ref={errRef} className=\"errmsg\" aria-live=\"assertive\">\r\n            {errMsg}\r\n          </p>\r\n        ) : null}\r\n\r\n        {/* <img alt=\"\" className=\"avatar\" src=\"/assets/Untitled-1.svg\"/> */}\r\n        <h2 >کد تائید</h2>\r\n        <p>\r\n          کد تائید ارسال گردید.\r\n          <br />\r\n          برای ادامه کد تائید ارسال شده را وارد کنید.\r\n        </p>\r\n\r\n        <TextField\r\n          // style={{ direction: \"ltr\" }}\r\n          className={classes.TextField}\r\n          label=\"کد تائید\"\r\n          onChange={(e) => setLoginValue(e.target.value)}\r\n          id=\"code\"\r\n          type=\"number\"\r\n          name=\"code\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n          {...register(\"code\")}\r\n          error={errors.code ? true : false}\r\n        />\r\n        <Typography\r\n          variant=\"inherit\"\r\n          color=\"textSecondary\"\r\n          style={{ color: \"red\" }}\r\n        >\r\n          {errors.code?.message}\r\n        </Typography>\r\n        <br />\r\n        <Typography\r\n          variant=\"p\"\r\n          color=\"textSecondary\"\r\n          style={{ color: \"white\", fontFamily: \"Shabnam\", fontSize: \"0.8rem\" }}\r\n        >\r\n          شماره تلفن اشتباه است؟\r\n          <span\r\n            style={{\r\n              color: \"rgb( 227 156 0  )\",\r\n              fontWeight: \"bold\",\r\n              cursor: \"pointer\",\r\n              marginRight:\"4px\"\r\n            }}\r\n            onClick={() => history.push(\"/login\")}\r\n          >\r\n             ویرایش \r\n          </span>\r\n        </Typography>\r\n\r\n        {isLoading ? (\r\n          <CircularProgress size={26} className={classes.loginLoader} />\r\n        ) : (\r\n          <Button\r\n            // disabled={\r\n            //   loginValue.length === 0\r\n\r\n            // }\r\n            variant=\"contained\"\r\n            className={classes.buttonLogin}\r\n            onClick={handleSubmit(onSubmit)}\r\n          >\r\n            ثبت کد تائید\r\n          </Button>\r\n        )}\r\n\r\n        {/* <input placeholder=\"Enter Email\" type=\"email\"/>\r\n        <input placeholder=\"Enter Password\" type=\"password\"/> <input type=\"submit\" value=\"Sign in\"/>\r\n        <p><input type=\"checkbox\"/>Remember Me</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(SmsVerification);","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Layout\\Layout.js",["596","597","598","599","600","601"],"import React, { useContext } from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\n// pages\r\nimport TableofUser from \"../../pages/candoProject/User/TableofUser\";\r\nimport Hive from \"../../pages/candoProject/Hive/Hive\";\r\nimport ApiaryList from \"../../pages/candoProject/ApiaryList/ApiaryList\";\r\nimport HiveStatus from \"../../pages/candoProject/HiveStatus/HiveStatus\";\r\nimport Audio from \"../../pages/candoProject/HiveStatus/Audio\";\r\nimport Support from \"../../pages/candoProject/Support/Support\";\r\nimport SupportPage from \"../../pages/candoProject/Support/ChatPage/ChatPage\";\r\nimport SupportMessage from \"../../pages/candoProject/Support/SupportMessage/SupportMessage\";\r\nimport Login from \"../../pages/login/Login\";\r\nimport LoginWithPhone from \"../../pages/candoProject/Login/Login\";\r\nimport FrequentlyQuestions from \"../../pages/candoProject/Support/FrequentlyQuestions/FrequentlyQuestions\";\r\nimport SmsVerification from \"../../pages/login/SmsVerification\";\r\nimport Edituser from \"../Form/Setting/Edituser\";\r\nimport AboutUsMain from \"../../pages/candoProject/AboutUsMain/AboutUsMain\";\r\nimport CalenderProject from \"../../pages/candoProject/CalenderProject/CalenderProject\";\r\nimport JobCalender from \"../../pages/candoProject/CalenderProject/JobCalender/JobCalender\";\r\nimport main from \"../../pages/candoProject/CalenderProject/main\";\r\nimport AuthContext from \"../../pages/context/AuthProvider\";\r\nimport discoverPage from \"../../pages/candoProject/discoverPage/discoverPage\";\r\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\r\nimport tutorialPage from \"../../pages/candoProject/tutorialPage/tutorialPage\";\r\nimport QRChatPage from \"../../pages/candoProject/Support/ChatPage/QRChatPage\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  const {  auth  } = useContext(AuthContext)\r\n  console.log(\"auth ro see kon to layout\",auth);\r\n\r\n  return (\r\n    <div className={classes.root} >\r\n      <>\r\n        <div className={classes.headerSidebar}>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n        </div>\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            {/* <Route path=\"onent={Login} /> */}\r\n\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route\r\n              path=\"/app/ApiaryList/Beehive/Hive/:id\"\r\n              component={HiveStatus}\r\n            />\r\n            {/* <Route path=\"/app/Beehive/Hive/:id/:id\" component={Audio} /> */}\r\n\r\n            <Route path=\"/app/ApiaryList/Beehive/:id\" component={Hive} />\r\n            <Route path=\"/app/ApiaryList/\" component={ApiaryList} />\r\n            <Route path=\"/app/ApiaryList/:id\" component={ApiaryList} />\r\n\r\n            <Route path=\"/app/typography\" component={Typography} />\r\n            <Route path=\"/app/user\" component={TableofUser} />\r\n            <Route path=\"/app/JobCalender\" component={main} />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/app/ui\"\r\n              render={() => <Redirect to=\"/app/ui/icons\" />}\r\n            />\r\n\r\n            <Route path=\"/app/AboutUS\" component={AboutUsMain} />\r\n            <Route path=\"/app/user\" component={TableofUser} />\r\n\r\n            <Route path=\"/app/Support/QrCode/:id\" component={QRChatPage} />\r\n            <Route path=\"/app/Support/:id\" component={SupportPage} />\r\n            <Route path=\"/app/SupportMessage\" component={SupportMessage} />\r\n            <Route\r\n              path=\"/app/FrequentlyQuestions\"\r\n              component={FrequentlyQuestions}\r\n            />\r\n            <Route path=\"/app/Support\" component={Support} />\r\n            <Route path=\"/app/setting\" component={Edituser} />\r\n            <Route path=\"/app/new\" component={discoverPage} />\r\n            <Route path=\"/app/Education\" component={tutorialPage} />\r\n            \r\n            <Route path=\"/app/Error\" component={ErrorBoundary} />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\error\\Error.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\config\\auth.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\login\\Login.js",["602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617"],"import React, { useRef, useState ,useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n  InputAdornment,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useParams ,useHistory} from \"react-router\";\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport axios from \"../api/axios\"\r\nimport  AuthContext from  \"../context/AuthProvider\"\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport \"./styles.css\";\r\n\r\n\r\n\r\n\r\nfunction Login(props) {\r\n\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  const errRef = useRef();\r\n  const[state,setState]=useState({mobile:\"\"})\r\n  const [errMsg, setErrMsg] = useState('');\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n  // const phoneRegExp = /09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/\r\n  // const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/;\r\n  const phoneRegExp = '^(\\\\9)?9\\\\d{9}$';\r\n  const validationSchema = yup.object().shape({\r\n    mobile: yup\r\n      .string()\r\n      .matches(\r\n        phoneRegExp,\"شماره موبایل را با حروف انگلیسی و بدون صفر وارد کنید\"\r\n      )\r\n  });\r\n  \r\n\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  \r\n\r\nconst handleChangenumber=(event)=>{\r\n  // setState(e.target.value)\r\n  const { name, value } = event.target;\r\n  setState((prevState) => ({\r\n    ...prevState,\r\n    [name]: value\r\n  }));\r\n\r\n}\r\n\r\n\r\n console.log(\"state\",state)\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(JSON.stringify(data, null, 2));\r\n    // alert(JSON.stringify(data, null, 2));\r\n    // data.preventDefault();\r\n    const mobile=\"0\"+data.mobile\r\n    try{\r\n           const response = axios.post(\"http://185.202.113.165:3000/api/auth/login\",{mobile:mobile},{\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n           })\r\n           console.log(\"response login\",response);\r\n           console.log(JSON.stringify(response))       \r\n\r\n           history.push(\r\n           { \r\n             pathname:  \"./login/smsVerification\",\r\n             state\r\n           }\r\n           );\r\n           localStorage.setItem(\"data\",data.mobile.toString())\r\n           console.log(\"phone\", data.mobile.toString());\r\n\r\n    }catch (err) {\r\n      if (!err?.response) {\r\n          setErrMsg(' پاسخی از سرور دریافت نشد لطفا از وصل بودن اینترنت خود اطمینان حاصل نمایید و مجدد تلاش کنید');\r\n      }  else {\r\n        setErrMsg('ارتباط با سرور برقرار نشد لطفا مجدد تلاش کنید')\r\n      }\r\n\r\n      errRef.current.focus();\r\n  }\r\n \r\n  };\r\n\r\n  return (\r\n    <div className=\"containerLogin\">\r\n      <div className={classes.candoTopItem} > \r\n          <div className={classes.candoLogo} >\r\n            <img src=\"/assets/Component 24 – 53.svg\" alt=\"عکس زنبور\" width=\"50px\"/>\r\n          </div>\r\n          <div style={{marginRight:\"16px\"}}>\r\n            <h1 className={classes.candoTopTitle}>کندووان پلاس</h1>\r\n            <h2 className={classes.candoTopsubTitle}>مدیریت هوشمند زنبورستان</h2>\r\n          </div>\r\n        </div>\r\n      <div className=\"contact-form\">\r\n     {errMsg? <p ref={errRef} className=\"errmsg\" aria-live=\"assertive\">{errMsg}</p>:null}\r\n\r\n        {/* <img alt=\"\" className=\"avatar\" src=\"/assets/Untitled-1.svg\"/> */}\r\n        <h2>ورود</h2>\r\n        <p>\r\n          برای ورود به کندووان پلاس شماره تلفن همراه خود را وارد کنید تا کد\r\n          تائید برای شما پیامک شود\r\n        </p>\r\n\r\n        <TextField\r\n                  // InputProps={{\r\n                  //   color:\"red\",\r\n                  //   startAdornment: <InputAdornment style={{color:\"#000\"}} position=\"start\">kg</InputAdornment>,\r\n                  // }}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment\r\n                        position=\"end\"\r\n                        \r\n                      >\r\n                        <div style={{color:\"#000\",fontFamily:\"Shabnam\"}}>| 98+</div>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n          // style={{ direction: \"ltr\" }}\r\n          onChange={handleChangenumber}\r\n          \r\n          className={classes.TextField}\r\n          label=\"شماره موبایل\"\r\n          id=\"mobile\"\r\n          name=\"mobile\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n          {...register(\"mobile\")}\r\n          error={errors.mobile ? true : false}\r\n        />\r\n        <Typography\r\n          variant=\"inherit\"\r\n          color=\"textSecondary\"\r\n          style={{ color: \"rgb( 227 156 0)\" }}\r\n        >\r\n          {errors.mobile?.message}\r\n        </Typography>\r\n\r\n\r\n\r\n\r\n\r\n        {/* <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">شماره موبایل</InputLabel>\r\n          <OutlinedInput\r\n            style={{ direction: \"ltr\" }}\r\n            className={classes.TextField}\r\n            id=\"outlined-adornment-password\"\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n\r\n                  edge=\"end\"\r\n                >\r\n                        <div style={{color:\"#000\",fontFamily:\"Shabnam\"}}>| 98+</div>\r\n             </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            label=\"Password\"\r\n          />\r\n        </FormControl> */}\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.buttonLogin}\r\n          onClick={handleSubmit(onSubmit)}\r\n        >\r\n          دریافت کد تائید\r\n        </Button>\r\n\r\n        {/* <input placeholder=\"Enter Email\" type=\"email\"/>\r\n\t\t\t            <input placeholder=\"Enter Password\" type=\"password\"/> <input type=\"submit\" value=\"Sign in\"/>\r\n\t\t            \t<p><input type=\"checkbox\"/>Remember Me</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\themes\\default.js",["618","619"],"import tinycolor from \"tinycolor2\";\r\n\r\nconst primary = \"rgb(53 ,53 ,53)\";\r\nconst secondary = \"rgb( 255 ,176 ,4)\";\r\nconst warning = \"#FFC260\";\r\nconst success = \"#3CD4A0\";\r\nconst info = \"#9013FE\";\r\nconst red=\"red\";\r\nconst green=\"rgb(33 ,192, 99)\";\r\nconst blue=\"rgb(26 ,115 ,233)\"\r\nconst lightenRate = 7.5;\r\nconst darkenRate = 15;\r\n\r\nconst defaultTheme = {\r\n  direction: \"rtl\",\r\n  palette: {\r\n    primary: {\r\n      main: primary,\r\n      light: tinycolor(primary).lighten(lightenRate).toHexString(),\r\n      dark: tinycolor(primary).darken(darkenRate).toHexString(),\r\n    },\r\n    secondary: {\r\n      main: secondary,\r\n      light: tinycolor(secondary).lighten(lightenRate).toHexString(),\r\n      dark: tinycolor(secondary).darken(darkenRate).toHexString(),\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    warning: {\r\n      main: warning,\r\n      light: tinycolor(warning).lighten(lightenRate).toHexString(),\r\n      dark: tinycolor(warning).darken(darkenRate).toHexString(),\r\n    },\r\n    success: {\r\n      main: success,\r\n      light: tinycolor(success).lighten(lightenRate).toHexString(),\r\n      dark: tinycolor(success).darken(darkenRate).toHexString(),\r\n    },\r\n    info: {\r\n      main: info,\r\n      light: tinycolor(info).lighten(lightenRate).toHexString(),\r\n      dark: tinycolor(info).darken(darkenRate).toHexString(),\r\n    },\r\n    red: {\r\n      main: red,\r\n      light: tinycolor(red).lighten(lightenRate).toHexString(),\r\n      dark: tinycolor(red).darken(darkenRate).toHexString(),\r\n    },\r\n    green: {\r\n      main: green,\r\n      light: tinycolor(green).lighten(lightenRate).toHexString(),\r\n      dark: tinycolor(green).darken(darkenRate).toHexString(),\r\n    },\r\n    blue: {\r\n      main: blue,\r\n      light: tinycolor(blue).lighten(lightenRate).toHexString(),\r\n      dark: tinycolor(blue).darken(darkenRate).toHexString(),\r\n    },\r\n    text: {\r\n      primary: \"#4A4A4A\",\r\n      secondary: \"#6E6E6E\",\r\n      hint: \"#B9B9B9\",\r\n    },\r\n    background: {\r\n      default: \"rgb (240, 240, 240)\",\r\n      light: \"rgb( 255 ,176 ,4)\",\r\n    },\r\n  },\r\n  customShadows: {\r\n    widget:\r\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetDark:\r\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n    widgetWide:\r\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n  },\r\n  overrides: {\r\n    MuiBackdrop: {\r\n      root: {\r\n        backgroundColor: \"#4A4A4A1A\",\r\n      },\r\n    },\r\n\r\n    MuiMenu: {\r\n      list: {\r\n        backgroundColor: \"#fff\",\r\n        fontFamily: \"Shabnam\",\r\n        height: \"auto !important\",\r\n        \r\n      },\r\n      paper: {\r\n        boxShadow:\r\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\r\n          \r\n \r\n      },\r\n    },\r\n\r\n    MuiSelect: {\r\n      icon: {\r\n        color: \"#B9B9B9\",\r\n      },\r\n    },\r\n    \r\n    MuiList: {\r\n      padding: {\r\n        paddingTop: \"0px !important\",\r\n        height:\"5000px\"\r\n      },\r\n      root: {\r\n        backgroundColor: primary,\r\n    \r\n      },\r\n    },\r\n\r\n    MuiListItem: {\r\n      root: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        \"&$selected\": {\r\n          backgroundColor: \"#F3F5FF !important\",\r\n          \"&:focus\": {\r\n            backgroundColor: \"#F3F5FF\",\r\n          },\r\n        },\r\n      },\r\n      gutters: {\r\n        margin: \" 0 20px\",\r\n        width: \"85%\",\r\n        borderRadius: \"10px\",\r\n        marginTop: \"12px\",\r\n        padding: \"2px 0px !important\",\r\n      },\r\n      button: {\r\n        \"&:hover, &:focus\": {\r\n          backgroundColor: \"#F3F5FF\",\r\n        },\r\n      },\r\n    },\r\n\r\n    MuiSvgIcon: {\r\n\r\n    },\r\n    MuiTouchRipple: {\r\n      child: {\r\n        backgroundColor: \"white\",\r\n      },\r\n    },\r\n    MuiTableRow: {\r\n      root: {\r\n        height: 56,\r\n      },\r\n    },\r\n    MuiTableCell: {\r\n      root: {\r\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\r\n        padding: \"16px 0px\",\r\n        // border:\"2px solid red\"\r\n\r\n      },\r\n      head: {\r\n        fontSize: \"0.95rem\",\r\n        textAlign: \"right \",\r\n        fontFamily: \"Shabnam\",\r\n        // border:\"2px solid green\",\r\n        textAlign: \"center !important\",\r\n        },\r\n      body: {\r\n        fontSize: \"0.95rem\",\r\n        color:\"#000\",\r\n        //مهم\r\n        textAlign: \"center !important\",\r\n        //\r\n        fontFamily: \"Shabnam\",\r\n        // border:\"2px solid blue\",\r\n\r\n\r\n      },\r\n      alignLeft:{\r\n        textAlign:\"center !important\",\r\n        fontFamily:\"Shabnam\",\r\n      //  border:\"2px solid red\"\r\n      },\r\n      alignLeft:{\r\n        textAlign:\"center !important\",\r\n        fontFamily:\"Shabnam\"\r\n      },\r\n    },\r\n    MuiTypography: {\r\n      root: {\r\n        fontFamily: \"Shabnam !important\",\r\n      },\r\n    },\r\n\r\n    MuiListItemText: {\r\n      root: {\r\n        textAlign: \"left !important\",\r\n      },\r\n    },\r\n\r\n    MUIDataTable: {\r\n      responsiveStacked: {\r\n        overflowX: \"hidden !important\",\r\n      },\r\n    },\r\n\r\n    MuiDivider: {\r\n      root: {\r\n        margin: \"0 16px\",\r\n      },\r\n    },\r\n\r\n    MuiFormHelperText: {\r\n      root: {\r\n        textAlign: \"left\",\r\n        fontFamily: \"Shabnam\",\r\n      },\r\n    },\r\n\r\n    PrivateSwitchBase: {\r\n      root: {\r\n        marginLeft: 10,\r\n      },\r\n    },\r\n    ForwardRef:{\r\n      iconButtonHidden:{\r\n\r\n      }\r\n    },\r\n    MuiAccordionSummary:{\r\n      root:{\r\n        padding:\"0\"\r\n      }\r\n        \r\n    },\r\n\r\n    MuiOutlinedInput:{\r\n      adornedEnd:{\r\n        height:\" 40px\"\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\nexport default defaultTheme;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\login\\styles.js",["620"],"import { makeStyles } from \"@material-ui/styles\";\r\nimport Image from \"./Untitled-1.png\"; // Import using relative path\r\n\r\nexport default makeStyles((theme) => ({\r\n  buttonLogin: {\r\n    padding: \"8px 0\",\r\n    backgroundColor: \"rgb( 227 156 0  ) \",\r\n    color: \"#fff\",\r\n    width: \"100%\",\r\n    marginTop: \"32px\",\r\n    borderRadius: \"8px\",\r\n    fontFamily: \"Shabnam\",\r\n    fontWeight: \"600\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 227 156 0  ) \",\r\n    },\r\n  },\r\n  TextField: {\r\n    width: \"100%\",\r\n    background: \"rgb( 244 244 244)\",\r\n    border: \"none\",\r\n    borderRadius: \"10px\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"orange !important\",\r\n      borderRadius: \"10px\",\r\n      fontSize:\"16px\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n        borderRadius: \"10px\",\r\n      },\r\n    },\r\n  },\r\n  ButtonAndLoading: {\r\n\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  loginLoader: {\r\n marginTop:\"16px\",\r\n    color: \"red\",\r\n  },\r\n  candoTopItem:{\r\n    position:\"absolute\",\r\n    display:\"flex\",\r\n    fontSize:\"0.5rem\",\r\n    color:\"#000\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    margin:\"16px\"\r\n  },\r\n  candoTopTitle: {\r\n    fontWeight:\"600\",\r\n    color:\"#000\"\r\n  },\r\n  candoTopsubTitle:{\r\n    fontWeight:\"600\",\r\n    color:\"rgb(52,52,52)\"\r\n  },\r\n  //   /////////////////////////\r\n  //   container :{\r\n  //     // backgroundImage: `url(/Untitled-1.png)`,    backgroundPosition : \"center center\",\r\n  //     // border:\"5px solid red\",\r\n  //     background: \"red\",\r\n  //     // height:\"100vh\",\r\n  //     // width:\"100vw\",\r\n  //     '&::before':{\r\n  //     content: '',\r\n  //     position: \"fixed\",\r\n  //     width: \"100vw\",\r\n  //     height: \"100vh\",\r\n  //     background:\"red\",\r\n  //     border:\"10px solid red\",\r\n  //     backgroundImage: `url(${Image})`,\r\n  //     backgroundPosition : \"center center\",\r\n  //     backgroundRepeat: \"no-repeat\",\r\n  //     backgroundAttachment: \"fixed\",\r\n  // //  -webkit-background-size: \"cover\",\r\n  //     backgroundSize: \"cover\",\r\n  //     // -webkit-filter: blur(10px),\r\n  //     // -moz-filter: blur(10px),\r\n  //     filter: \"blur(10px)\",\r\n  //   }},\r\n\r\n  //   contactForm:{\r\n  //     position: \"absolute\",\r\n  //     top: \"50%\",\r\n  //     left: \"50%\",\r\n  //     transform: \"translate(-50%, -50%)\",\r\n  //     width: \"400px\",\r\n  //     height: \"350px\",\r\n  //     padding: \"80px 40px\",\r\n  //     background: \"rgba(0, 0, 0, 0.5)\",\r\n  //   },\r\n\r\n  ///////////////////////\r\n\r\n  // container: {\r\n  //   height: \"100vh\",\r\n  //   width: \"100vw\",\r\n  //   display: \"flex\",\r\n  //   justifyContent: \"center\",\r\n  //   alignItems: \"center\",\r\n  //   position: \"absolute\",\r\n  //   top: 0,\r\n  //   left: 0,\r\n  // },\r\n  // logotypeContainer: {\r\n  //   backgroundColor: theme.palette.primary.main,\r\n  //   width: \"60%\",\r\n  //   height: \"100%\",\r\n  //   display: \"flex\",\r\n  //   flexDirection: \"column\",\r\n  //   justifyContent: \"center\",\r\n  //   alignItems: \"center\",\r\n  //   [theme.breakpoints.down(\"md\")]: {\r\n  //     width: \"50%\",\r\n  //   },\r\n  //   [theme.breakpoints.down(\"md\")]: {\r\n  //     display: \"none\",\r\n  //   },\r\n  // },\r\n  // logotypeImage: {\r\n  //   width: 165,\r\n  //   marginBottom: theme.spacing(4),\r\n  // },\r\n  // logotypeText: {\r\n  //   color: \"white\",\r\n  //   fontWeight: 500,\r\n  //   fontSize: 84,\r\n  //   [theme.breakpoints.down(\"md\")]: {\r\n  //     fontSize: 48,\r\n  //   },\r\n  // },\r\n  // formContainer: {\r\n  //   width: \"40%\",\r\n  //   height: \"100%\",\r\n  //   display: \"flex\",\r\n  //   flexDirection: \"column\",\r\n  //   justifyContent: \"center\",\r\n  //   alignItems: \"center\",\r\n  //   [theme.breakpoints.down(\"md\")]: {\r\n  //     width: \"50%\",\r\n  //   },\r\n  // },\r\n  // form: {\r\n  //   width: 320,\r\n  // },\r\n  // tab: {\r\n  //   fontWeight: 400,\r\n  //   fontSize: 18,\r\n  // },\r\n  // greeting: {\r\n  //   fontWeight: 500,\r\n  //   textAlign: \"center\",\r\n  //   marginTop: theme.spacing(4),\r\n  // },\r\n  // subGreeting: {\r\n  //   fontWeight: 500,\r\n  //   textAlign: \"center\",\r\n  //   marginTop: theme.spacing(2),\r\n  // },\r\n  // googleButton: {\r\n  //   marginTop: theme.spacing(6),\r\n  //   boxShadow: theme.customShadows.widget,\r\n  //   backgroundColor: \"white\",\r\n  //   width: \"100%\",\r\n  //   textTransform: \"none\",\r\n  // },\r\n  // googleButtonCreating: {\r\n  //   marginTop: 0,\r\n  // },\r\n  // googleIcon: {\r\n  //   width: 30,\r\n  //   marginRight: theme.spacing(2),\r\n  // },\r\n  // creatingButtonContainer: {\r\n  //   marginTop: theme.spacing(2.5),\r\n  //   height: 46,\r\n  //   display: \"flex\",\r\n  //   justifyContent: \"center\",\r\n  //   alignItems: \"center\",\r\n  // },\r\n  // createAccountButton: {\r\n  //   height: 46,\r\n  //   textTransform: \"none\",\r\n  // },\r\n  // formDividerContainer: {\r\n  //   marginTop: theme.spacing(4),\r\n  //   marginBottom: theme.spacing(4),\r\n  //   display: \"flex\",\r\n  //   alignItems: \"center\",\r\n  // },\r\n  // formDividerWord: {\r\n  //   paddingLeft: theme.spacing(2),\r\n  //   paddingRight: theme.spacing(2),\r\n  // },\r\n  // formDivider: {\r\n  //   flexGrow: 1,\r\n  //   height: 1,\r\n  //   backgroundColor: theme.palette.text.hint + \"40\",\r\n  // },\r\n  // errorMessage: {\r\n  //   textAlign: \"center\",\r\n  // },\r\n  // textFieldUnderline: {\r\n  //   \"&:before\": {\r\n  //     borderBottomColor: theme.palette.primary.light,\r\n  //   },\r\n  //   \"&:after\": {\r\n  //     borderBottomColor: theme.palette.primary.main,\r\n  //   },\r\n  //   \"&:hover:before\": {\r\n  //     borderBottomColor: `${theme.palette.primary.light} !important`,\r\n  //   },\r\n  // },\r\n  // textField: {\r\n  //   borderBottomColor: theme.palette.background.light,\r\n  // },\r\n  // formButtons: {\r\n  //   width: \"100%\",\r\n  //   marginTop: theme.spacing(4),\r\n  //   display: \"flex\",\r\n  //   justifyContent: \"space-between\",\r\n  //   alignItems: \"center\",\r\n  // },\r\n  // forgetButton: {\r\n  //   textTransform: \"none\",\r\n  //   fontWeight: 400,\r\n  // },\r\n  // loginLoader: {\r\n  //   marginLeft: theme.spacing(4),\r\n  // },\r\n  // copyright: {\r\n  //   marginTop: theme.spacing(4),\r\n  //   whiteSpace: \"nowrap\",\r\n  //   [theme.breakpoints.up(\"md\")]: {\r\n  //     position: \"absolute\",\r\n  //     bottom: theme.spacing(2),\r\n  //   },\r\n  // },\r\n}));\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\error\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\ErrorBoundary\\ErrorBoundary.js",["621"],"import { Button } from '@material-ui/core'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport React,{Component} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    \r\n    // state = {hasError:false}\r\n\r\n    // componentDidCatch(error,errorInfo){\r\n    //     if(error){\r\n    //         this.setState({hasError:true})\r\n    //     }\r\n    //     return this.props.children\r\n    // }\r\n    render(){\r\n\r\n            return (\r\n              <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"90%\"}}>\r\n              <h1>پوزش خطایی رخ داده است لطفا از وصل بودن اینترنت خود مطمئن شوید. </h1>\r\n              <h2>برای ادامه روی دکمه زیر کلیک کنید</h2>\r\n            <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component={Link}\r\n            to=\"/\"\r\n            size=\"large\"\r\n            style={{\r\n                background:\"orange\",\r\n                color:\"#000\"\r\n            }}\r\n          >\r\n            برگشت به خانه\r\n          </Button>\r\n          </div>\r\n     \r\n            )\r\n    }\r\n \r\n}\r\n\r\nexport default ErrorBoundary","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\tutorialPage\\tutorialPage.js",["622"],"import React from 'react'\r\nimport \"./style.css\"\r\nfunction tutorialPage() {\r\n    alert(\"درحال بارگیری آپارات کندووان پلاس. لطفا چند لحظه صبر کنید:)\")\r\n  return (\r\n<div className=\"container\">\r\n<div className=\"h_iframe-aparat_embed_frame\"><span style={{ \"display\": \"block\",\"paddingTop\": \"57%\" }}></span><iframe src=\"https://www.aparat.com/video/video/embed/videohash/DzRia/vt/frame\" allowFullScreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\"></iframe></div>\r\n </div> )\r\n}\r\n\r\nexport default tutorialPage\r\n\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\main.js",["623","624","625","626","627","628","629","630","631","632","633","634","635"],"import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport AddJob from \"../../../components/Form/JobUser/AddJob\";\r\nimport Title from \"../../../components/Typography/Title/Title\";\r\nimport CalenderProject from \"./CalenderProject\";\r\nimport JobCalender from \"./JobCalender/JobCalender\";\r\nimport useStyles from \"./style\";\r\n\r\nfunction Main() {\r\n  const [open, setOpen] = useState(false);\r\n  const [scroll, setScroll] = useState(\"paper\");\r\n  let { path, url } = useRouteMatch();\r\n  const classes = useStyles();\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n      /////////////////////////////////////////////////////////////////////////////////////////\r\n  \r\n      const token = localStorage.getItem(\"id_token\")\r\n   console.log(token);\r\n      useEffect(() => {\r\n        const fetchData = async () =>{\r\n          // setLoading(true);\r\n          try {\r\n            const {data: response} = await axios.post(\"http://185.202.113.165:3000/api/event/GetForMonth\",{ \"date\":\"1401/03/01\"},{\r\n              headers: {\r\n                'token': `${token}` \r\n              },\r\n            },);\r\n            console.log( \"show response\" , response.data);\r\n            // setApiariesList(response.data )\r\n            // setLoading(false)\r\n          } catch (error) {\r\n          //  if (error.response?.status === 401) {\r\n          //    localStorage.clear(\"id_token\")\r\n          //  }\r\n           console.error(\"سرور دچار مشکل شده است\"+\"ApiaryList\");\r\n          //  setErrMessage(\"  با عرض پوزش سرور دچار مشکل شده است\")\r\n          //  setIserror(true)\r\n          //  history.push(\"/app/Error\")\r\n          //  window.location.reload()\r\n          }\r\n          // setLoading(false);\r\n        }\r\n        fetchData();\r\n      }, []);\r\n   \r\n\r\n      /////////////////////////////////////////////////////////////////////////////////////////\r\n      \r\n  const descriptionElementRef = React.useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <Grid container className={classes.container}>\r\n        <Title title=\"تقویم کاری\" style={{ fontSize: \"2rem\" }} variant=\"h5\" />\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Grid item onClick={handleClickOpen(\"body\")}>\r\n            <img\r\n              style={{\r\n                flex: \"1\",\r\n                backgroundColor: \"rgb( 227, 156, 0)\",\r\n                cursor: \"pointer\",\r\n                color: \"#000\",\r\n                padding: \"8px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                borderRadius: \"8px\",\r\n              }}\r\n              src=\"/assets/Group 182.svg\"\r\n              alt=\"\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={3} sm={3} className={classes.TabHeader}>\r\n            <Grid>\r\n              <NavLink\r\n                exact\r\n                to={`${url}`}\r\n                className={classes.item}\r\n                activeClassName={classes.activeItem}\r\n              >\r\n                تقویم\r\n              </NavLink>\r\n            </Grid>\r\n            <Grid>\r\n              <NavLink\r\n                to={`${url}/Jobs`}\r\n                className={classes.item}\r\n                activeClassName={classes.activeItem}\r\n              >\r\n                کارها\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <Switch>\r\n            <Route exact path={`${path}`}>\r\n              <CalenderProject open={open}  handleClose={handleClose} scroll={scroll}/>\r\n            </Route>\r\n            <Route path={`${path}/Jobs`}>\r\n              <JobCalender />\r\n            </Route>\r\n          </Switch>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"md\"\r\n      >\r\n        <AddJob handleClose={handleClose} />\r\n      </Dialog> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\CalenderProject.js",["636"],"// import React from 'react'\r\n// import { Calendar } from '@fullcalendar/core';\r\n// import dayGridPlugin from '@fullcalendar/daygrid';\r\n// import timeGridPlugin from '@fullcalendar/timegrid';\r\n// import listPlugin from '@fullcalendar/list';\r\n// function CalenderProject() {\r\n//     let calendar = new Calendar(calendarEl, {\r\n//         plugins: [ dayGridPlugin, timeGridPlugin, listPlugin ],\r\n//         initialView: 'dayGridMonth',\r\n//         headerToolbar: {\r\n//           left: 'prev,next today',\r\n//           center: 'title',\r\n//           right: 'dayGridMonth,timeGridWeek,listWeek'\r\n//         }\r\n//       });\r\n// }\r\n\r\n// export default CalenderProject\r\n\r\nimport React from \"react\";\r\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { INITIAL_EVENTS, createEventId } from \"./event-utils\";\r\nimport allLocales from \"@fullcalendar/core/locales-all\";\r\nimport \"./CalenderProject.css\";\r\n\r\nimport FilterCalender from \"./FilterCalender\";\r\nimport AddJob from \"../../../components/Form/JobUser/AddJob\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n// import moment from \"moment\";\r\nimport moment from \"jalali-moment\";\r\nexport default class CalenderProject extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.calenderRef = React.createRef(null);\r\n  }\r\n  state = {\r\n    weekendsVisible: true,\r\n    currentEvents: [],\r\n    open:true,\r\n    events:[\r\n      { title: 'event 1', start: '2022-06-11' , end:\"2022-06-18\" },\r\n      { title: 'event 2', date: '2022-06-13' }\r\n    ],\r\n    days:[]\r\n\r\n  };\r\n\r\n  \r\n  handleClose = () => {\r\n    this.setState({\r\n      open:false\r\n    });\r\n  };\r\n  \r\n  onEventAdded = async(event) => {\r\n\r\n\r\n    const token = localStorage.getItem(\"id_token\")\r\n    console.log(\"data.event bar\",event);\r\n    const title= event.title\r\n    // const fromDate =event.fromDate\r\n    const fromDate = moment(event.fromDate).locale('fa').format('YYYY/MM/DD')\r\n    console.log(fromDate);\r\n    const toDate = moment(event.toDate).locale('fa').format('YYYY/MM/DD')\r\n    const fromTime = event.fromTime\r\n    const toTime = event.toTime\r\n    const category = event.category\r\n    const priority = event.priority\r\n    const user = event.user._id\r\n    console.log(\"user\",user);\r\n    await axios.post(\"http://185.202.113.165:3000/api/event\",{\r\n      \"title\": `${title}` ,\r\n      \"fromDate\": `${fromDate}`,\r\n      \"toDate\": `${toDate}`,\r\n      \"fromTime\": `${fromTime}`,\r\n      \"toTime\": `${toTime}`,\r\n      \"category\": `${category}`,\r\n      \"priority\":`${priority}`,\r\n      \"user\":{\"_id\":`${user}`}\r\n    },{\r\n      headers: {\r\n        'token': `${token}` \r\n      },\r\n    },).then((response)=>{console.log(\"response1\",response)})\r\n\r\n\r\n\r\n\r\n\r\n    console.log(\"onEventAdded\",event);\r\n    let calenderApi = this.calenderRef.current.getApi();\r\n    console.log(\"calenderApi\",calenderApi);\r\n\r\n    calenderApi.addEvent({\r\n      start:moment(event.fromDate).toDate(),\r\n      end:moment(event.toDate).toDate(),\r\n      fromTime:event.fromTime,\r\n      toTime:event.toTime,\r\n      title:event.title,\r\n\r\n\r\n    });\r\n    console.log(\"event\", event);\r\n  };\r\n\r\n  async handleEventAdd(data) {\r\n    console.log(\"handleEventAdd\",data);\r\n  // const token = localStorage.getItem(\"id_token\")\r\n  //   console.log(\"data.event bar\",data.event);\r\n  //  await axios.post(\"http://185.202.113.165:3000/api/event\",data.event,{\r\n  //     headers: {\r\n  //       'token': `${token}` \r\n  //     },\r\n  //   },).then((response)=>{console.log(\"response1\",response)})\r\n\r\n  }\r\n   async handleDateSet(data) {\r\n    const token = localStorage.getItem(\"id_token\")\r\n    console.log(\"handleDateSet\",data);\r\n    const response = await axios.post(\"http://185.202.113.165:3000/api/event/GetForMonth?start=\"+moment(data.start).toISOString()+\"&end\"+moment(data.end).toISOString(),{\r\n      \"date\":\"1401/03/01\"\r\n  },{\r\n      headers: {\r\n        'token': `${token}` \r\n      },\r\n    },).then((respon)=>{   \r\n      console.log(\"respon.data.data\",respon.data.data); \r\n      this.setState({\r\n       events:respon.data.data\r\n    });})\r\n    console.log(\"response.data\",response);\r\n\r\n\r\n  }\r\n   \r\n\r\n  //     /////////////////////////////////////////////////////////////////////////////////////////\r\n  \r\n  //     const token = localStorage.getItem(\"id_token\")\r\n  //  console.log(token);\r\n  //     useEffect(() => {\r\n  //       const fetchData = async () =>{\r\n  //         // setLoading(true);\r\n  //         try {\r\n  //           const {data: response} = await axios.post(\"http://185.202.113.165:3000/api/event/GetForMonth\",{ \"date\":\"1401/03/01\"},{\r\n  //             headers: {\r\n  //               'token': `${token}` \r\n  //             },\r\n  //           },);\r\n  //           console.log( \"show response\" , response.data);\r\n  //           // setApiariesList(response.data )\r\n  //           // setLoading(false)\r\n  //         } catch (error) {\r\n  //         //  if (error.response?.status === 401) {\r\n  //         //    localStorage.clear(\"id_token\")\r\n  //         //  }\r\n  //          console.error(\"سرور دچار مشکل شده است\"+\"ApiaryList\");\r\n  //         //  setErrMessage(\"  با عرض پوزش سرور دچار مشکل شده است\")\r\n  //         //  setIserror(true)\r\n  //         //  history.push(\"/app/Error\")\r\n  //         //  window.location.reload()\r\n  //         }\r\n  //         // setLoading(false);\r\n  //       }\r\n  //       fetchData();\r\n  //     }, []);\r\n   \r\n\r\n  //     /////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"demo-app\">\r\n        {/* <AddJob  onEventAdded={event=>this.onEventAdded(event)} /> */}\r\n         <div className=\"demo-app-main\">\r\n          <FullCalendar\r\n            ref={this.calenderRef}\r\n            initialView=\"dayGridMonth\"\r\n            locales={allLocales}\r\n            locale=\"fa\"\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            headerToolbar={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n            }}\r\n            columnHeader={false}\r\n            editable={true}\r\n            selectable={true}\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            weekends={this.state.weekendsVisible}\r\n            initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n            select={this.handleDateSelect}\r\n            timeZone=\"iran/Tehran\"\r\n            events={function(info, successCallback, failureCallback) {\r\n              const token = localStorage.getItem(\"id_token\")\r\n              moment.locale('en'); // default locale is en\r\n              const m = moment('1989/1/24', 'YYYY/M/D');\r\n              m.locale('fa'); // change locale for this moment instance\r\n              m.format('YYYY/M/D');\r\n              console.log(\"m\",m);\r\n                            return axios.post('http://185.202.113.165:3000/api/event/GetForMonth',{ \"date\":\"1401/03/01\"},{\r\n                            headers: {\r\n                              'token': `${token}` \r\n                            },\r\n              },).then((respone)=>\r\n                 respone.data.data.map((el)=>{\r\n                  console.log(\"el,el\",el);\r\n                   console.log(\"Sdfsdfs\",new Date(\"1400-12-04\"));\r\n                   const day=\"2022-06-14\"\r\n                  return {\r\n                    start:day,\r\n                    end:\"2022-06-20\",\r\n                    title:el.title\r\n                  }\r\n              })\r\n              )\r\n\r\n            }}\r\n            eventAdd={(event) => this.handleEventAdd(event)}\r\n            datesSet={(event) => this.handleDateSet(event)}\r\n            eventContent={renderEventContent} // custom render function\r\n            eventClick={this.handleEventClick}\r\n            // eventsSet={this.handleEvents} \r\n            \r\n            \r\n            // called after events are initialized/added/changed/removed\r\n            /* you can update a remote database when these fire:\r\n            eventAdd={function(){}}\r\n            eventChange={function(){}}\r\n            eventRemove={function(){}}\r\n            */\r\n            //css class\r\n            color\r\n            eventColor=\"red\"\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className=\"demo-app-left\"\r\n          style={{ marginRight: \"16px\", borderRadius: \"16px\" }}\r\n        >\r\n          <FilterCalender />\r\n        </div>\r\n\r\n        <Dialog\r\n        open={this.props.open}\r\n        onClose={this.props.handleClose}\r\n        scroll={this.props.scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"md\"\r\n      >\r\n             <AddJob handleClose={this.props.handleClose}  onEventAdded={event=>this.onEventAdded(event)}/>\r\n      </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //   renderSidebar() {\r\n  //     return (\r\n  //       <div className='demo-app-sidebar'>\r\n  //         <div className='demo-app-sidebar-section'>\r\n  //           <h2>Instructions</h2>\r\n  //           <ul>\r\n  //             <li>Select dates and you will be prompted to create a new event</li>\r\n  //             <li>Drag, drop, and resize events</li>\r\n  //             <li>Click an event to delete it</li>\r\n  //           </ul>\r\n  //         </div>\r\n  //         <div className='demo-app-sidebar-section'>\r\n  //           <label>\r\n  //             <input\r\n  //               type='checkbox'\r\n  //               checked={this.state.weekendsVisible}\r\n  //               onChange={this.handleWeekendsToggle}\r\n  //             ></input>\r\n  //             toggle weekends\r\n  //           </label>\r\n  //         </div>\r\n  //         <div className='demo-app-sidebar-section'>\r\n  //           <h2>All Events ({this.state.currentEvents.length})</h2>\r\n  //           <ul >\r\n  //             {this.state.currentEvents.map(renderSidebarEvent)}\r\n  //           </ul>\r\n  //         </div>\r\n  //       </div>\r\n  //     )\r\n  //   }\r\n\r\n  handleWeekendsToggle = () => {\r\n    this.setState({\r\n      weekendsVisible: !this.state.weekendsVisible,\r\n    });\r\n  };\r\n\r\n  handleDateSelect = (selectInfo) => {\r\n    //add line in table\r\n    let title = prompt(\"لطفا نام ایونت خود را انتخاب کنید\");\r\n    let calendarApi = selectInfo.view.calendar;\r\n\r\n    calendarApi.unselect(); // clear date selection\r\n\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: createEventId(),\r\n        title,\r\n        start: selectInfo.startStr,\r\n        end: selectInfo.endStr,\r\n        allDay: selectInfo.allDay,\r\n      });\r\n    }\r\n    console.log(\"calendarApi\", calendarApi);\r\n  };\r\n\r\n  handleEventClick = (clickInfo) => {\r\n    if (\r\n      window.confirm(\r\n        `آیا شما میخواهید این ایونت را حذف کنید؟ '${clickInfo.event.title}'`,\r\n      )\r\n    ) {\r\n      clickInfo.event.remove();\r\n    }\r\n    // alert(clickInfo)\r\n  };\r\n\r\n  handleEvents = (events) => {\r\n    console.log(\"handleEvents\",events);\r\n    this.setState({\r\n      currentEvents: events,\r\n    });\r\n  };\r\n}\r\n\r\n\r\nfunction renderEventContent(eventInfo) {\r\n  console.log(\"eventInfo\",eventInfo);\r\n  \r\n  return (\r\n    <>\r\n      <b>{eventInfo.timeText}</b>\r\n      <i>{eventInfo.event.title}</i>\r\n    </>\r\n  );\r\n}\r\n\r\n// function renderSidebarEvent(event) {\r\n//   console.log(event);\r\n//   return (\r\n//     <li key={event.id}>\r\n//       <b>\r\n//         {formatDate(event.start, {\r\n//           year: \"numeric\",\r\n//           month: \"short\",\r\n//           day: \"numeric\",\r\n//         })}\r\n//       </b>\r\n//       <i>{event.title}</i>\r\n//     </li>\r\n//   );\r\n// }\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\JobCalender\\JobCalender.js",["637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678"],"\r\n\r\n\r\n\r\n\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    Fade,\r\n    Grid,\r\n    IconButton,\r\n    MenuItem,\r\n    Modal,\r\n    Popover,\r\n    Popper,\r\n    Select,\r\n    Typography,\r\n  } from \"@material-ui/core\";\r\n  import React, { Children, useEffect, useState } from \"react\";\r\n  import PageTitle from \"../../../../components/PageTitle/PageTitle\";\r\n  import axios from \"axios\";\r\n  import { makeStyles } from \"@material-ui/styles\";\r\n//   import \"./ApiaryList.css\";\r\n  import XLSX from \"xlsx\";\r\n  import { Delete, Edit, Edit as EditIcon, MoreVertOutlined, Share } from \"@material-ui/icons\";\r\n  import { Link } from \"react-router-dom\";\r\n  import MaterialTable, { MTableToolbar } from \"material-table\";\r\n  import CompanyAddList from \"../../../../components/Form/ApiaryList/ApiaryAddList\";\r\n  import SearchBar from \"material-ui-search-bar\";\r\n  import PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\r\n  import jsPDF from \"jspdf\";\r\n  import \"jspdf-autotable\";\r\n  import \"../../../../Iran-Sans-normal\";\r\n  import ApiaryAddList from \"../../../../components/Form/ApiaryList/ApiaryAddList\";\r\n  import ApiaryUpdateList from \"../../../../components/Form/ApiaryList/ApiaryUpdateList\";\r\n  import Adduser from \"../../../../components/Form/User/Adduser\";\r\n  import useStyles from \"../style\"; \r\n  import {\r\n    BrowserRouter as Router,\r\n\r\n    NavLink,\r\n    useRouteMatch,\r\n  } from \"react-router-dom\"\r\nimport AddJob from \"../../../../components/Form/JobUser/AddJob\";\r\n  function  JobCalender() {\r\n    const [open, setOpen] = useState(false);\r\n    const [openEdit, setOpenEdit] = useState(false);\r\n    const [downloadOpen, setdownloadOpen] = useState(false);\r\n  \r\n    const [selectedRows, setSelectedRows] = useState();\r\n  \r\n    const [toolbar, setToolbar] = useState(false);\r\n    const [scroll, setScroll] = useState('paper');\r\n    const[Hive,setHive]=useState(\"all\")\r\n    const[State,setState]=useState(\"all\")\r\n    const[Priority,setPriority]=useState(\"all\")\r\n    const handleClickOpen = (scrollType) => () => {\r\n      setOpenEdit(true);\r\n      setScroll(scrollType);\r\n      setOpen(true)\r\n    };\r\n    useEffect(()=>{\r\n      console.log(\"Hive\",Hive)\r\n    },[Hive])\r\n    useEffect(()=>{\r\n      console.log(\"State\",State)\r\n    },[State])\r\n    useEffect(()=>{\r\n      console.log(\"Priority\",Priority)\r\n    },[Priority])\r\n\r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleEditOpen = () => {\r\n      setOpenEdit(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setdownloadOpen(false);\r\n      setOpenEdit(false)\r\n    };\r\n    const style = {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      overflow:'scroll',\r\n      width: 400,\r\n      bgcolor: \"background.paper\",\r\n      borderRadius:\"16px\",\r\n      boxShadow: 24,\r\n      pt: 2,\r\n      px: 4,\r\n      pb: 3,\r\n    };\r\n  \r\n    const [Company, setCompany] = useState([\r\n      {\r\n        id: \"0\",\r\n        Priority: \"الویت\",\r\n        title: \"عنوان کار\",\r\n        Beehive: \"زنبورستان ۱\",\r\n        Hive: \"کندوی ۱\",\r\n        StartDate: \"1400/09/23\",\r\n        EndDate: \"1400/09/23\",\r\n        State: \"0\",\r\n        Action: \"عملیات\",\r\n      },\r\n      {\r\n        id: \"1\",\r\n        Priority: \"الویت\",\r\n        title: \"عنوان کار\",\r\n        Beehive: \"زنبورستان ۲\",\r\n        Hive: \"کندوی ۲\",\r\n        StartDate: \"1400/09/23\",\r\n        EndDate: \"1400/09/23\",\r\n        State: \"1\",\r\n        Action: \"عملیات\",\r\n      },\r\n\r\n    ]);\r\n  \r\n\r\n    \r\n    const classes = useStyles();\r\n  \r\n    console.log(Company);\r\n    const columns = [\r\n  \r\n      {\r\n        title: \"الویت\",\r\n        field: \"Priority\",\r\n        validate: (rowDate) => {\r\n          if (rowDate.Priority === undefined || rowDate.Priority === \"\") {\r\n            return \"این فیلد ضروری است\";\r\n          } else if (rowDate.Priority.length < 2) {\r\n            return \"نام شما حداقل باید دارای دو کاراکتر باشد\";\r\n          }\r\n          return true;\r\n        },\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n  \r\n        render: (rowData) => {\r\n          console.log(\"rowData\", rowData);\r\n          return (\r\n            <Link to={`/app/Beehive/${rowData.id}`} className=\"title\" style={{ display: \"flex\"}}>\r\n              <p className=\"title\">{rowData.Priority}</p>\r\n            </Link>\r\n          );\r\n        },\r\n      },\r\n  \r\n      {\r\n        title: \"عنوان\",\r\n        field: \"title\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return <p className=\"description\">{rowData.title}</p>;\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"زنبورستان\",\r\n        field: \"Beehive\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return <p className=\"description\">{rowData.Beehive}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \" کندو\",\r\n        field: \"Hive\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return <p className=\"description\">{rowData.Hive}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"از تاریخ\",\r\n        field: \"StartDate\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return <div>{rowData.StartDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        title: \"تا تاریخ\",\r\n        field: \"EndDate\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return <p>{rowData.EndDate}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"وضعیت \",\r\n        field: \"State\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return (\r\n            <div className={rowData.State ? \"jobActive\" : \"jobDeactive\"}>\r\n              {rowData.State ? (              \r\n                <img src=\"/assets/check-svgrepo-com (2).png\" />\r\n              ) : (\r\n                <img src=\"/assets/Group 11034.png\" />\r\n              )}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"عملیات\",\r\n        field: \"thumbnail\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return (\r\n            // <Link to={`/app/CompanyList/${rowData.id}`}>\r\n            <div>\r\n              <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                {(popupState) => (\r\n                  <div>\r\n                    <MoreVertOutlined variant=\"contained\" {...bindTrigger(popupState)} style={{cursor:\"pointer\"}}/>\r\n  \r\n                   \r\n                    <Popover\r\n                          {...bindPopover(popupState)}\r\n                          anchorOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"center\",\r\n                          }}\r\n                          transformOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"center\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n                          >\r\n                            <Link\r\n                             onClick={handleClickOpen('body')}\r\n                              style={{\r\n                            \r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n                              }}\r\n                            >\r\n                              <Edit style={{ marginLeft: \"16px\" }} />\r\n                              ویرایش\r\n                            </Link>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                                \r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                              }}\r\n                            >\r\n                              <Share style={{ marginLeft: \"16px\" }} />\r\n                              اشتراک گذاری\r\n                            </div>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                          \r\n                              }}\r\n                            >\r\n                              <img src=\"/assets/move-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                              انتقال\r\n                            </div>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                color:\"red\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                              }}\r\n                              onClick={() => onRowDelete(rowData)}\r\n                            >\r\n                              <img src=\"/assets/trash-svgrepo-com-2.svg\" style={{ margin: \"0 0px 0 24px\" }} />\r\n                              حذف\r\n                            </div>\r\n                          </div>\r\n                    </Popover>\r\n                  </div>\r\n                )}\r\n              </PopupState>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  \r\n    //downloadExcel\r\n    const downloadFile = () => {\r\n      setdownloadOpen(true);\r\n    };\r\n    const downloadExcel = () => {\r\n      const newData = Company.map((row) => {\r\n        delete row.tableData;\r\n        return row;\r\n      });\r\n      const workSheet = XLSX.utils.json_to_sheet(newData);\r\n      const workBook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workBook, workSheet, \"students\");\r\n      //Buffer\r\n      let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n      //Binary string\r\n      XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n      //Download\r\n      XLSX.writeFile(workBook, \"StudentsData.xlsx\");\r\n    };\r\n    const [searched, setSearched] = useState();\r\n  \r\n    const requestSearch = (searchedVal) => {\r\n      const filteredRows = Company.map((rows) => {\r\n        return rows.name;\r\n        // console.log(\"rows.title\",rows)\r\n      }).filter((row) => {\r\n        return row.toLowerCase().includes(searchedVal.toLowerCase());\r\n      });\r\n      setCompany(filteredRows);\r\n      console.log(\"Company\", Company);\r\n      console.log(\"filteredRows\", filteredRows);\r\n    };\r\n    const cancelSearch = () => {\r\n      setSearched(\"\");\r\n      requestSearch(searched);\r\n    };\r\n    const handleBulkDelete = () => {\r\n      console.log(selectedRows);\r\n      const updatedData = Company.filter((row) => !selectedRows.includes(row));\r\n      setCompany(updatedData);\r\n    };\r\n  \r\n    const onRowDelete=(rowData) =>{\r\n      const updatedData=Company.filter((row)=>![rowData].includes(row))\r\n      setCompany(updatedData);\r\n    }\r\n  \r\n    const downloadPdf = () => {\r\n      const doc = new jsPDF();\r\n      doc.text(\"جزییات زنبورستان\", 20, 10);\r\n      doc.autoTable({\r\n        theme: \"grid\",\r\n        columns: columns.map((col) => ({ ...col, dataKey: col.field })),\r\n        body: Company,\r\n      });\r\n      doc.setFont('Iran-Sans'); // set custom font\r\n      doc.save(\"table.pdf\");\r\n    };\r\n    const add = () => {\r\n      return console.log(\"click\");\r\n    };\r\n\r\n    return (\r\n      <div>\r\n  \r\n\r\n        <MaterialTable\r\n          localization={{\r\n            toolbar: {\r\n              searchPlaceholder: \"dfsdfsdf\",\r\n            },\r\n          }}\r\n          title=\"\"\r\n          style={{ borderRadius: \"25px\",minWidth:\"1000px\" }}\r\n          data={Company}\r\n          columns={columns}\r\n          onSelectionChange={(rows) => setSelectedRows(rows)}\r\n          localization={{\r\n            body: {\r\n              editRow: { deleteText: \"آیا میخواهید این سطر را حذف کنید؟\" },\r\n            },\r\n            pagination: {\r\n              labelDisplayedRows: \"{from}-{to} از {count}\",\r\n              labelRowsSelect: 'تعداد ردیف',\r\n              labelRowsPerPage: '۱',\r\n              firstAriaLabel: 'اولین صقحه',\r\n       \r\n              previousAriaLabel: 'صفحه قبل',\r\n       \r\n              nextAriaLabel: 'صفحه بعد',\r\n              lastAriaLabel: 'اخرین صفحه',\r\n            },\r\n            toolbar: {\r\n              nRowsSelected: \"{0} مورد انتخاب شد\",\r\n              searchPlaceholder: \"جستجو \",\r\n            },\r\n            header: {\r\n              actions: \"عملیات\",\r\n            },\r\n            body: {\r\n              emptyDataSourceMessage: \"موردی جهت نمایش وجود ندارد.\",\r\n              filterRow: {\r\n                filterTooltip: \"فیلتر\",\r\n              },\r\n            },\r\n          }}\r\n          options={{\r\n            columnsButton: true,\r\n            actionsColumnIndex: -1,\r\n            addRowPosition: \"last\",\r\n            rowStyle: {\r\n              fontWeight: 600,\r\n              textAlign: \"right\",\r\n            },\r\n            headerStyle: {\r\n              fontWeight: 600,\r\n              color: \"rgb( 102, 103 ,104)\",\r\n            },\r\n            selection: true,\r\n            selectionProps: (rowData) => ({\r\n              // checked: Company?.includes(rowData.value) ? true: false,\r\n              onClick: () => {\r\n                console.log(\"clicked asdasda\");\r\n                setToolbar(true);\r\n              },\r\n            }),\r\n            search: true,\r\n            searchFieldAlignment:\"left\",\r\n            searchFieldStyle: {\r\n              borderTop: \"2px solid  rgb( 240 ,240, 240)\",\r\n              borderRight: \"2px solid  rgb( 240 ,240, 240)\",\r\n              borderLeft: \"2px solid  rgb( 240 ,240, 240)\",\r\n              borderBottom: \"none\",\r\n              padding: \"4px\",\r\n              borderRadius: \"8px\",\r\n     \r\n            },\r\n            // filtering: true,\r\n          }}\r\n  \r\n  \r\n        \r\n  \r\n  \r\n  \r\n          components={{\r\n            // Toolbar: (props) => (\r\n            //   <>\r\n            //     <div\r\n            //       style={{\r\n            //         direction: \"rtl\",\r\n            //         display: \"flex\",\r\n            //         justifyContent: \"space-between\",\r\n            //         alignItems: \"center\",\r\n            //         padding: \"16px  32px  0px\",\r\n            //       }}\r\n            //     >\r\n            //       <div\r\n            //         style={{\r\n            //           display: \"flex\",\r\n            //           alignItems: \"center\",\r\n            //           justifyContent: \"center\",\r\n            //         }}\r\n            //       >\r\n            //         <SearchBar\r\n            //           style={{\r\n            //             direction: \"ltr\",\r\n            //             border: \"1px solid red\",\r\n            //             width: \"100%\",\r\n            //             borderRadius: \"8px\",\r\n            //           }}\r\n            //           value={searched}\r\n            //           onChange={(searchVal) => requestSearch(searchVal)}\r\n            //           onCancelSearch={() => cancelSearch()}\r\n            //         />\r\n            //         {/* <MTableToolbar {...props} /> */}\r\n            //         <div\r\n            //           onClick={handleOpen}\r\n            //           style={{\r\n            //             backgroundColor: \"rgb( 227, 156, 0)\",\r\n            //             marginRight: \"32px\",\r\n            //             color: \"#000\",\r\n            //             padding: \"8px\",\r\n            //             display: \"flex\",\r\n            //             alignItems: \"center\",\r\n            //             justifyContent: \"center\",\r\n            //             borderRadius: \"8px\",\r\n            //           }}\r\n            //         >\r\n            //           <img src=\"/assets/Group 182.svg\" />\r\n            //         </div>\r\n            //       </div>\r\n            //       <div\r\n            //         onClick={downloadFile}\r\n            //         style={{\r\n            //           backgroundColor: \"black\",\r\n            //           cursor: \"pointer\",\r\n            //           color: \"white\",\r\n            //           display: \"flex\",\r\n            //           alignItems: \"center\",\r\n            //           justifyContent: \"center\",\r\n            //           borderRadius: \"8px\",\r\n            //           padding: \"8px\",\r\n            //           // marginLeft: \"32px\",\r\n            //         }}\r\n            //       >\r\n            //         <span>دانلود</span>\r\n            //         <img\r\n            //           src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n            //           style={{ marginRight: \"8px\" }}\r\n            //         />\r\n            //       </div>\r\n            //     </div>\r\n            //     <hr\r\n            //       style={{\r\n            //         borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n            //         height: \"2px\",\r\n            //       }}\r\n            //     />\r\n            //     {toolbar ? (\r\n            //       <MTableToolbar {...props}>{console.log(props)}</MTableToolbar>\r\n            //     ) : null}\r\n            //   </>\r\n            // ),\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: () => <Select\r\n                 labelId=\"demo-simple-select-label\"\r\n                 variant=\"outlined\"\r\n                 className={classes.inputSelect}\r\n                 Id='demo-simple-select'\r\n                 style={{width:100}}\r\n                 value={Hive}\r\n                 className={classes.inputSelect}\r\n                 onChange={(e)=>setHive(e.target.value)}>\r\n                   <MenuItem value={\"all\"}><em>All</em></MenuItem>\r\n                   <MenuItem value={2019}>2019</MenuItem>\r\n                   <MenuItem value={2020}>2020</MenuItem>\r\n                   <MenuItem value={2021}>2021</MenuItem>\r\n              </Select>,\r\n  \r\n              tooltip: \"دانلود\",\r\n              isFreeAction: true,\r\n            },\r\n            {\r\n              icon: () => <Select\r\n                 labelId=\"demo-simple-select-label\"\r\n                 variant=\"outlined\"\r\n                 className={classes.inputSelect}\r\n                 Id='demo-simple-select'\r\n                 style={{width:100}}\r\n                 value={State}\r\n                 className={classes.inputSelect}\r\n                 onChange={(e)=>setState(e.target.value)}>\r\n                   <MenuItem value={\"all\"}><em>All</em></MenuItem>\r\n                   <MenuItem value={2019}>2019</MenuItem>\r\n                   <MenuItem value={2020}>2020</MenuItem>\r\n                   <MenuItem value={2021}>2021</MenuItem>\r\n              </Select>,\r\n  \r\n              tooltip: \"دانلود\",\r\n              isFreeAction: true,\r\n            },\r\n            {\r\n              icon: () => <Select\r\n                 labelId=\"demo-simple-select-label\"\r\n                 variant=\"outlined\"\r\n                 className={classes.inputSelect}\r\n                 Id='demo-simple-select'\r\n                 style={{width:100}}\r\n                 value={Priority}\r\n                 className={classes.inputSelect}\r\n                 onChange={(e)=>setPriority(e.target.value)}>\r\n                   <MenuItem value={\"all\"}><em>All</em></MenuItem>\r\n                   <MenuItem value={2019}>2019</MenuItem>\r\n                   <MenuItem value={2020}>2020</MenuItem>\r\n                   <MenuItem value={2021}>2021</MenuItem>\r\n              </Select>,\r\n  \r\n              tooltip: \"دانلود\",\r\n              isFreeAction: true,\r\n            },\r\n            {\r\n              icon: () => (\r\n                \r\n  \r\n  \r\n                \r\n                <div>\r\n                  <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                    {(popupState) => (\r\n                      <div>\r\n                    <MoreVertOutlined variant=\"contained\" {...bindTrigger(popupState)} style={{cursor:\"pointer\"}}/>\r\n  \r\n                        \r\n                        <Popover\r\n                      \r\n  \r\n                          {...bindPopover(popupState)}\r\n                          anchorOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"center\",\r\n                          }}\r\n                          transformOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"center\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n                          >\r\n                            <Link\r\n                             onClick={handleClickOpen('body')}\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n                              }}\r\n                            >\r\n                              <Edit style={{ marginLeft: \"16px\" }} />\r\n                              ویرایش\r\n                            </Link>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                                \r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                              }}\r\n                            >\r\n                              <Share style={{ marginLeft: \"16px\" }} />\r\n                              اشتراک گذاری\r\n                            </div>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                          \r\n                              }}\r\n                            >\r\n                              <img src=\"/assets/move-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                              انتقال\r\n                            </div>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                color:\"red\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                              }}\r\n                              onClick={() => handleBulkDelete(selectedRows)}\r\n                            >\r\n                              <img src=\"/assets/trash-svgrepo-com-2.svg\" style={{ margin: \"0 8px 0 16px\" }} />\r\n                              حذف\r\n                            </div>\r\n                          </div>\r\n                        </Popover>\r\n                      </div>\r\n                    )}\r\n                  </PopupState>\r\n                </div>\r\n              ),\r\n  \r\n              // isFreeAction: true,\r\n            },\r\n  \r\n            {\r\n              icon: () => (\r\n                <div   onClick={handleClickOpen('body')}\r\n                >\r\n                  <img\r\n                    style={{\r\n                      backgroundColor: \"rgb( 227, 156, 0)\",\r\n                      \r\n                      color: \"#000\",\r\n                      padding: \"8px\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      borderRadius: \"8px\",\r\n                    }}\r\n                    src=\"/assets/Group 182.svg\"\r\n                  />\r\n                </div>\r\n              ),\r\n              tooltip: \"اضافه کردن کار\",\r\n              \r\n              isFreeAction: true,\r\n            },\r\n            {\r\n              icon: () => (\r\n                <div\r\n                  onClick={downloadFile}\r\n                  style={{\r\n                    backgroundColor: \"black\",\r\n                    cursor: \"pointer\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    borderRadius: \"8px\",\r\n                    padding: \"8px\",\r\n                    // marginLeft: \"32px\",\r\n                  }}\r\n                >\r\n                  <span style={{fontFamily:\"Shabnam\",fontSize:\"1rem\"}}>دانلود</span>\r\n                  <img\r\n                    src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n                    style={{ marginRight: \"8px\" }}\r\n                  />\r\n                </div>\r\n              ),\r\n              tooltip: \"دانلود\",\r\n              isFreeAction: true,\r\n            },\r\n  \r\n          ]}\r\n        />\r\n        <div>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"parent-modal-title\"\r\n            aria-describedby=\"parent-modal-description\"\r\n            maxWidth=\"md\"\r\n\r\n          >\r\n              <AddJob />\r\n          </Dialog>\r\n        </div>\r\n  \r\n  \r\n        <div>\r\n        <Dialog\r\n        open={openEdit}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"md\"\r\n      >\r\n             <AddJob onClick={handleClose}/>\r\n       </Dialog>\r\n        </div>\r\n  \r\n        \r\n        <div>\r\n          <Modal\r\n            open={downloadOpen}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"parent-modal-title\"\r\n            aria-describedby=\"parent-modal-description\"\r\n          >\r\n            <Box sx={{ ...style, width: 1000 }} className=\"downloadFile\" style={{ display: \"flex\" ,alignItems: \"center\",justifyContent: \"center\"}}>\r\n              <div onClick={downloadExcel} className=\"downloadExcel\" ><img src=\"/assets/excel-svgrepo-com.svg\"/></div>\r\n              <div onClick={downloadPdf} className=\"downloadPdf\" ><img src=\"/assets/pdf-svgrepo-com (1).svg\"/></div>\r\n            </Box>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default JobCalender;\r\n  ","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\ChatPage\\QRChatPage.js",["679","680","681","682","683","684","685","686","687","688","689","690","691","692","693"],"\r\nimport { Breadcrumbs, Button, Grid, TextareaAutosize, TextField, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useStyles from \"./Style\";\r\nimport {\r\n  Link,\r\n  useParams,useHistory\r\n} from \"react-router-dom\";\r\nimport moment from \"jalali-moment\";\r\nimport Loading from \"../../../../components/Loading/Loading\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { Close, Description, NavigateBefore } from \"@material-ui/icons\";\r\nimport Title from \"../../../../components/Typography/Title/Title\";\r\nimport classNames from \"classnames\";\r\nimport fileDownload from \"js-file-download\";\r\nimport LodaingQr from \"./LodaingQr\";\r\n\r\nfunction SupportPage() {\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const [newTicket , setNewTicket] = useState([])\r\n  const [newTicketStatus , setNewTicketStatus] = useState([])\r\n  const [ image , setImage ] = useState('')\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const { id } = useParams()\r\n  const[loading,setLoading]=useState(true)\r\n  console.log(\"idTicket\",id);\r\n  const validationSchema = yup.object().shape({\r\n    // name: yup\r\n    //   .string()\r\n    //   .required(\"لطفا تعداد QRCODE درخواستی را وارد نمایید.\"),\r\n    // text: yup\r\n    //   .string()\r\n    //   .required(\"لطفا درخواست خود را وارد نمایید.\"),\r\n      });\r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n    const token = localStorage.getItem(\"id_token\")\r\n    console.log(\"token\",token);\r\n    useEffect(() => {\r\n      const fetchData = async () =>{\r\n        // setLoading(true);\r\n        try {\r\n          const {data: response} = await axios.get(\"http://185.202.113.165:3000/api/ticket/get-by-id/\" + id,{\r\n            headers: {\r\n              'token': `${token}` \r\n            },\r\n          },);\r\n          console.log( \"show response\" , response.data);\r\n          setNewTicket(response.data.messages )\r\n          setNewTicketStatus(response.data)\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n          setLoading(true);\r\n\r\n        }\r\n        \r\n      }\r\n      fetchData();\r\n    }, []);\r\n  \r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () =>{\r\n        // setLoading(true);\r\n        try {\r\n          const {data: response} = await axios.post(`http://185.202.113.165:3000/api/ticket/seen-by-user/${id}`,{\"text\":\"Seen\"},{\r\n            headers: {\r\n              'token': `${token}` \r\n            },\r\n          },).then((el)=>console.log(\"elll\",el.data))\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n        \r\n      }\r\n      fetchData();\r\n    }, []);\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n    const download=async (text)=>{\r\n      console.log(\"texxxxtttt\",text);\r\n      const response = await axios.get(`http://185.202.113.165:3000/api/ticket/download-file/${text}`,{\r\n        responseType: 'blob',\r\n      })\r\n      // console.log(`${text}`,text)\r\n      fileDownload(response.data,`${text}`)\r\n   }\r\n   /////////////////////////////////////////////////////////////////////////////////////\r\n    const {\r\n      register,\r\n      handleSubmit,\r\n      reset,\r\n      watch,\r\n      formState: { errors },\r\n    } = useForm({\r\n      resolver: yupResolver(validationSchema),\r\n    });\r\n    const convert2base64 = file =>{\r\n      const reader = new FileReader();\r\n      reader.onloadend = () =>{\r\n          setImage(reader.result.toString())\r\n      };\r\n      reader.readAsDataURL(file)\r\n  }\r\n    const onSubmit = async(data,e) => {\r\n\r\n      e.preventDefault()\r\n      const fd = new FormData()\r\n\r\n      console.log(\"data.file[0]\",data.file[0])\r\n      if(data.file[0]){\r\n        console.log(\"true\");\r\n      fd.append('file',data.file[0])\r\n      }else{\r\n     fd.append('text',data.text)\r\n    }\r\n \r\n      if(data.file.length > 0){\r\n          convert2base64(data.file[0])\r\n      }\r\n      const response = await axios.post(`http://185.202.113.165:3000/api/ticket/user-add-message/${id}`, fd ,\r\n      {\r\n        headers: {\r\n          'token': `${token}` ,\r\n           \"Content-Type\": \"multipart/form-data\",\r\n\r\n        },\r\n        onUploadProgress:ProgressEvent => {\r\n          let percent = Math.round(ProgressEvent.loaded/ProgressEvent.total*100)+\"%\"\r\n          console.log(\"percent\",percent);\r\n          console.log(\"در حال بارگذاری\"+Math.round(ProgressEvent.loaded/ProgressEvent.total*100)+\"%\");\r\n          setProgress(percent)\r\n        }\r\n        // headers: {\r\n        //   \"Content-Type\": \"multipart/form-data\",\r\n        // },\r\n      },).then((respon) => setNewTicket(respon.data.data.messages))\r\n      // console.log(\"response adduserticket\",response.data.data.messages)\r\n      setProgress(0)\r\n      reset({\r\n        text: \"\",\r\n        file:\"\"\r\n      })\r\n      // window.location.reload()\r\n        \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const [Question, setQuestion] = useState([\r\n  //   {\r\n  //     sender:\"user\",\r\n  //     id: 1,\r\n  //     text:\r\n  //       \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n      \r\n  //     name: \"جعفر\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     sender:\"admin\",\r\n  //     id: 1,\r\n  //     text:\r\n  //       \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n  //     name: \"رضا\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     sender:\"admin\",\r\n  //     id: 1,\r\n  //     text:\r\n  //       \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n  //     name: \"جعفر\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     sender:\"user\",\r\n  //     id: 1,\r\n  //     text:\r\n  //       \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n  //     name: \"رضا\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  // ]);\r\n  // const [Answer , setAnswer] = useState([\r\n  //   {\r\n  //     id: 1,\r\n  //     titleAnswer:\r\n  //       \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n  //     name: \"جعفر\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     titleAnswer:\r\n  //       \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n  //     name: \"رضا\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     titleAnswer:\r\n  //       \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n  //     name: \"جعفر\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     titleAnswer:\r\n  //       \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n  //     name: \"رضا\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  // ]);\r\n\r\n  const closeTicket= async ()=>{\r\n\r\n    if(window.confirm(\"با بستن این تیکت دیگر امکان ارسال پیام در این چت باکس را ندارید\")){\r\n      const response = await axios.post(`http://185.202.113.165:3000/api/ticket/close-by-user/${id}` ,{\"text\":\"close\"} ,{\r\n        headers: {\r\n          'token': `${token}` \r\n        }\r\n      });\r\n      console.log(\"response ro see kon to addticket\",response);\r\n      history.push(\"/app/Support\")\r\n    }\r\n  \r\n  }\r\n\r\nconst title=(e)=>{\r\n  switch (e) {\r\n\r\n    case \"cure\":\r\n    return <div>درمان</div>\r\n    case \"nurture\":\r\n     return <div>تغذیه</div>\r\n    case \"visit\":\r\n       return <div>بازدید</div>     \r\n    case \"pickHoney\":\r\n       return <div>برداشت عسل</div>      \r\n    case \"apiary\":\r\n     return <div>زنبورستان</div>          \r\n    case \"hive\":\r\n     return <div>کندو</div>    \r\n     case \"products\":\r\n       return <div>محصولات</div>  \r\n    case \"queen\":\r\n       return <div>ملکه</div>  \r\n    case \"honeyBehaviour\":\r\n       return <div>رفتار زنبورعسل</div>\r\n    case \"boardConnection\":\r\n       return <div>ارتباط با برد</div>  \r\n   case \"accesses\":\r\n         return <div>دسترسی ها</div> \r\n   case \"profile\":\r\n           return <div>حساب کاربری</div> \r\n   case \"moveHive\":\r\n           return <div>انتقال</div>             \r\n  case \"qrCode\":\r\n            return <div> تیکت QRCODE </div>   \r\n   case \"requestQRCode\":\r\n            return <div>درخواست QRCODE</div>  \r\n\r\n   case \"other\":\r\n           return <div>سایر</div>  \r\n    default:\r\n     return <div>بدون عنوان </div>\r\n  }\r\n }\r\n \r\nconst breadcrumbs = [\r\n\r\n  <Link\r\n  to=\"/app/Support\"\r\n    key=\"1\"\r\n    style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n  >\r\n        <Title key=\"1\" title=\" پشتیبانی \"/>\r\n\r\n  </Link>,\r\n\r\n  <Link\r\n      to=\"/app/Support\"\r\n      key=\"2\"\r\n      style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n  >\r\n       {/* <Title key=\"2\" title=\"پیام‌های من\"/> */}\r\n       <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\"}}>پیام‌های من</p>\r\n\r\n  </Link>,\r\n       <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\"}}>تیکت به پشتیبانی</p>\r\n\r\n];\r\n\r\n\r\nconst statusTicket= newTicketStatus.status\r\nconst statusTickets=(e)=>{\r\n  switch (statusTicket) {\r\n    case \"Open\":\r\n      return  <Grid\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        padding: \"32px 48px\",\r\n        borderRadius: \"12px\",\r\n        // position: \"fixed\",\r\n        // bottom:0,\r\n        // left:20,\r\n        // width:\"80%\",\r\n      }}\r\n    >\r\n\r\n\r\n\r\n     <div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n      <TextareaAutosize\r\n        maxRows={4}\r\n        aria-label=\"maximum height\"\r\n        defaultValue=\"\"\r\n        style={{\r\n          width: \"100%\",\r\n          backgroundColor: \"rgb( 244 244 244)\",\r\n          border: \"none\",\r\n          padding: \"16px\",\r\n        }}\r\n        {...register(\"text\")}\r\n        error={errors.text ? true : false}\r\n      />\r\n        <Typography\r\n            variant=\"inherit\"\r\n            className={classes.errorTitle}\r\n          >\r\n            {errors.text?.message}\r\n        </Typography>\r\n\r\n       {/* <TextField\r\n      \r\n       variant=\"outlined\"\r\n       placeholder=\"لطفا تعداد QrCode درخواستی خود را با عدد انگلیسی وارد نمایید.\"\r\n        defaultValue=\"\"\r\n        style={{\r\n          width: \"100%\",\r\n          border: \"none\",\r\n        }}\r\n        {...register(\"text\")}\r\n        error={errors.text ? true : false}\r\n      />\r\n        <Typography\r\n            variant=\"inherit\"\r\n            className={classes.errorTitle}\r\n          >\r\n            {errors.text?.message}\r\n        </Typography> */}\r\n\r\n      <Grid\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          marginTop:\"8px\"\r\n        }}\r\n      >\r\n           <div>\r\n              <Button\r\n              \r\n               variant=\"contained\"\r\n              component=\"label\"\r\n              style={{fontFamily:\"Shabnam\"}}\r\n              >\r\n                بارگذاری فایل\r\n                <input\r\n                  type=\"file\"\r\n                  {...register(\"file\")}\r\n                  id=\"fileuploaded\"\r\n                  hidden\r\n                />\r\n              </Button>\r\n              {!watch(\"file\")||watch(\"file\").length===0?null:<strong style={{marginRight:\"16px\"}}>{watch(\"file\")[0].name}</strong>}\r\n                {/* <input type='file'  id=\"fileuploaded\" {...register(\"file\")} style={{cursor:\"pointer\"}}/>\r\n                <label htmlFor='fileuploaded' style={{cursor:\"pointer\"}}>انتخاب فایل</label> */}\r\n            </div>\r\n\r\n        {/* {errors.file && <div className='error'>{errors.file.message}</div>} */}\r\n        <Button type=\"submit\" className={classes.ButtonSubmitPage} onClick={handleSubmit(onSubmit)} disabled={progress!==0}>ثبت</Button>\r\n      </Grid>\r\n     {(progress!==0 && progress > \"120%\")?<LodaingQr value={progress} setProgress={setProgress}/>:null} \r\n     {/* {!watch(\"file\")||watch(\"file\").length===0 && progress!==0?null:<div style={{marginTop:\"16px\" , color:\"red\"}}>لطفا منتظر بمانید...</div>}  */}\r\n     {!watch(\"file\")||watch(\"file\").length!==0 && progress==0?null:<div style={{marginTop:\"16px\" , color:\"red\"}}>لطفا منتظر بمانید...</div>} \r\n\r\n      <Grid lg={2}  onClick={closeTicket} style={{cursor:\"pointer\",display: \"flex\",justifyContent: \"flex-start\",alignItems: \"center\" ,marginTop:\"16px\"}}><Close color=\"secondary\"/><div>بستن تیکت</div> </Grid>\r\n\r\n      </form>\r\n    </div>\r\n </Grid>\r\n\r\n   case \"CloseByUser\":\r\n     return  <Grid\r\n     style={{\r\n       backgroundColor: \"#fff\",\r\n       padding: \"48px \",\r\n       borderRadius: \"12px\",\r\n       textAlign:\"center\"\r\n       // position: \"fixed\",\r\n       // bottom:0,\r\n       // left:20,\r\n       // width:\"80%\",\r\n     }}\r\n   >\r\n    \r\n     \r\n  <Typography>تیکت بسته شده است و امکان ارسال پیام جدید در این تیکت وجود ندارد.</Typography>\r\n</Grid>\r\n case \"CloseByAdmin\":\r\n  return  <Grid\r\n  style={{\r\n    backgroundColor: \"#fff\",\r\n    padding: \"48px \",\r\n    borderRadius: \"12px\",\r\n    textAlign:\"center\"\r\n    // position: \"fixed\",\r\n    // bottom:0,\r\n    // left:20,\r\n    // width:\"80%\",\r\n  }}\r\n>\r\n \r\n  \r\n<Typography>تیکت بسته شده است و امکان ارسال پیام جدید در این تیکت وجود ندارد.</Typography>\r\n</Grid>\r\n   default:\r\n     return <div>در انتظار</div>\r\n\r\n  }\r\n}\r\nconsole.log(\"newTicketStatus\",newTicketStatus);\r\nlet btnClass = classNames({\r\n             \r\n  [classes.openTicket]: newTicketStatus.status===\"Open\",\r\n  [classes.closeTicket]: newTicketStatus.status===\"CloseByAdmin\",\r\n  [classes.closeTicketAdmin]: newTicketStatus.status===\"CloseByUser\",\r\n  [classes.waitTicket]: newTicketStatus.status===\"Wait\",\r\n\r\n    });\r\n  const changeText=(e)=>{\r\n      switch (e) {\r\n        case \"Open\":\r\n           return <div>باز</div>\r\n        case \"CloseByAdmin\":\r\n           return <div>بسته</div>\r\n          case \"CloseByUser\":\r\n           return <div>بسته</div>\r\n        default:\r\n           return <div>در انتظار</div>\r\n      }\r\n    }\r\n   \r\n\r\n  return (\r\n    <>\r\n            <div style={{margin:\"32px 32px 0px\"}}>\r\n     <Breadcrumbs\r\n        separator={<NavigateBefore fontSize=\"large\" style={{color:\"rgb(227, 156, 0)\"}} />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n      </div>\r\n\r\n    {loading?\r\n          <div className={classes.Loading}> <Loading color=\"orange\" /></div>:   \r\n           <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        height: \"100%\",\r\n        position:\"relative\",\r\n\r\n      }}\r\n    >\r\n     {/* top Page */}\r\n       <Grid\r\n        container\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          padding: \"16px 60px\",\r\n          justifyContent: \"space-between\",\r\n          borderRadius: \"12px\",\r\n\r\n          marginTop: \"24px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            backgroundColor: \"#fff\",\r\n            alignItems: \"center\",\r\n            padding: \"16px 32px\",\r\n            justifyContent: \"space-between\",\r\n            borderRadius: \"12px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <div style={{ fontSize: \"16px\", fontWeight: \"bold\" }}>{title(newTicketStatus.category)}</div>\r\n          <div className={btnClass}>{changeText(newTicketStatus.status)}</div>\r\n        </Grid>\r\n\r\n   \r\n        {/* message */}\r\n        {newTicket?.map((element) => {\r\n          switch (element.sender) {\r\n          \r\n            case 'user':\r\n              return (             \r\n              <Grid\r\n                className={classes.QuestionCountainer}\r\n                item\r\n                xs={12}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  className={classes.titleQuestion}\r\n         \r\n                >\r\n{      element.type==\"text\" ? <div>{element.text}</div>: \r\n<a onClick={()=>download(element.text)} target=\"_blank\"  href={`http://185.202.113.165:3000/api/ticket/download-file/${element.text}`} className={classes.fileLink} >\r\n  <div> <Description/></div>\r\n  <div> {element.text}</div>\r\n  </a>\r\n}                 </Grid>\r\n                <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                ({newTicketStatus.createBy?newTicketStatus.createBy.firstname +\" \"+ newTicketStatus.createBy.lastname:null}) | {moment.from(element.sentAt).locale('fa').format('YYYY/M/D HH:mm')} \r\n                  \r\n                </Grid>\r\n              </Grid>)\r\n            case 'admin':\r\n              return (              \r\n              <Grid\r\n                xs={12}\r\n                item\r\n                className={classes.AnswerCountainer}\r\n\r\n             >              \r\n              <Grid\r\n                 item\r\n                 xs={12}\r\n                 md={6}\r\n                 className={classes.titleAnswer}\r\n\r\n               >\r\n{   \r\n   element.type==\"text\"  ? <div>{element.text}</div>: \r\n<a onClick={()=>download(element.text)} target=\"_blank\"  href={`http://185.202.113.165:3000/api/ticket/download-file/${element.text}`} className={classes.fileLink}>\r\n<div> <Description/></div>\r\n  <div> {element.text}</div>\r\n  </a>\r\n}               </Grid>\r\n               {/* {image ? <img src={image} width=\"450\"/>:null} */}\r\n               <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n               پشتیبان | {moment.from(element.sentAt).locale('fa').format('YYYY/M/D HH:mm')}\r\n               </Grid>\r\n             </Grid>\r\n             )\r\n          }\r\n        })}\r\n\r\n\r\n        {/* {Question.map((element) => {\r\n          return (\r\n            <>\r\n              <Grid\r\n                className={classes.QuestionCountainer}\r\n                item\r\n                xs={12}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  className={classes.titleQuestion}\r\n                >\r\n                  {element.titleQuestion}\r\n                </Grid>\r\n                <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                  {element.name}| {element.Date} {element.Time}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid\r\n                 xs={12}\r\n\r\n                item\r\n                className={classes.AnswerCountainer}\r\n\r\n              >\r\n                  \r\n                        \r\n               <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  className={classes.titleAnswer}\r\n\r\n                >\r\n                  {element.titleAnswer}\r\n                </Grid>\r\n                <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                  {element.name}| {element.Date} {element.Time}\r\n                </Grid>\r\n                \r\n\r\n              </Grid>\r\n            </>\r\n          );\r\n        })} */}\r\n\r\n\r\n        \r\n       </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      {/* bottom Page */}\r\n    {statusTickets()}\r\n\r\n            </div> \r\n    }\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SupportPage;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\discoverPage\\discoverPage.js",["694"],"import React from 'react'\r\nimport \"./style.css\"\r\nfunction discoverPage() {\r\n    alert(\"درحال بارگیری سایت کندووان پلاس. لطفا چند لحظه صبر کنید:)\")\r\n  return (\r\n\r\n       <div ><iframe scrolling=\"no\" style={{height: '8000px'}}src=\"https://kandoo1plus.ir/\"></iframe></div> \r\n  )\r\n}\r\n\r\nexport default discoverPage","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\ChatPage\\Style.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\ChatPage\\LodaingQr.js",["695"],"\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  console.log(\"props Value\",props)\r\n  return (\r\n    \r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      {/* <Box width=\"20%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box> */}\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" style={{color:\"blue\" , fontWeight:600 , marginTop:\"8px\" , border:\"2px solid blue\" ,borderRadius:\"50%\",height:\"50px\",width:\"50px\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>{\r\n          props.value\r\n        }</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate and buffer variants.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default function LodaingQr(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  // React.useEffect(() => {\r\n\r\n  //     props.setProgress((prevProgress) => (prevProgress >= 100 ? 100 : prevProgress));\r\n\r\n\r\n  // }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgressWithLabel value={props.value} />\r\n    </div>\r\n  );\r\n}\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Loading\\Loading.js",["696"],"import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport useStyles from \"./styles\";\r\n\r\n\r\n\r\nconst Loading = ({ type, color }) => (\r\n\r\n<div >\r\n    <ReactLoading type=\"spinningBubbles\" color={color} height={\"100%\"} width={\"100%\"} />\r\n    <p>در حال برقراری ارتباط با سرور</p>\r\n</div>\r\n);\r\n \r\nexport default Loading;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Typography\\Title\\Title.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Loading\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\style.js",["697","698"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  container:{\r\n    padding: \"32px \",\r\n  },\r\n  TabHeader: {\r\n    backgroundColor: \"rgb( 255 ,242, 212)\",\r\n    margin:\"0 auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    height: \"45px\",\r\n    boxShadow:\r\n      \" rgba(0, 0, 0, 0.1) 0px 60px 100px -100px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\r\n    color: \"rgb(227 156 0)\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"15px\",\r\n    fontSize: \"1rem\",\r\n    marginBottom:\"16px\",\r\n    marginTop:\"32px\",\r\n   \r\n  },    \r\n  item:{\r\n    textDecoration:\"none\",\r\n    color: \"black\",\r\n    color: \"rgb(227 156 0)\",\r\n \r\n  },\r\n  activeItem:{\r\n  background:\"#fff\",\r\n  padding:\"4px 16px\",\r\n  borderRadius:\"8px\",\r\n  color:\"#000\",\r\n  textDecoration:\"none\",\r\n  cursor:\"pointer\",\r\n  boxShadow:\"0px 3px 6px 0px rgba(0,0,0,0.16)\"\r\n  \r\n},\r\ninputSelect: {\r\n  width: \"250px\",\r\n  display:\"flex\",\r\n  height:\"40px\",\r\n  borderRadius: \"8px\",\r\n  border: \"none\",\r\n  // height: \"40px\",\r\n  fontFamily: \"Shabnam\",\r\n  \"&\t.MuiSelect-outlined\":{\r\n  \r\n    borderRadius: \"8px\",\r\n  },\r\n  \"&\t.MuiSelect-outlined\":{\r\n  \r\n    borderRadius: \"8px\",\r\n  },\r\n\r\n\r\n},\r\n\r\n}));\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\Iran-Sans-normal.js",["699"],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\FilterCalender.js",["700","701","702","703","704","705"],"import React, { useState } from \"react\";\r\nimport {\r\n  Add,\r\n  AddRounded,\r\n  ExpandMore,\r\n  Minimize,\r\n  RemoveSharp,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  FormControl,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nfunction FilterCalender() {\r\n  const [expanded, setExpanded] = useState();\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n  return (\r\n    <Grid container style={{ backgroundColor: \"#fff\", borderRadius: \"12px\" }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{ width: \"100%\", textAlign: \"center\", marginTop: \"16px\" }}\r\n        >\r\n          فیلترها\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {/* item */}\r\n      <Grid style={{ width: \"100%\" }}>\r\n        <Accordion\r\n          expanded={expanded === \"panel1\"}\r\n          onChange={handleChange(\"panel1\")}\r\n          // className={classes.Accordion}\r\n          style={{ marginTop: \"16px\" }}\r\n        >\r\n          <AccordionSummary\r\n            style={{ display: \"flex\", flexDirection: \"row-reverse\" }}\r\n            // className={classes.arrowStyle}\r\n            expandIcon={\r\n              expanded === \"panel1\" ? (\r\n                <RemoveSharp\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              ) : (\r\n                <AddRounded\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            <Typography>زنبورستان</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography>زنبورستان</Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion\r\n          expanded={expanded === \"panel2\"}\r\n          onChange={handleChange(\"panel2\")}\r\n          // className={classes.Accordion}\r\n        >\r\n          <AccordionSummary\r\n            style={{ display: \"flex\", flexDirection: \"row-reverse\" }}\r\n            // className={classes.arrowStyle}\r\n            expandIcon={\r\n              expanded === \"panel2\" ? (\r\n                <RemoveSharp\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              ) : (\r\n                <AddRounded\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            <Typography>کندو</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography>زنبورستان</Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion\r\n          expanded={expanded === \"panel3\"}\r\n          onChange={handleChange(\"panel3\")}\r\n          // className={classes.Accordion}\r\n        >\r\n          <AccordionSummary\r\n            style={{ display: \"flex\", flexDirection: \"row-reverse\" }}\r\n            // className={classes.arrowStyle}\r\n            expandIcon={\r\n              expanded === \"panel3\" ? (\r\n                <RemoveSharp\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              ) : (\r\n                <AddRounded\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            <Typography>الویت</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography>زنبورستان</Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion\r\n          expanded={expanded === \"panel4\"}\r\n          onChange={handleChange(\"panel4\")}\r\n          // className={classes.Accordion}\r\n        >\r\n          <AccordionSummary\r\n            style={{ display: \"flex\", flexDirection: \"row-reverse\" }}\r\n            // className={classes.arrowStyle}\r\n            expandIcon={\r\n              expanded === \"panel4\" ? (\r\n                <RemoveSharp\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              ) : (\r\n                <AddRounded\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            <Typography>کاربر</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography>زنبورستان</Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FilterCalender;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\JobUser\\AddJob.js",["706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721"],"import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport {\r\n  DatePicker,\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker,\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { date } from \"yup/lib/locale\";\r\nimport axios from \"axios\";\r\nimport { Person } from \"@material-ui/icons\";\r\n\r\nconst AddJob = ({ handleClose, onEventAdded }) => {\r\n  const classes = useStyles();\r\n  // const [selectedDate, handleDateChange] = useState(moment());\r\n  jMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\n  const validationSchema = yup.object().shape({\r\n    user: yup.string().required(\"لطفا نام کاربر را وارد کنید\"),\r\n    apiary: yup.string().required(\"لطفا نام زنبورستان را وارد کنید\"),\r\n    // Hive: yup.string().required(\"لطفا نام کندو را وارد کنید\"),\r\n    priority: yup.string().required(\"لطفا الویت را مشخص کنید\"),\r\n    // Reminder:yup.string().required(\"لطفا الویت را مشخص کنید\"),\r\n    title: yup.string().required(\"لطفا عنوان کار خود را وارد کنید\"),\r\n    fromDate: yup.date().nullable(),\r\n    toDate: yup.date().nullable(),\r\n    fromTime: yup.date().nullable(),\r\n    toTime: yup.date().nullable(),\r\n    // Checkbox:yup.boolean()\r\n    // .oneOf([true], \"این \")\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    watch,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n    setValue,\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const [start, setStart] = useState(new Date(2022, 4, 19));\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const [fromDate, setFromDate] = useState(null);\r\n  const [toDate, setToDate] = useState(null);\r\n  const [fromTime, setFromTime] = useState(null);\r\n  const [toTime, setTotime] = useState(null);\r\n  const value = getValues(\"fromDate\");\r\n  const valueToDate = getValues(\"toDate\");\r\n  const valueFromTime = getValues(\"fromTime\");\r\n  const valueTotime = getValues(\"toTime\");\r\n\r\n  useEffect(() => {\r\n    register(\"fromDate\");\r\n    register(\"toDate\");\r\n  }, [register]);\r\n\r\n  useEffect(() => {\r\n    register(\"fromTime\");\r\n    register(\"toTime\");\r\n  }, [register]);\r\n\r\n  useEffect(() => {\r\n    setFromDate(value || null);\r\n    setToDate(valueToDate || null);\r\n    setFromTime(valueFromTime || null);\r\n    setTotime(valueTotime || null);\r\n  }, [\r\n    setFromDate,\r\n    value,\r\n    setToDate,\r\n    valueToDate,\r\n    setFromTime,\r\n    valueFromTime,\r\n    setTotime,\r\n    valueTotime,\r\n  ]);\r\n\r\n  // useEffect(() => {\r\n\r\n  //   setTotime(valueTotime || null);\r\n  // }, [setFromTime, valueFromTime,setTotime,valueTotime])\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  const token = localStorage.getItem(\"id_token\");\r\n  console.log(token);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // setLoading(true);\r\n      try {\r\n        const { data: response } = await axios.post(\r\n          \"http://188.121.121.225/api/event/GetForMonth\",\r\n          { date: \"1401/03/01\" },\r\n          {\r\n            headers: {\r\n              token: `${token}`,\r\n            },\r\n          },\r\n        );\r\n        console.log(\"show response\", response.data);\r\n        // setApiariesList(response.data )\r\n        // setLoading(false)\r\n      } catch (error) {\r\n        //  if (error.response?.status === 401) {\r\n        //    localStorage.clear(\"id_token\")\r\n        //  }\r\n        console.error(\"سرور دچار مشکل شده است\" + \"ApiaryList\");\r\n        //  setErrMessage(\"  با عرض پوزش سرور دچار مشکل شده است\")\r\n        //  setIserror(true)\r\n        //  history.push(\"/app/Error\")\r\n        //  window.location.reload()\r\n      }\r\n      // setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  const onSubmit = async (data) => {\r\n    // console.log(JSON.stringify(data, null, 2));\r\n    // alert(JSON.stringify(data, null, 2));\r\n    // const response = await axios.post(\"http://185.202.113.165:3000/api/event\", data ,{\r\n    //   headers: {\r\n    //     'token': `${token}`\r\n    //   },\r\n    // },).then((response)=>{console.log(\"response1\",response)})\r\n    // event.preventDefault();\r\n    const reza = data.fromTime;\r\n    const fromTime = moment(data.fromTime).format(\"LT\");\r\n    const toTime = moment(data.toTime).format(\"LT\");\r\n    onEventAdded({\r\n      title: data.title,\r\n      apiary: {\r\n        _id: \"62a3559f5cd336001211ee0e\",\r\n      },\r\n      fromDate: new Date(data.fromDate),\r\n      // endTime: toTime,\r\n      toDate: new Date(data.toDate),\r\n      fromTime: fromTime,\r\n      toTime: toTime,\r\n      category: \"General\",\r\n      priority: \"High\",\r\n      user: {\r\n        _id: \"62a33f81b621cf0012b6979f\",\r\n      },\r\n    });\r\n\r\n    console.log(\"data.fromTime\");\r\n    // props.onClose()\r\n    // history.push(\"/login/step2\")\r\n  };\r\n\r\n  let { path, url } = useRouteMatch();\r\n\r\n  const options = [\r\n    { label: \"همه\", value: \"همه\" },\r\n    { label: \"تغذیه زنبور\", value: \"تغذیه زنبور\" },\r\n    { label: \"برداشت عسل\", value: \"برداشت عسل\" },\r\n    { label: \"بیماری زنبور\", value: \"بیماری زنبور\" },\r\n  ];\r\n\r\n  console.log(\"whatch\", watch(\"fromDate\"));\r\n\r\n  return (\r\n    <Paper>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"center\"\r\n        margin=\"dense\"\r\n        color=\"secondary\"\r\n        className={classes.Title}\r\n      >\r\n        کار جدید\r\n      </Typography>\r\n      <Divider className={classes.Divider1} />\r\n\r\n      <Box px={3} py={2} className={classes.root}>\r\n        <Grid container spacing={1} className={classes.container}>\r\n          <Grid item xs={12}>\r\n            <div className={classes.box} >\r\n              <Grid item xs={12} sm={12} className={classes.Select}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>نام کاربر</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    {...register(\"user\")}\r\n                    error={errors.user ? true : false}\r\n\r\n                    // onChange={(e) =>\r\n                    //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                    // } // Using setValue\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorMessage}\r\n                >\r\n                  {errors.user?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} className={classes.inputText}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}> عنوان کار </label>\r\n                  <TextField\r\n                    className={classes.TextField}\r\n                    required\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    {...register(\"title\")}\r\n                    error={errors.title ? true : false}\r\n                  />\r\n                </div>\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorMessage}\r\n                >\r\n                  {errors.title?.message}\r\n                </Typography>\r\n              </Grid>\r\n            </div>\r\n            <Divider className={classes.Divider2} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <div className={classes.box2}>\r\n              <div>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  align=\"center\"\r\n                  margin=\"dense\"\r\n                  color=\"primary\"\r\n                  className={classes.subTitle}\r\n                >\r\n                  دسته بندی\r\n                </Typography>\r\n              </div>\r\n              <Grid item xs={6} sm={6} className={classes.TabHeader}>\r\n                <Grid>\r\n                  <NavLink\r\n                    to={`${url}/2`}\r\n                    className={classes.item}\r\n                    activeClassName={classes.activeItem}\r\n                  >\r\n                    عمومی\r\n                  </NavLink>\r\n                </Grid>\r\n                <Grid>\r\n                  <NavLink\r\n                    to={`${url}/1`}\r\n                    className={classes.item}\r\n                    activeClassName={classes.activeItem}\r\n                  >\r\n                    زنبورستان\r\n                  </NavLink>\r\n                </Grid>\r\n                <Grid>\r\n                  <NavLink\r\n                    to={`${url}/3`}\r\n                    className={classes.item}\r\n                    activeClassName={classes.activeItem}\r\n                  >\r\n                    کندو\r\n                  </NavLink>\r\n                </Grid>\r\n              </Grid>\r\n              <div className={classes.box}>\r\n                <Grid item xs={12} sm={12} className={classes.Select}>\r\n                  <div className={classes.input}>\r\n                    <label className={classes.label}>زنبورستان</label>\r\n                    <Select\r\n                      className={classes.inputSelect}\r\n                      required\r\n                      variant=\"outlined\"\r\n                      {...register(\"apiary\")}\r\n                      error={errors.apiary ? true : false}\r\n\r\n                      // onChange={(e) =>\r\n                      //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                      // } // Using setValue\r\n                    >\r\n                      {options?.map((option) => {\r\n                        return (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label ?? option.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </div>\r\n                  {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                  <Typography\r\n                    variant=\"inherit\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.errorMessage}\r\n                  >\r\n                    {errors.apiary?.message}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12} className={classes.Select}>\r\n                  <div className={classes.input}>\r\n                    <label className={classes.label}>کندو</label>\r\n                    <Select\r\n                      className={classes.inputSelect}\r\n                      required\r\n                      variant=\"outlined\"\r\n                      {...register(\"Hive\")}\r\n                      error={errors.Hive ? true : false}\r\n                      // IconComponent = {()=><img src=\"./assets/arrow-down-sign-to-navigate.svg\"/>}\r\n                    >\r\n                      {options?.map((option) => {\r\n                        return (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label ?? option.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </div>\r\n                  {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                  <Typography\r\n                    variant=\"inherit\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.errorMessage}\r\n                  >\r\n                    {errors.Hive?.message}\r\n                  </Typography>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.Divider2} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <div className={classes.box2}>\r\n              <div>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  align=\"center\"\r\n                  margin=\"dense\"\r\n                  color=\"primary\"\r\n                  className={classes.subTitle}\r\n                >\r\n                  زمانبندی\r\n                </Typography>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  width: \"100%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <div style={{ width: \"100%\" }}>\r\n                  <Grid item xs={12} sm={12}>\r\n                    <div className={classes.input}>\r\n                      <label className={classes.label}>از تاریخ</label>\r\n                      <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"fromDate\"\r\n                          render={({ field }) => (\r\n                            <KeyboardDatePicker\r\n                              className={classes.inputSelect}\r\n                              inputVariant=\"outlined\"\r\n                              placeholderText=\"تاریخ را وارد نمایید\"\r\n                              value={fromDate}\r\n                              onChange={(fromDate) =>\r\n                                setValue(\"fromDate\", fromDate, {\r\n                                  shouldValidate: true,\r\n                                  shouldDirty: true,\r\n                                })\r\n                              }\r\n                              keyboardIcon={\r\n                                <img src=\"./assets/calender-svgrepo-com.svg\" />\r\n                              }\r\n                              // KeyboardButtonProps={{\r\n                              //   children: \"./assets/calender-svgrepo-com.svg\"\r\n                              // }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                    <Typography\r\n                      variant=\"inherit\"\r\n                      color=\"textSecondary\"\r\n                      className={classes.errorMessage}\r\n                    >\r\n                      {errors.fromDate?.message}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} className={classes.Select}>\r\n                    <div className={classes.input}>\r\n                      <MuiPickersUtilsProvider\r\n                        utils={JalaliUtils}\r\n                        locale=\"fa\"\r\n                        className={classes.input}\r\n                      >\r\n                        <label className={classes.label}>از ساعت</label>\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"fromTime\"\r\n                          render={({ field }) => (\r\n                            <KeyboardTimePicker\r\n                            className={classes.inputSelect}                        \r\n                            inputVariant=\"outlined\"\r\n                            placeholderText=\"ساعت را وارد نمایید\"\r\n                            value={fromTime}\r\n                            onChange={(fromTime) => setValue('fromTime', fromTime, { shouldValidate: true, shouldDirty: true })}\r\n\r\n                            />\r\n                          )}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                    <Typography\r\n                      variant=\"inherit\"\r\n                      color=\"textSecondary\"\r\n                      className={classes.errorMessage}\r\n                    >\r\n                      {errors.fromTime?.message}\r\n                    </Typography>\r\n                  </Grid>\r\n                </div>\r\n\r\n                <div style={{ width: \"100%\" }}>\r\n                  <Grid item xs={12} sm={12} className={classes.Select}>\r\n                    <div className={classes.input}>\r\n                      <label className={classes.label}>تا تاریخ</label>\r\n                      <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"toDate\"\r\n                          render={({ field }) => (\r\n                            <KeyboardDatePicker\r\n                              className={classes.inputSelect}\r\n                              inputVariant=\"outlined\"\r\n                              placeholderText=\"تاریخ را وارد نمایید\"\r\n                              value={toDate}\r\n                              onChange={(toDate) =>\r\n                                setValue(\"toDate\", toDate, {\r\n                                  shouldValidate: true,\r\n                                  shouldDirty: true,\r\n                                })\r\n                              }\r\n                              keyboardIcon={\r\n                                <img src=\"./assets/calender-svgrepo-com.svg\" />\r\n                              }\r\n                            />\r\n                          )}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                    <Typography\r\n                      variant=\"inherit\"\r\n                      color=\"textSecondary\"\r\n                      className={classes.errorMessage}\r\n                    >\r\n                      {errors.toDate?.message}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} className={classes.Select}>\r\n                    <div className={classes.input}>\r\n                      <MuiPickersUtilsProvider\r\n                        utils={JalaliUtils}\r\n                        locale=\"fa\"\r\n                        className={classes.input}\r\n                      >\r\n                        <label className={classes.label}>تا ساعت</label>\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"toTime\"\r\n                          render={({ field }) => (\r\n                            <KeyboardTimePicker\r\n                              className={classes.inputSelect}\r\n                              inputVariant=\"outlined\"\r\n                              placeholderText=\"ساعت را وارد نمایید\"\r\n                              value={toTime}\r\n                              onChange={(toTime) =>\r\n                                setValue(\"toTime\", toTime, {\r\n                                  shouldValidate: true,\r\n                                  shouldDirty: true,\r\n                                })\r\n                              }\r\n                            />\r\n                          )}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                    <Typography\r\n                      variant=\"inherit\"\r\n                      color=\"textSecondary\"\r\n                      className={classes.errorMessage}\r\n                    >\r\n                      {errors.toTime?.message}\r\n                    </Typography>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.Divider2} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <div className={classes.box2}>\r\n              <div>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  align=\"center\"\r\n                  margin=\"dense\"\r\n                  color=\"primary\"\r\n                  className={classes.subTitle}\r\n                >\r\n                  فعالیت\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.box}>\r\n                <Grid item xs={12} sm={12} className={classes.Select}>\r\n                  <div>\r\n                    <Grid className={classes.input}>\r\n                      <label className={classes.label}>الویت</label>\r\n                      <Select\r\n                        className={classes.inputSelect}\r\n                        required\r\n                        variant=\"outlined\"\r\n                        {...register(\"apiary\")}\r\n                        error={errors.apiary ? true : false}\r\n\r\n                        // onChange={(e) =>\r\n                        //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                        // } // Using setValue\r\n                      >\r\n                        {options?.map((option) => {\r\n                          return (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label ?? option.value}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </Grid>\r\n                  </div>\r\n                  {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                  <Typography\r\n                    variant=\"inherit\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.errorMessage}\r\n                  >\r\n                    {errors.apiary?.message}\r\n                  </Typography>\r\n\r\n                  <Grid item className={classes.checkBox}>\r\n                    <FormControlLabel\r\n                      {...register(\"Checkbox\")}\r\n                      control={<Checkbox />}\r\n                      label=\"انجام شده\"\r\n                    />\r\n                  </Grid>\r\n                  {/* \r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorMessage}\r\n                >\r\n                  {errors.Checkbox?.message}\r\n                </Typography>  */}\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12} className={classes.Select}>\r\n                  <div className={classes.input}>\r\n                    <label className={classes.label}>یادآوری</label>\r\n                    <Select\r\n                      className={classes.inputSelect}\r\n                      required\r\n                      variant=\"outlined\"\r\n                      {...register(\"priority\")}\r\n                      error={errors.priority ? true : false}\r\n\r\n                      // onChange={(e) =>\r\n                      //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                      // } // Using setValue\r\n                    >\r\n                      {options?.map((option) => {\r\n                        return (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label ?? option.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </div>\r\n                  {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                  <Typography\r\n                    variant=\"inherit\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.errorMessage}\r\n                  >\r\n                    {errors.priority?.message}\r\n                  </Typography>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.Divider2} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box mt={8} style={{ width: \"100%\" }}>\r\n          <div className={classes.buttonBox}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.Button2}\r\n              onClick={handleClose}\r\n            >\r\n              انصراف\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.Button1}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              افزودن\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\nexport default AddJob;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\User\\Adduser.js",["722","723","724","725","726","727","728","729","730"],"import React, { useRef, useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport PreviewImage from \"./PreviewImage\";\r\n\r\nfunction Adduser(props) {\r\n  const classes = useStyles();\r\n  const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/;\r\n  const FILE_SIZE = 10000*10000;\r\n\r\n  const validationSchema = yup.object().shape({\r\n    phoneNumber: yup\r\n      .string()\r\n      .matches(\r\n        phoneRegExp,\r\n        \"شماره موبایل را بدون صفر و با حروف انگلیسی وارد کنید\",\r\n      ),\r\n    Username: yup.string().required(\"لطفا نام کاربری خود را وارد کنید\"),\r\n    name: yup.string().required(\"لطفا نام خود را وارد کنید\"),\r\n    family: yup.string().required(\"لطفا نام خانوادگی خود را وارد کنید\"),\r\n    email: yup.string().email(\"لطفا ایمیل معتبر وارد کنید\"),\r\n    // Img:yup\r\n    // .mixed()\r\n    // .required(\"لطفا یک فایل انتخاب کنید\")\r\n    // .test(\r\n    //   \"fileSize\",\r\n    //   \"قایل انتخابی حجم زیادی دارد\",\r\n    //   (value) => {\r\n    //     console.log(\"vlaue\",value?.size)\r\n    //     return value && value?.size <= FILE_SIZE\r\n    //   }\r\n    // ),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const[selectedFile,setSelectedFile]=useState(null)\r\nconst fileRef=useRef(null)\r\n  const onSubmit = (data) => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // history.push(\"/login/step2\")\r\n  };\r\n\r\n  const fileSelectHandler = (e) => {\r\n     setSelectedFile(e.target.files[0]);\r\n  };\r\n  const fileUploadHandler = () => {};\r\n\r\n  let { path, url } = useRouteMatch();\r\n\r\n  return (\r\n    <Paper>\r\n      <Box px={3} py={2} className={classes.root}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          align=\"center\"\r\n          margin=\"dense\"\r\n          color=\"secondary\"\r\n          className={classes.Title}\r\n        >\r\n          کاربر جدید\r\n        </Typography>\r\n        <Divider className={classes.Divider1} />\r\n\r\n        <Grid item xs={12} sm={12} md={6} className={classes.TabHeader}>\r\n          <Grid>\r\n            <NavLink\r\n             exact to={`${url}`}\r\n              className={classes.item}\r\n              activeClassName={classes.activeItem}\r\n            >\r\n              وضعیت\r\n            </NavLink>\r\n          </Grid>\r\n          <Grid>\r\n            <NavLink\r\n              to={`${url}/sound`}\r\n              className={classes.item}\r\n              activeClassName={classes.activeItem}\r\n            >\r\n              صدا و تصویر\r\n            </NavLink>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={1} className={classes.container}>\r\n\r\n          <Grid xs={12} md={6}>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"name\")}\r\n                  error={errors.name ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.name?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام خانوادگی </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"family\"\r\n                  name=\"family\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"family\")}\r\n                  error={errors.family ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.family?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام کاربری </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"Username\"\r\n                  name=\"Username\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"Username\")}\r\n                  error={errors.Username ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.Username?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>شماره موبایل</label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"phoneNumber\"\r\n                  name=\"phoneNumber\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"phoneNumber\")}\r\n                  error={errors.phoneNumber ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.phoneNumber?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>ایمیل</label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"email\")}\r\n                  error={errors.email ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n         \r\n              >\r\n                {errors.email?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            md={6}\r\n            className={classes.uploaderImageBox}\r\n \r\n          >\r\n            <Typography variant=\"p\">آپلود عکس</Typography>\r\n        \r\n          {/* <input type=\"file\"  onChange={fileSelectHandler}  accept=\"image/png, image/jpeg\"   /> */}\r\n        <div className={classes.uploaderImage}>\r\n\r\n            { console.log(\"selectedFile\",selectedFile)}\r\n{  selectedFile ? <PreviewImage file={selectedFile} />:<Avatar src=\"./assets/Mask Group 3.svg\" alt=\"\"   className={classes.PreviewImage}/>\r\n}            <Button\r\n                 variant=\"contained\"\r\n                 component=\"label\"\r\n                 onChange={fileSelectHandler} \r\n                 style={{fontFamily:\"Shabnam\"}}\r\n                 className={classes.EditPhoto}\r\n \r\n             >\r\n               <img src=\"./assets/edit-svgrepo-com.svg\" className={classes.Edit}/>\r\n                ویرایش\r\n                \r\n               <input\r\n                  type=\"file\"\r\n                   hidden\r\n                   accept= \"image/jpg, image/jpeg , image/gif , image/png \"\r\n                   {...register(\"Img\")}\r\n               />\r\n           </Button>\r\n\r\n\r\n\r\n          </div>\r\n            {/* <button onClick={()=>{\r\n              // fileRef.current.onClick()\r\n            }}>آپلود\r\n            </button> */}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box mt={8} style={{ width: \"100%\" }}>\r\n          <div  className={classes.button}>\r\n            <Button variant=\"contained\" className={classes.Button2}>\r\n              انصراف\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.Button1}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              افزودن\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Adduser;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\ApiaryList\\ApiaryUpdateList.js",["731","732","733","734","735","736","737","738","739","740","741","742","743"],"import {\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport MapBox from \"../../../components/MapBox/MapBox\";\r\nimport axios from \"axios\";\r\nimport { useParams,useHistory } from \"react-router-dom\";\r\nimport Loading from \"../../Loading/Loading\";\r\n\r\nconst ApiaryUpdateList = ({ApiariesList,setApiariesList,onClose,setStatus}) => {\r\n  console.log(\"editApiariesList\",ApiariesList);\r\n  const params = useParams();\r\n  const history = useHistory()\r\n  console.log(\"params\", params.id)\r\n  console.log(\"props.Apiary\",ApiariesList);\r\n  const classes = useStyles();\r\n  const [errorMessage,setErrMessage] = useState()\r\n  const [error,setIserror] = useState()\r\n  const [ loading , setLoading]=useState(true)\r\n\r\n  const edit_id = localStorage.getItem(\"edit_id\")\r\n  console.log(\"edit_id\",edit_id);\r\n  const validationSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .required(\"لطفا نام زنبورستان وارد کنید\")\r\n      .min(2, \"برای وارد کردن نام حداقل ۲ کاراکتر لازم است\")\r\n      .max(20, \"Username must not exceed 20 characters\"),\r\n    hivesWithGoodCondition:yup.string().required(\" پر کردن این فیلد الزامی است \"),\r\n    hivesWithBadCondition:yup.string().required(\" پر کردن این فیلد الزامی است \"),\r\n    hivesWithVisitRequired:yup.string().required(\" پر کردن این فیلد الزامی است \"),\r\n    regionVegetation: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    regionType: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    // select3: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    // select4: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    apiaryUsage: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  });\r\n\r\n  const preLoadValues = {\r\n    firstname:\"زنبورستان ۱۲\",\r\n    select:\"تغذیه زنبور\"\r\n  }\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues:preLoadValues\r\n  });\r\n   /////////////////////////////////////////////////////////////////////////////////////////\r\n   const [ticketEdit,setTicketEdit]=useState([])\r\n   const token = localStorage.getItem(\"id_token\")\r\n   console.log(\"token\",token);\r\n   useEffect(() => {\r\n     const fetchData = async () =>{\r\n       // setLoading(true);\r\n       try {\r\n         const {data: response} = await axios.get(`http://185.202.113.165:3000/api/apiary/get-for-user/${edit_id}`,{\r\n           headers: {\r\n             'token': `${token}` \r\n           },\r\n         },);\r\n         console.log( \"show response\" , response.data);\r\n         const responseData = response.data;\r\n         reset({ \r\n          name: responseData.name ,\r\n          hivesWithGoodCondition: responseData.hivesWithGoodCondition,\r\n          hivesWithBadCondition: responseData. hivesWithBadCondition,\r\n          hivesWithVisitRequired: responseData.hivesWithVisitRequired,\r\n          regionVegetation: responseData.regionVegetation,\r\n          regionType: responseData.regionType,\r\n          apiaryUsage: responseData.apiaryUsage,\r\n          users:responseData.users.map((el)=>{return {_id:el}})\r\n        });\r\n        setTicketEdit(response.data)\r\n         setLoading(false)\r\n\r\n       } catch (error) {\r\n         console.error(error.message);\r\n         \r\n        //  history.push(\"/app/Error\")\r\n        //  window.location.reload()\r\n       }\r\n       // setLoading(false);\r\n     }\r\n     fetchData();\r\n   }, [reset]);\r\n\r\n\r\n \r\n   /////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n  const onSubmit = async (data) => {\r\n\r\n    const response = await axios.put(`http://185.202.113.165:3000/api/apiary/update-for-user/${edit_id}`,{...data ,\"locationLangitude\": 8,\r\n    \"locationLatitude\": 10},{\r\n      headers: {\r\n        'token': `${token}` \r\n      },\r\n    })\r\n    // setApiariesList([...ApiariesList , data])\r\n    const {id}=response.data\r\n    console.log(\"log response\",response);\r\n    setApiariesList(ApiariesList.map((apiary) => apiary.id === edit_id ? apiary : data))\r\n    setStatus(true)\r\n    // const updatedApiary=ApiariesList\r\n    // console.log(\"updatedApiary\",updatedApiary);\r\n  \r\n\r\n    // const Index=updatedApiary.findIndex((edit)=>{\r\n    //        return edit._id===edit_id\r\n                       \r\n    // })\r\n    // console.log(\"copy\",Index);\r\n    // // const index=updatedApiary.indexOf([copy]);\r\n    // // console.log(\"indexxxxxx\",index);\r\n    // // console.log(\"data ro bede to dast man\",response.data.data._id);\r\n    // const index = updatedApiary.indexOf(data._id);\r\n    // // console.log(\"datashow\",data);\r\n    // // console.log(\"dataIndex\",index);\r\n    // updatedApiary[Index]={...data};\r\n    // // console.log(\"updatedApiary2\",updatedApiary);\r\n\r\n    // // console.log(\"data ro bede to dast man 2\", updatedApiary[1]);\r\n    // setApiariesList(updatedApiary)\r\n    onClose();\r\n    // console.log(\"ApiariesListedit\",ApiariesList);\r\n    // history.push(\"/app/apiaryList\")\r\n    // setApiariesList([...ApiariesList , {ApiariesList:updatedApiary}])\r\n    // window.location.reload()\r\n    // const updatedApiary=[Apiary]\r\n    // const index = updatedApiary.indexOf(data);\r\n    // updatedApiary[index]={...data};\r\n    // setApiary({Apiary:updatedApiary})\r\n    // history.push(\"/app/apiaryList\")\r\n    // setApiariesList([...ApiariesList , {ApiariesList:updatedApiary}])\r\n    // window.location.reload()\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   axios.get(`https://sdfsdfsdf/${params.id}`)\r\n  //     .then(res => {\r\n  //       setApiary(res.data.data)\r\n  //     })\r\n  //     .catch(error=>{\r\n  //       setErrMessage([\"Cannot load user data\"])\r\n  //       setIserror(true)\r\n  //     })\r\n  // }, [])\r\n\r\n\r\n  const option = [  \r\n    { label: \"باغ\", value: \"Garden\" },\r\n    { label: \"مزرعه\", value: \"Farm\" },\r\n    { label: \"مرتع کوهستانی\", value: \"Mountain\" },\r\n    { label: \"دشت\", value: \"Plain\" },\r\n    { label: \"سایر\", value: \"Other\" },\r\n  ]\r\n  const option2 = [  \r\n    { label: \"شهری\", value: \"Urban\" },\r\n    { label: \"روستایی\" , value: \"Village\" },\r\n  ]\r\n  const option3 = [  \r\n    { label: \"پرورش ملکه\", value: \"Queen\" },\r\n    { label: \"ژل رویال\" , value: \"Royal\" },\r\n    { label: \"تولید عسل\", value: \"Honey\" },\r\n    { label: \"سایر\", value: \"Other\" },\r\n  ]\r\n\r\n\r\n  \r\n  const style = {\r\n    borderRadius: \"12px\",\r\n    overflow: \"hidden\",\r\n    marginTop: \"16px\",\r\n  };\r\n  console.log(\"defaultValue={ticketEdit.regionType}  \",ticketEdit.regionType);\r\n  const isStaff = localStorage.getItem(\"isStaff\")\r\n  return (\r\n    <Fragment>\r\n     {loading?\r\n          <div className={classes.Loading}> <Loading color=\"orange\" /></div>: \r\n      <Paper>\r\n{   isStaff? <Box px={3} py={2} className={classes.root}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"center\"\r\n            margin=\"dense\"\r\n            color=\"secondary\"\r\n            className={classes.Title}\r\n            color=\"secondary\"\r\n          >\r\n            ویرایش زنبورستان\r\n          </Typography>\r\n          <Divider className={classes.Divider}/>\r\n\r\n          <Grid container spacing={1} className={classes.container}>\r\n            <div >\r\n              <Grid item xs={12} sm={12} className={classes.inputText}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>نام زنبورستان</label>\r\n                  <TextField\r\n                    className={classes.TextField}\r\n                    required\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    {...register(\"name\")}\r\n                    error={errors.name ? true : false}\r\n                  />\r\n                </div>\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n\r\n                >\r\n                  {errors.firstname?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} className={classes.inputText} >\r\n                <div className={classes.input} >\r\n                  <label className={classes.label}>وضعیت مناسب</label>\r\n                  <TextField\r\n                    className={classes.TextField}\r\n                    required\r\n                    id=\"hivesWithGoodCondition\"\r\n                    name=\"hivesWithGoodCondition\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    {...register(\"hivesWithGoodCondition\")}\r\n                    error={errors.hivesWithGoodCondition ? true : false}\r\n                  />\r\n                </div>\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.hivesWithGoodCondition?.message}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} className={classes.inputText} >\r\n                <div className={classes.input} >\r\n                  <label className={classes.label}> وضعیت نامناسب </label>\r\n                  <TextField\r\n                    className={classes.TextField}\r\n                    required\r\n                    id=\"hivesWithBadCondition\"\r\n                    name=\"hivesWithBadCondition\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    margin=\"dense\"\r\n                    {...register(\"hivesWithBadCondition\")}\r\n                    error={errors.hivesWithBadCondition ? true : false}\r\n                  />\r\n                </div>\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.hivesWithBadCondition?.message}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} className={classes.inputText} >\r\n                <div className={classes.input} >\r\n                  <label className={classes.label}> نیازمند بازدید</label>\r\n                  <TextField\r\n                    className={classes.TextField}\r\n                    required\r\n                    id=\"hivesWithVisitRequired\"\r\n                    name=\"hivesWithVisitRequired\"\r\n                    type=\"number\"\r\n\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    {...register(\"hivesWithVisitRequired\")}\r\n                    error={errors.hivesWithVisitRequired ? true : false}\r\n                  />\r\n                </div>\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.hivesWithVisitRequired?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n\r\n              <Grid item xs={12} sm={12} className={classes.Select}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>پوشش گیاهی منطقه</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    name = \"regionVegetation\"\r\n                    defaultValue={ticketEdit.regionVegetation}\r\n                    {...register(\"regionVegetation\")}\r\n                    error={errors.regionVegetation ? true : false}\r\n                    // value={}\r\n                  >\r\n                    {option?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.regionVegetation?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>نوع منطقه</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n               \r\n\r\n                    {...register(\"regionType\")}\r\n                    defaultValue={ticketEdit.regionType}\r\n                    error={errors.regionType ? true : false}\r\n                    // value={}\r\n                  >\r\n                    {option2?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.regionType?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              {/* <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>استان</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    defaultValue={options[2].value}\r\n                    {...register(\"select3\")}\r\n                    error={errors.select3 ? true : false}\r\n                    // value={}\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                {/* <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select3?.message}\r\n                </Typography>\r\n              </Grid> */} \r\n\r\n              {/* <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>شهر </label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    defaultValue={options[3].value}\r\n\r\n                    {...register(\"select4\")}\r\n                    error={errors.select4 ? true : false}\r\n                    // value={}\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                {/* <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select4?.message}\r\n                </Typography>\r\n              </Grid>  */}\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}  > کاربرد </label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    defaultValue={ticketEdit.apiaryUsage}\r\n\r\n                    {...register(\"apiaryUsage\")}\r\n                    error={errors.apiaryUsage ? true : false}\r\n                    // value={}\r\n                  >\r\n                    {option3?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.apiaryUsage?.message}\r\n                </Typography>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              lg={5}\r\n              className={classes.Map}\r\n\r\n            >\r\n              <div className={classes.mapTitle}>\r\n                انتخاب مکان از روی نقشه\r\n              </div>\r\n              <MapBox style={style} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Divider className={classes.Divider2}/>\r\n          <Box  className={classes.ButtonBox}>\r\n            <div className={classes.button}>\r\n              <Button variant=\"contained\" className={classes.Button2} onClick={onClose}>\r\n                انصراف\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.Button1}\r\n                onClick={handleSubmit(onSubmit)}\r\n              >\r\n                افزودن\r\n              </Button>\r\n            </div>\r\n          </Box>\r\n        </Box>:<Box px={2} py={2} className={classes.notAccess}>اجازه دسترسی به این صفحه را ندارید!</Box>}\r\n      </Paper>}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ApiaryUpdateList;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\ApiaryList\\ApiaryAddList.js",["744","745","746","747","748","749","750","751","752"],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\event-utils.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\User\\PreviewImage.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\User\\styles.js",["753"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontFamily: \"Shabnam\",\r\n  },\r\n  container:{\r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-between\",\r\n  },\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n    marginRight: \"25px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"none\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Shabnam\",\r\n\r\n  },\r\n  Title:{\r\n    fontWeight: \"bold\" \r\n  },\r\n  errorTitle:{ \r\n    color: \"red\"\r\n  },\r\n  Divider1:{\r\n    marginTop: \"8px\" \r\n  },\r\n\r\n  PreviewImage:{\r\n    width:\"200px\",\r\n    height:\"200px\"\r\n  },\r\n  button:{\r\n    display: \"flex\", \r\n    justifyContent: \"space-between\"\r\n  },\r\n  Button1: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 26 ,115, 233)\",\r\n    color:\"#fff\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"20%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 26 ,115, 233)\",\r\n      borderWidth: 2,\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  Button2: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 255 255 255)\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"20%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 255 255 255)\",\r\n      borderWidth: 2,\r\n      color: \"#000\",\r\n    },\r\n  },\r\n  inputText:{\r\n    display: \"flex\",\r\n    flexDirection:\"column\",\r\n  },\r\n  TextField:{\r\n    width: \"250px\",\r\n    background:\"rgb( 244 244 244)\",\r\n    border:\"none\",\r\n    borderRadius: \"10px\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"rgb( 26 ,115, 233) !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n        borderRadius: \"10px\",\r\n\r\n      },\r\n    },\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems:\"center\",\r\n    marginTop: \"32px\",\r\n    fontFamily: \"Shabnam\",\r\n    border: \"none\",\r\n    \"& label.Mui-focused\": {\r\n      border:\"5px solid red\",\r\n      color: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"2px solid red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\", \r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid red !important\",\r\n        borderRadius: \"10px\",  \r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n\r\n      },\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      display: \"flex\",\r\n      flexDirection:\"column\",\r\n        },\r\n  },\r\n  inputSelect: {\r\n    width: \"250px\",\r\n    display:\"flex\",\r\n    height:\"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n    \"&\t.MuiSelect-outlined\":{\r\n    \r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n\r\n\r\n\r\n  select: {\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    borderRadius: \"10px\",\r\n    \"&:before\": {\r\n      border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:hover\": {\r\n      border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:after\": {\r\n      border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n    },\r\n    \"&:not(.Mui-disabled):hover::before\": {\r\n      border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  icon: {\r\n    fill: \"green\"\r\n  },\r\n  text: {\r\n    border: \"none\",backgroundColor: \"#fff\",outline: \"2px solid red\"\r\n  },\r\n  outline: {\r\n    \"&:before\": {\r\n    borderColor: \"red\"\r\n    },\r\n    \"&:after\": {\r\n    borderColor: \"red\"\r\n    }},\r\n    item:{\r\n        textDecoration:\"none\",\r\n        color: \"rgb( 227, 156, 0)\",\r\n     \r\n      },\r\n      activeItem:{\r\n      background:\"#fff\",\r\n      padding:\"4px 16px\",\r\n      borderRadius:\"8px\",\r\n      color:\"#000\",\r\n      textDecoration:\"none\",\r\n      cursor:\"pointer\",\r\n      boxShadow:\"0px 3px 6px 0px rgba(0,0,0,0.16)\"\r\n      \r\n    },\r\n    TabHeader: {\r\n        backgroundColor: \"rgb( 255 ,242, 212)\",\r\n        margin:\"0 auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        height: \"50px\",\r\n        boxShadow:\r\n          \" rgba(0, 0, 0, 0.1) 0px 60px 100px -100px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\r\n        color: \"rgb( 227, 156, 0)\",\r\n        fontWeight: \"bold\",\r\n        borderRadius: \"15px\",\r\n        fontSize: \"1rem\",\r\n        marginBottom:\"16px;\",\r\n        marginTop:\"16px\"\r\n      },\r\n      uploaderImageBox:{\r\n        marginTop: \"32px\",\r\n         display:\"flex\",\r\n         flexDirection:\"column\"\r\n      },\r\n      uploaderImage:{\r\n        display:\"flex\",  \r\n        flexDirection:\"column\",\r\n        alignItems:\"center\",\r\n        margin:\"auto 0\"\r\n\r\n      },\r\n      EditPhoto:{\r\n        background:\"rgb( 255 176 4)\",\r\n        borderBottomLeftRadius: \"300px\",  /* 100px of height + 10px of border */\r\n        borderBottomRightRadius: \"300px\",\r\n        borderBottom: 0,\r\n        width:\"155px\",\r\n        height:\" 40px\",\r\n      \r\n        transform:\"translateY(-38px)\",\r\n        \"&:hover\":{\r\n          background:\"rgb( 255 176 4)\",\r\n\r\n\r\n        }\r\n      },\r\n      Edit:{\r\n        marginLeft:\"8px\"\r\n      }\r\n}));\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\JobUser\\styles.js",["754","755","756"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontFamily: \"Shabnam\",\r\n  },\r\n\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  Title: {\r\n    fontWeight: \"bold\",\r\n    marginTop: \"16px\",\r\n  },\r\n\r\n  subTitle: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\",\r\n    marginTop: \"8px\",\r\n  },\r\n\r\n  Divider1: {\r\n    marginTop: \"8px\",\r\n    width: \"100%\",\r\n  },\r\n  Divider2: {\r\n    margin: \"32px auto 0\",\r\n    width: \"100%\",\r\n  },\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n    // border:\"2px solid pink\",\r\n    // marginLeft: \"50px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"none\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Shabnam\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    // border:\"2px solid red\",\r\n    // gap:\"0 32px\"\r\n  },\r\n  box2: {\r\n    width: \"100%\",\r\n    marginBottom: \"8px\",\r\n  },\r\n  Button1: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 26 ,115, 233)\",\r\n    color: \"#fff\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"16%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 26 ,115, 233)\",\r\n      borderWidth: 2,\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  Button2: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 255 255 255)\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"16%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 255 255 255)\",\r\n      borderWidth: 2,\r\n      color: \"#000\",\r\n    },\r\n  },\r\n  inputText: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // border:\"2px solid red\"\r\n  },\r\n  TextField: {\r\n    width: \"50%\",\r\n    background: \"rgb( 244 244 244)\",\r\n    border: \"none\",\r\n    borderRadius: \"10px\",\r\n\r\n    \"& label.Mui-focused\": {\r\n      color: \"rgb( 26 ,115, 233) !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n        borderRadius: \"10px\",\r\n      },\r\n    },\r\n  },\r\nSelect:{\r\n  // border:\"2px solid red\",\r\n\r\n},\r\n  input: {\r\n    display: \"flex\",\r\n// border:\"2px solid green\",\r\n    justifyContent: \"space-around\",\r\n    // alignItems:\"flex-start\",\r\n    // padding:\"0px 24px\",\r\n    alignItems: \"center\",\r\n    marginTop: \"24px\",\r\n    fontFamily: \"Shabnam\",\r\n    // border: \"none\",\r\n    \"& label.Mui-focused\": {\r\n      border: \"5px solid red\",\r\n      color: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"2px solid red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n    \"&.Mui-focused fieldset\": {\r\n        borderRadius: \"10px\",\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n\r\n      },\r\n    },\r\n  },\r\n  inputDate: {\r\n    display: \"flex\",\r\n    height: \"40px\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: \"32px\",\r\n    fontFamily: \"Shabnam\",\r\n    border: \"none\",\r\n    \"& label.Mui-focused\": {\r\n      border: \"5px solid red\",\r\n      color: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"2px solid red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n        padding: \"0 !important\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        borderRadius: \"10px\",\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n      },\r\n    },\r\n  },\r\n  inputSelect: {\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    height: \"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n    \"&\t.MuiSelect-outlined\": {\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&\t.MuiSelect-outlined\": {\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n\r\n  Datepicker: {\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    height: \"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n    \"&\t.MuiSelect-outlined\": {\r\n      borderRadius: \"10px\",\r\n      height: \"40px\",\r\n    },\r\n    \"&\t.MuiSelect-outlined\": {\r\n      borderRadius: \"10px\",\r\n      height: \"40px\",\r\n    },\r\n  },\r\n\r\n  select: {\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    borderRadius: \"10px\",\r\n    \"&:before\": {\r\n      border: \"none\",\r\n      backgroundColor: \"#fff\",\r\n      outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:hover\": {\r\n      border: \"none\",\r\n      backgroundColor: \"#fff\",\r\n      outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:after\": {\r\n      border: \"none\",\r\n      backgroundColor: \"#fff\",\r\n      outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:not(.Mui-disabled):hover::before\": {\r\n      border: \"none\",\r\n      backgroundColor: \"#fff\",\r\n      outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  icon: {\r\n    fill: \"green\",\r\n  },\r\n  text: {\r\n    border: \"none\",\r\n    backgroundColor: \"#fff\",\r\n    outline: \"2px solid red\",\r\n  },\r\n  outline: {\r\n    \"&:before\": {\r\n      borderColor: \"red\",\r\n    },\r\n    \"&:after\": {\r\n      borderColor: \"red\",\r\n    },\r\n  },\r\n  item: {\r\n    textDecoration: \"none\",\r\n    color: \"rgb( 227, 156, 0)\",\r\n  },\r\n  activeItem: {\r\n    background: \"#fff\",\r\n    padding: \"4px 16px\",\r\n    borderRadius: \"8px\",\r\n    color: \"#000\",\r\n    textDecoration: \"none\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 3px 6px 0px rgba(0,0,0,0.16)\",\r\n  },\r\n  TabHeader: {\r\n    backgroundColor: \"rgb( 255 ,242, 212)\",\r\n    margin: \"0 auto\",\r\n    width:\"300px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    height: \"50px\",\r\n    boxShadow:\r\n      \" rgba(0, 0, 0, 0.1) 0px 60px 100px -100px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\r\n    color: \"rgb( 227, 156, 0)\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"15px\",\r\n    fontSize: \"1rem\",\r\n    marginBottom: \"16px;\",\r\n    marginTop: \"16px\",\r\n  },\r\n  errorMessage: {\r\n    color: \"red\",\r\n  },\r\n  checkBox: {\r\n    margin: \"16px 32px 0\",\r\n  },\r\n  buttonBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  inputTimePicker:{\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    height: \"45px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n    \"&\t.MuiSelect-outlined\": {\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&\t.MuiSelect-outlined\": {\r\n      borderRadius: \"10px\",\r\n    },\r\n    \r\n  },\r\n  MuiOutlinedInput:{\r\n    adornedEnd:{\r\n      border: \"2px solid red\",\r\n      height:\" 40px\"\r\n    }\r\n  }\r\n}));\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\ApiaryList\\styles.js",["757"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontFamily: \"Shabnam\",\r\n    /////////////////////\r\n    // position: \"absolute\",\r\n    // top: 0,\r\n    // left: 0,\r\n    // bottom: 0,\r\n    // right: 0,\r\n    // background: \"rgba(0, 0, 0, 0.15)\",\r\n    zIndex: 200,\r\n    paddingRight:\" 64px\",\r\n    paddingLeft:\" 64px\"\r\n  },\r\n  notAccess:{\r\n     textAlign:\"center\",\r\n     width: \"100%\",\r\n     background:\"orange\",\r\n     fontWeight:\"600\"\r\n  },\r\n  container:{\r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-between\",\r\n    // gap:\"60px\",\r\n    flexWrap:\"noWrap\",\r\n    // border:\"2px solid red\",\r\n    marginTop:\"24px\",\r\n    [theme.breakpoints.down('md')]: {\r\n      width:\"100%\",\r\n      flexWrap:\"Wrap\",\r\n    \r\n    },\r\n  },\r\n  main:{\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      width:\"100%\",\r\n\r\n    \r\n    },\r\n\r\n  },\r\n  Title:{\r\n    fontWeight: \"bold\" ,\r\n    color:\"rgb( 227 156 0)\",\r\n    marginTop:\"8px\"\r\n\r\n\r\n  },\r\n  errorTitle:{ \r\n    color: \"red\",\r\n    fontSize:\"0.6rem\",\r\n    fontWeight:\"600\"\r\n  },\r\n  mainLabel: {\r\n    whiteSpace: \"nowrap\",\r\n    marginRight: \"25px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"none\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Shabnam\",\r\n    fontSize:\"0.9rem\"\r\n\r\n  },\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n    marginRight: \"25px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"none\",\r\n    fontWeight: \"600\",\r\n    fontFamily: \"Shabnam\",\r\n\r\n  },\r\n\r\n  Divider:{\r\n    marginTop: \"24px\",\r\n    width:\"97%\",\r\n    position:\"absolute\",\r\n    right:\"0\",\r\n    left:\"0\"\r\n  },\r\n  Divider2:{\r\n    marginTop: \"80px\",\r\n    background:\"rgb(244 244 244)\",\r\n\r\n    width:\"97%\",\r\n    position:\"absolute\",\r\n    right:\"0\",\r\n    left:\"0\"\r\n  },\r\n  // Button1: {\r\n  //   marginTop: \"8px\",\r\n  //   display: \"flex\",\r\n  //   fontFamily: \"Shabnam\",\r\n  //   cursor: \"pointer\",\r\n  //   border: \"none\",\r\n  //   marginTop: \"100px\",\r\n  //   backgroundColor: \"rgb( 255, 255, 255)\",\r\n  //   boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n  //   color: \"#000\",\r\n  //   width: \"16%\",\r\n  //   padding: \"16px 0px\",\r\n  //   borderRadius: \"16px\",\r\n  //   fontWeight: \"bold\",\r\n  //   fontSize: \"16px\",\r\n  //   \"&:hover\": {\r\n  //     backgroundColor: \"#fff\",\r\n  //     borderWidth: 2,\r\n  //   },\r\n  // },\r\n  Map:{\r\n    borderRadius: \"8px\",\r\n    height: \"320px\",\r\n    width:\"50px\"\r\n  },\r\n\r\n  mapTitle:{\r\n    marginTop: \"32px\" , fontWeight: \"bold\"\r\n  },\r\n  ButtonBox:{\r\n    width: \"100%\",padding:\"24px 32px 8px 32px\" ,marginTop:\"80px\"\r\n  },\r\n  button:{\r\n    display: \"flex\", \r\n    justifyContent: \"space-between\"\r\n  },\r\n  Button1: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    padding: \"12px 30px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 26 ,115, 233)\",\r\n    color:\"#fff\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    // width: \"12%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 26 ,115, 233)\",\r\n      borderWidth: 2,\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  Button2: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    padding: \"12px 30px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 255 255 255)\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    // width: \"12%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 255 255 255)\",\r\n      borderWidth: 2,\r\n      color: \"#000\",\r\n    },\r\n  },\r\n  inputText:{\r\n    display: \"flex\",\r\n    flexDirection:\"column\",\r\n\r\n  },\r\n  TextField:{\r\n    width: \"200px\",\r\n    background:\"rgb( 244 244 244)\",\r\n    border:\"none\",\r\n    borderRadius: \"10px\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"rgb( 26 ,115, 233) !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n        borderRadius: \"10px\",\r\n\r\n      },\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      width:\"100%\"\r\n        },\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems:\"center\",\r\n    marginTop: \"16px\",\r\n    fontFamily: \"Shabnam\",\r\n    border: \"none\",\r\n    \"& label.Mui-focused\": {\r\n      border:\"5px solid red\",\r\n      color: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"2px solid red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\", \r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid red !important\",\r\n        borderRadius: \"10px\",  \r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n\r\n      },\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\nwidth:\"100%\",display:\"flex\",flexDirection:\"column\"\r\n    },\r\n\r\n  },\r\n  inputSelect: {\r\n    width: \"200px\",\r\n    marginTop: \"8px\",\r\n    display:\"flex\",\r\n    height:\"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n\r\n    \"&\t.MuiSelect-outlined\":{\r\n    \r\n      borderRadius: \"10px\",\r\n    },\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      width:\"100%\",\r\n      marginTop:\"8px\"\r\n        },\r\n  },\r\n\r\n\r\n\r\n  icon: {\r\n    fill: \"green\"\r\n  },\r\n  text: {\r\n    border: \"none\",backgroundColor: \"#fff\",outline: \"2px solid red\"\r\n  },\r\n  outline: {\r\n    \"&:before\": {\r\n    borderColor: \"red\"\r\n    },\r\n    \"&:after\": {\r\n    borderColor: \"red\"\r\n    }},\r\n    Loading:{\r\n      height:\"90%\",\r\n      display:\"flex\",\r\n      alignItems:\"center\"  ,\r\n      justifyContent:\"center\"\r\n  }\r\n}));\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\MapBox\\MapBox.js",["758","759","760","761"],"import * as React from \"react\";\r\nimport ReactMapGL, {Marker, NavigationControl} from \"react-map-gl\";\r\nimport PinBar from \"./ PinBar\";\r\nimport ControlPanel from \"./ControlPanel\";\r\n\r\nconst MapBox = ({style}) => {\r\n  const [viewport, setViewport] = React.useState({\r\n    latitude: 35.715298,\r\n    longitude: 51.404343,\r\n    zoom: 11,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  });\r\n  const initialViewState = {\r\n    latitude: 40,\r\n    longitude: -100,\r\n    zoom: 3.5\r\n  };\r\n  const [marker, setMarker] = React.useState({\r\n    latitude: 40,\r\n    longitude: -100\r\n  });\r\n  const [events, logEvents] = React.useState({});\r\n\r\n  const onMarkerDragStart = React.useCallback((event) => {\r\n    logEvents(_events => ({..._events, onDragStart: event.lngLat}));\r\n  }, []);\r\n\r\n  const onMarkerDrag = React.useCallback((event) => {\r\n    logEvents(_events => ({..._events, onDrag: event.lngLat}));\r\n\r\n    setMarker({\r\n      longitude: event.lngLat.lng,\r\n      latitude: event.lngLat.lat\r\n    });\r\n  }, []);\r\n\r\n  const onMarkerDragEnd = React.useCallback((event) => {\r\n    logEvents(_events => ({..._events, onDragEnd: event.lngLat}));\r\n  }, []);\r\n  return (\r\n  <>\r\n    <ReactMapGL\r\n      style={style}\r\n      mapStyle=\"mapbox://styles/bardia1375/cl1m1lpll00dv15qs77gj36mn\"\r\n      mapboxApiAccessToken=\"pk.eyJ1IjoiYmFyZGlhMTM3NSIsImEiOiJja3pxdzhlN3MwYTJ4MnFvMWh2eng0NXZuIn0.f4BgA_h-avnIWW8LhFGZLw\"\r\n      {...viewport}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      onViewportChange={(viewport) => setViewport(viewport)}\r\n    >\r\n         <Marker\r\n            longitude={marker.longitude}\r\n            latitude={marker.latitude}\r\n            anchor=\"bottom\"\r\n            draggable\r\n            onDragStart={onMarkerDragStart}\r\n            onDrag={onMarkerDrag}\r\n            onDragEnd={onMarkerDragEnd}\r\n          >\r\n          </Marker>\r\n          {/* <PinBar size={50} /> */}\r\n\r\n          <NavigationControl />\r\n    </ReactMapGL>\r\n    \r\n          {/* <ReactMapGL\r\n           style={style}\r\n          initialViewState={initialViewState}\r\n          mapStyle=\"mapbox://styles/bardia1375/cl1m1lpll00dv15qs77gj36mn\"\r\n          mapboxApiAccessToken=\"pk.eyJ1IjoiYmFyZGlhMTM3NSIsImEiOiJja3pxdzhlN3MwYTJ4MnFvMWh2eng0NXZuIn0.f4BgA_h-avnIWW8LhFGZLw\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          onViewportChange={(viewport) => setViewport(viewport)}\r\n        >\r\n          <Marker\r\n            longitude={marker.longitude}\r\n            latitude={marker.latitude}\r\n            anchor=\"bottom\"\r\n            draggable\r\n            onDragStart={onMarkerDragStart}\r\n            onDrag={onMarkerDrag}\r\n            onDragEnd={onMarkerDragEnd}\r\n          >\r\n          </Marker>\r\n  \r\n          <NavigationControl />\r\n       \r\n\r\n        </ReactMapGL> */}\r\n             {/* <ControlPanel events={events} /> */}\r\n      </>\r\n\r\n  );\r\n};\r\nexport default MapBox;\r\n\r\n\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\PageTitle\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\ApiaryList\\ApiaryList.js",["762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805"],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\MapBox\\ControlPanel.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\MapBox\\ PinBar.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\ApiaryList\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\Support.js",["806","807","808","809","810","811","812","813","814","815","816","817","818","819"],"import {\r\n  Breadcrumbs,\r\n  Button,\r\n  Dialog,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport AddTicket from \"./addTicket\";\r\nimport useStyles from \"./Style\";\r\nimport { Link ,useHistory} from \"react-router-dom\";\r\nimport AuthContext from \"../../context/AuthProvider\";\r\nimport useAxiosPrivate from \"../../hooks/useAxiosPrivate\";\r\nimport axios from \"axios\";\r\nimport AddQRcode from \"./addQRcode\";\r\nimport moment from \"jalali-moment\";\r\nimport Loading from \"../../../components/Loading/Loading\";\r\nimport { NavigateBefore } from \"@material-ui/icons\";\r\nimport Title from \"../../../components/Typography/Title/Title\";\r\nimport classNames from \"classnames\";\r\nimport \"./Support.css\";\r\nimport Youtube from \"./youtube\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction Support() {\r\n  const [open, setOpen] = useState(false);\r\n  const [AddTickets, setAddTickets] = useState(true);\r\n  const [newTicket, setNewTicket] = useState([]);\r\n  // global\r\n  // var layoutState = useLayoutState();\r\n  const { auth, setAuth } = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n  const history = useHistory();\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  const axiosInstance = useAxiosPrivate();\r\n  const token = localStorage.getItem(\"id_token\");\r\n  console.log(\"token\", token);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // setLoading(true);\r\n      try {\r\n        const { data: response } = await axios.get(\r\n          \"http://185.202.113.165:3000/api/ticket/getUserTickets\",\r\n          {\r\n            headers: {\r\n              token: `${token}`,\r\n            },\r\n          },\r\n        );\r\n        console.log(\"show response\", response.data);\r\n        console.log(\"show response lenght\", response.data.length);\r\n        const length = response.data.length;\r\n        console.log(\"auth ro see kon to support\", auth);\r\n        setNewTicket(response.data);\r\n        setLoading(false);\r\n        if (length != 0) {\r\n          setShow(true);\r\n        } else {\r\n          setShow(false);\r\n        }\r\n      } catch (error) {\r\n        if (error.response?.status === 401) {\r\n          localStorage.clear(\"id_token\")\r\n          console.log(\"سرور دچار مشکل شده است یا اعتبار توکن به پایان رسیده است\" + \"ApiaryList\" );\r\n          window.location.reload()\r\n        }else{\r\n        console.log(\"سرور دچار مشکل شده است یا اعتبار توکن به پایان رسیده است\" + \"ApiaryList\" );\r\n        history.push(\"/app/Error\")\r\n        window.location.reload()\r\n       }}\r\n      // setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  console.log(\"auth ro see kon to support\", auth);\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////\r\n  const m = moment();\r\n  m.locale(\"fa\");\r\n  console.log(m.format(\"YY-MM-DD\"));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState([\r\n    {\r\n      status: false,\r\n      id: 1,\r\n      Title: \"موضوع تیکت\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n      state: {\r\n        close: 0,\r\n        open: 1,\r\n        wait: 2,\r\n      },\r\n      status1: \"Wait\",\r\n      Duration: \"8 ماه پیش \",\r\n    },\r\n    {\r\n      id: 2,\r\n      Title: \"درخواست QR Code\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n      state: {\r\n        close: 0,\r\n        open: 1,\r\n        wait: 2,\r\n      },\r\n      status1: \"Open\",\r\n      Duration: \"8 ماه پیش \",\r\n    },\r\n    {\r\n      id: 3,\r\n      Title: \"موضوع تیکت\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n      state: {\r\n        close: 0,\r\n        open: 1,\r\n        wait: 2,\r\n      },\r\n      status1: \"Close\",\r\n      Duration: \"8 ماه پیش \",\r\n    },\r\n    {\r\n      id: 4,\r\n      Title: \"موضوع تیکت\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n      state: {\r\n        close: 0,\r\n        open: 1,\r\n        wait: 2,\r\n      },\r\n      Duration: \"8 ماه پیش \",\r\n    },\r\n  ]);\r\n\r\n  const waveHello = () => {\r\n    setAddTickets(false);\r\n  };\r\n\r\n  const wavebye = () => {\r\n    setAddTickets(true);\r\n  };\r\n  // console.log(\"11111111\",newTicket)\r\n\r\n  console.log(\"newTicket\", newTicket);\r\n  // const AddTicket=localStorage.getItem(\"AddTicket\")\r\n  // console.log(\"AddTicket\",AddTicket);\r\n  console.log(\"show\", show);\r\n\r\n\r\n\r\n  const breadcrumbs = [\r\n    <Link key=\"1\" style={{ textDecoration: \"none\", cursor: \"pointer\" }}>\r\n      <Title key=\"1\" title=\" پشتیبانی \" />\r\n    </Link>,\r\n    <Link key=\"2\" style={{ textDecoration: \"none\", cursor: \"pointer\" }}>\r\n      {/* <Title key=\"2\" title=\"پیام‌های من\"/> */}\r\n      <p style={{ color: \"rgb(227, 156, 0)\", fontWeight: \"bold\" }}>\r\n        پیام‌های من\r\n      </p>\r\n    </Link>,\r\n\r\n    // <Title key=\"3\" title={id}/>\r\n  ];\r\nconsole.log(\"show\",show);\r\n  return (\r\n    <div className={classes.container}>\r\n      <Breadcrumbs\r\n        separator={\r\n          <NavigateBefore\r\n            fontSize=\"large\"\r\n            style={{ color: \"rgb(227, 156, 0)\" }}\r\n          />\r\n        }\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n      {loading ? (\r\n        <div className={classes.LoadingMain}>\r\n          {\" \"}\r\n          <Loading color=\"orange\" />\r\n        </div>\r\n      ) : (\r\n        <Grid container >\r\n          <Grid item xs={12} className={classes.Button}>\r\n            <Button\r\n              className={classes.button1}\r\n              onClick={() => {\r\n                handleClickOpen();\r\n                waveHello();\r\n              }}\r\n              style={{ fontFamily: \"Shabnam\" }}\r\n            >\r\n              تیکت به پشتیبانی\r\n            </Button>\r\n\r\n\r\n            <Button\r\n              className={classes.button2}\r\n              onClick={() => {\r\n                handleClickOpen();\r\n                wavebye();\r\n              }}\r\n              style={{ fontFamily: \"Shabnam\" }}\r\n            >\r\n              درخواست  QR Code\r\n            </Button>\r\n          </Grid>\r\n\r\n          {show ? null : (\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60vh\",\r\n                boxShadow: \"0px 3px 6px 3px rgba( 0, 0, 0, 0.16)\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                borderRadius: \"12px\",\r\n                marginTop: \"32px\",\r\n              }}\r\n            >\r\n              تیکتی جهت نمایش وجود ندارد!\r\n            </div>\r\n          )}\r\n\r\n          {/* new ticket main*/}\r\n\r\n          {newTicket?.map((element) => {\r\n            const ticketDate = moment.from(element.updatedAt).locale(\"fa\");\r\n            let durationDate = moment().diff(ticketDate, \"days\");\r\n\r\n            //css calss\r\n            let btnClass = classNames({\r\n              [classes.openTicket]: element.status === \"Open\",\r\n              [classes.closeTicket]: element.status === \"CloseByAdmin\",\r\n              [classes.closeTicketAdmin]: element.status === \"CloseByUser\",\r\n              [classes.waitTicket]: element.status === \"Wait\",\r\n            });\r\n            //logic calss\r\n            const changeText = (e) => {\r\n              switch (e) {\r\n                case \"Open\":\r\n                  return <div>باز</div>;\r\n                case \"CloseByAdmin\":\r\n                  return <div>بسته</div>;\r\n                case \"CloseByUser\":\r\n                  return <div>بسته</div>;\r\n                default:\r\n                  return <div>در انتظار</div>;\r\n              }\r\n            };\r\n            const title = (e) => {\r\n              switch (e) {\r\n                case \"cure\":\r\n                  return <div>درمان</div>;\r\n                case \"nurture\":\r\n                  return <div>تغذیه</div>;\r\n                case \"visit\":\r\n                  return <div>بازدید</div>;\r\n                case \"pickHoney\":\r\n                  return <div>برداشت عسل</div>;\r\n                case \"apiary\":\r\n                  return <div>زنبورستان</div>;\r\n                case \"hive\":\r\n                  return <div>کندو</div>;\r\n                case \"products\":\r\n                  return <div>محصولات</div>;\r\n                case \"queen\":\r\n                  return <div>ملکه</div>;\r\n                case \"honeyBehaviour\":\r\n                  return <div>رفتار زنبورعسل</div>;\r\n                case \"boardConnection\":\r\n                  return <div>ارتباط با برد</div>;\r\n                case \"accesses\":\r\n                  return <div>دسترسی ها</div>;\r\n                case \"profile\":\r\n                  return <div>حساب کاربری</div>;\r\n                case \"moveHive\":\r\n                  return <div>انتقال</div>;\r\n                  case \"qrCode\":\r\n                    return <div> تیکت QRCODE </div>    \r\n                  case \"requestQRCode\":\r\n                    return <div>درخواست QRCODE</div>   \r\n\r\n                case \"other\":\r\n                  return <div>سایر</div>;\r\n                default:\r\n                  return <div>بدون عنوان </div>;\r\n              }\r\n            };\r\n            // switch (element.status) {\r\n            //   case \"Open\":\r\n            //     return <div>باز</div>\r\n            //   case \"CloseByUser\":\r\n\r\n            //   default:\r\n            //     break;\r\n            // }\r\n            let seenClass = classNames({\r\n              notSeen: element.seenByUser === false,\r\n              Seen: element.seenByUser === true,\r\n            });\r\n            switch (element.category) {\r\n              case \"requestQRCode\":\r\n                return(\r\n                <Link\r\n                key={element._id}\r\n                to={`./Support/qrCode/${element._id}`  }\r\n                className={seenClass}\r\n                item\r\n                sm={12}\r\n            \r\n                style={{ marginTop: \"32px\",color: \"#000\",textDecoration:\"none\",cursor: \"pointer\"}}\r\n              >\r\n                  <Grid className={classes.rightContent}>\r\n                    <Grid item className={classes.Titles}>\r\n                      <Typography className={classes.Title}>\r\n                        {title(element.category)}\r\n                      </Typography>\r\n                      <Typography className={classes.Date}> {moment.from(element.updatedAt).locale('fa').format('YYYY/M/D HH:mm')}</Typography>\r\n                       {/* <Typography className={classes.Time}>({element.createBy.mobile})</Typography> */}\r\n      \r\n      \r\n      \r\n      \r\n                    </Grid>\r\n                    <Grid className={btnClass}>{changeText(element.status)}</Grid>\r\n                  </Grid>\r\n      \r\n                  <Grid className={classes.Duration}>{durationDate==\"0\"?<div>در ۲۴ ساعت گذشته</div>:<div>{durationDate} روز قبل</div>}</Grid>\r\n      \r\n              </Link>\r\n            )\r\n              default:\r\n                return (\r\n                <Link\r\n                key={element._id}\r\n                to={`./Support/${element._id}`  }\r\n                className={seenClass}\r\n                item\r\n                sm={12}\r\n            \r\n                style={{ marginTop: \"32px\",color: \"#000\",textDecoration:\"none\",cursor: \"pointer\"}}\r\n              >\r\n                  <Grid className={classes.rightContent}>\r\n                    <Grid item className={classes.Titles}>\r\n                      <Typography className={classes.Title}>\r\n                        {title(element.category)}\r\n                      </Typography>\r\n                      <Typography className={classes.Date}> {moment.from(element.updatedAt).locale('fa').format('YYYY/M/D HH:mm')}</Typography>\r\n                       {/* <Typography className={classes.Time}>({element.createBy.mobile})</Typography> */}\r\n      \r\n      \r\n      \r\n      \r\n                    </Grid>\r\n                    <Grid className={btnClass}>{changeText(element.status)}</Grid>\r\n                  </Grid>\r\n      \r\n                  <Grid className={classes.Duration}>{durationDate==\"0\"?<div>در ۲۴ ساعت گذشته</div>:<div>{durationDate} روز قبل</div>}</Grid>\r\n      \r\n              </Link>)\r\n                break;\r\n            }\r\n          })}\r\n\r\n          {/* {data.map((element) => {\r\n                  let btnClass = classNames({\r\n             \r\n                    [classes.openTicket]: element.status1===\"Open\",\r\n                    [classes.closeTicket]: element.status1===\"Close\",\r\n                    [classes.waitTicket]: element.status1===\"Wait\",\r\n        \r\n                    // [classes.drawerClose]: !element.status,\r\n                  // btn: true,\r\n                 'open': element.status,\r\n                 'close': !element.status && element.status,\r\n                 \"wait\":element.status\r\n               });\r\n\r\n              return (   \r\n\r\n              <Grid\r\n                className={classes.QuestionCountainer}\r\n                item\r\n                xs={12}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  className={classes.titleQuestion}\r\n                >\r\n                  {element.Title}\r\n                </Grid>\r\n                <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                {moment.from(element.sentAt).locale('fa').format('YYYY/M/D HH:mm')} | {element.Date} {element.Time}\r\n                  \r\n                </Grid>\r\n                <Grid className={btnClass}>{changeText}</Grid>\r\n              </Grid>)\r\n\r\n              \r\n\r\n      })} */}\r\n\r\n          <Dialog\r\n            style={{ backgroundColor: \"rgba(0 ,0 ,0, 0.5)\" }}\r\n            maxWidth=\"xl\"\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            {console.log(AddTickets)}\r\n            {AddTickets ? (\r\n              <AddQRcode\r\n                input={false}\r\n                handleClose={handleClose}\r\n                title=\" درخواست QR Code  \"\r\n                style={{ width: \"100%\" }}\r\n                newTicket={newTicket}\r\n                setNewTicket={setNewTicket}\r\n              />\r\n\r\n            ) : (\r\n              <AddTicket\r\n                input={true}\r\n                handleClose={handleClose}\r\n                title=\" تیکت جدید\"\r\n                style={{ width: \"100%\" }}\r\n                newTicket={newTicket}\r\n                setNewTicket={setNewTicket}\r\n                setShow={setShow}\r\n              />\r\n            )}\r\n          </Dialog>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Support;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\ChatPage\\ChatPage.js",["820","821","822","823","824","825","826","827","828","829","830","831","832","833"],"\r\nimport { Breadcrumbs, Button, Grid, TextareaAutosize, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useStyles from \"./Style\";\r\nimport {\r\n  Link,\r\n  useParams,useHistory\r\n} from \"react-router-dom\";\r\nimport moment from \"jalali-moment\";\r\nimport Loading from \"../../../../components/Loading/Loading\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { Close, Description, NavigateBefore } from \"@material-ui/icons\";\r\nimport Title from \"../../../../components/Typography/Title/Title\";\r\nimport classNames from \"classnames\";\r\nimport fileDownload from \"js-file-download\";\r\nimport LodaingQr from \"./LodaingQr\";\r\n\r\nfunction SupportPage() {\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const [newTicket , setNewTicket] = useState([])\r\n  const [newTicketStatus , setNewTicketStatus] = useState([])\r\n  const [ image , setImage ] = useState('')\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const { id } = useParams()\r\n  const[loading,setLoading]=useState(true)\r\n  console.log(\"idTicket\",id);\r\n  const validationSchema = yup.object().shape({\r\n    // name: yup\r\n    //   .string()\r\n    //   .required(\"لطفا تعداد QRCODE درخواستی را وارد نمایید.\"),\r\n    // text: yup\r\n    //   .string()\r\n    //   .required(\"لطفا درخواست خود را وارد نمایید.\"),\r\n      });\r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n    const token = localStorage.getItem(\"id_token\")\r\n    console.log(\"token\",token);\r\n    useEffect(() => {\r\n      const fetchData = async () =>{\r\n        // setLoading(true);\r\n        try {\r\n          const {data: response} = await axios.get(\"http://185.202.113.165:3000/api/ticket/get-by-id/\" + id,{\r\n            headers: {\r\n              'token': `${token}` \r\n            },\r\n          },);\r\n          console.log( \"show response\" , response.data);\r\n          setNewTicket(response.data.messages )\r\n          setNewTicketStatus(response.data)\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n          setLoading(true);\r\n\r\n        }\r\n        \r\n      }\r\n      fetchData();\r\n    }, []);\r\n  \r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () =>{\r\n        // setLoading(true);\r\n        try {\r\n          const {data: response} = await axios.post(`http://185.202.113.165:3000/api/ticket/seen-by-user/${id}`,{\"text\":\"Seen\"},{\r\n            headers: {\r\n              'token': `${token}` \r\n            },\r\n          },).then((el)=>console.log(\"elll\",el.data))\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n        \r\n      }\r\n      fetchData();\r\n    }, []);\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////////////\r\n    const download=async (text)=>{\r\n      console.log(\"texxxxtttt\",text);\r\n      const response = await axios.get(`http://185.202.113.165:3000/api/ticket/download-file/${text}`,{\r\n        responseType: 'blob',\r\n      })\r\n      // console.log(`${text}`,text)\r\n       fileDownload(response.data,`${text}`)\r\n   }\r\n   /////////////////////////////////////////////////////////////////////////////////////\r\n    const {\r\n      register,\r\n      handleSubmit,\r\n      reset,\r\n      watch,\r\n      formState: { errors },\r\n    } = useForm({\r\n      resolver: yupResolver(validationSchema),\r\n    });\r\n    const convert2base64 = file =>{\r\n      const reader = new FileReader();\r\n      reader.onloadend = () =>{\r\n          setImage(reader.result.toString())\r\n      };\r\n      reader.readAsDataURL(file)\r\n  }\r\n    const onSubmit = async(data,e) => {\r\n\r\n      e.preventDefault()\r\n      const fd = new FormData()\r\n\r\n      console.log(\"data.file[0]\",data.file[0])\r\n      if(data.file[0]){\r\n        console.log(\"true\");\r\n      fd.append('file',data.file[0])\r\n      }else{\r\n     fd.append('text',data.text)\r\n    }\r\n \r\n      if(data.file.length > 0){\r\n          convert2base64(data.file[0])\r\n      }\r\n      const response = await axios.post(`http://185.202.113.165:3000/api/ticket/user-add-message/${id}`, fd ,\r\n      {\r\n        headers: {\r\n          'token': `${token}` ,\r\n           \"Content-Type\": \"multipart/form-data\",\r\n\r\n        },\r\n        onUploadProgress:ProgressEvent => {\r\n          let percent = Math.round(ProgressEvent.loaded/ProgressEvent.total*100)+\"%\"\r\n          console.log(\"percent\",percent);\r\n          console.log(\"در حال بارگذاری\"+Math.round(ProgressEvent.loaded/ProgressEvent.total*100)+\"%\");\r\n          setProgress(percent)\r\n        }\r\n        // headers: {\r\n        //   \"Content-Type\": \"multipart/form-data\",\r\n        // },\r\n      },).then((respon) => setNewTicket(respon.data.data.messages))\r\n      // console.log(\"response adduserticket\",response.data.data.messages)\r\n      setProgress(0)\r\n      reset({\r\n        text: \"\",\r\n        file:\"\"\r\n      })\r\n      // window.location.reload()\r\n        \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const [Question, setQuestion] = useState([\r\n  //   {\r\n  //     sender:\"user\",\r\n  //     id: 1,\r\n  //     text:\r\n  //       \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n      \r\n  //     name: \"جعفر\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     sender:\"admin\",\r\n  //     id: 1,\r\n  //     text:\r\n  //       \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n  //     name: \"رضا\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     sender:\"admin\",\r\n  //     id: 1,\r\n  //     text:\r\n  //       \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n  //     name: \"جعفر\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     sender:\"user\",\r\n  //     id: 1,\r\n  //     text:\r\n  //       \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n  //     name: \"رضا\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  // ]);\r\n  // const [Answer , setAnswer] = useState([\r\n  //   {\r\n  //     id: 1,\r\n  //     titleAnswer:\r\n  //       \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n  //     name: \"جعفر\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     titleAnswer:\r\n  //       \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n  //     name: \"رضا\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     titleAnswer:\r\n  //       \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n  //     name: \"جعفر\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     titleAnswer:\r\n  //       \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n  //     name: \"رضا\",\r\n  //     Date: \"1400/01/01\",\r\n  //     Time: \"12:14\",\r\n  //   },\r\n  // ]);\r\n\r\nconst closeTicket= async ()=>{\r\n\r\n  if(window.confirm(\"با بستن این تیکت دیگر امکان ارسال پیام در این چت باکس را ندارید\")){\r\n    const response = await axios.post(`http://185.202.113.165:3000/api/ticket/close-by-user/${id}` ,{\"text\":\"close\"} ,{\r\n      headers: {\r\n        'token': `${token}` \r\n      }\r\n    });\r\n    console.log(\"response ro see kon to addticket\",response);\r\n    history.push(\"/app/Support\")\r\n  }\r\n\r\n}\r\n\r\nconst title=(e)=>{\r\n  switch (e) {\r\n\r\n    case \"cure\":\r\n    return <div>درمان</div>\r\n    case \"nurture\":\r\n     return <div>تغذیه</div>\r\n    case \"visit\":\r\n       return <div>بازدید</div>     \r\n    case \"pickHoney\":\r\n       return <div>برداشت عسل</div>      \r\n    case \"apiary\":\r\n     return <div>زنبورستان</div>          \r\n    case \"hive\":\r\n     return <div>کندو</div>    \r\n     case \"products\":\r\n       return <div>محصولات</div>  \r\n    case \"queen\":\r\n       return <div>ملکه</div>  \r\n    case \"honeyBehaviour\":\r\n       return <div>رفتار زنبورعسل</div>\r\n    case \"boardConnection\":\r\n       return <div>ارتباط با برد</div>  \r\n   case \"accesses\":\r\n         return <div>دسترسی ها</div> \r\n   case \"profile\":\r\n           return <div>حساب کاربری</div> \r\n   case \"moveHive\":\r\n           return <div>انتقال</div>             \r\n  case \"qrCode\":\r\n            return <div> تیکت QRCODE </div>   \r\n   case \"requestQRCode\":\r\n            return <div>درخواست QRCODE</div>  \r\n   case \"other\":\r\n           return <div>سایر</div>  \r\n    default:\r\n     return <div>بدون عنوان </div>\r\n  }\r\n }\r\n \r\nconst breadcrumbs = [\r\n\r\n  <Link\r\n  to=\"/app/Support\"\r\n    key=\"1\"\r\n    style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n  >\r\n        <Title key=\"1\" title=\" پشتیبانی \"/>\r\n\r\n  </Link>,\r\n\r\n  <Link\r\n      to=\"/app/Support\"\r\n      key=\"2\"\r\n      style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n  >\r\n       {/* <Title key=\"2\" title=\"پیام‌های من\"/> */}\r\n       <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\"}}>پیام‌های من</p>\r\n\r\n  </Link>,\r\n       <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\"}}>تیکت به پشتیبانی</p>\r\n\r\n];\r\n\r\n\r\nconst statusTicket= newTicketStatus.status\r\nconst statusTickets=(e)=>{\r\n  switch (statusTicket) {\r\n    case \"Open\":\r\n      return  <Grid\r\n      style={{\r\n        backgroundColor: \"#fff\",\r\n        padding: \"32px 48px\",\r\n        borderRadius: \"12px\",\r\n        // position: \"fixed\",\r\n        // bottom:0,\r\n        // left:20,\r\n        // width:\"80%\",\r\n      }}\r\n    >\r\n\r\n\r\n\r\n     <div>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n      <TextareaAutosize\r\n        maxRows={4}\r\n        aria-label=\"maximum height\"\r\n        defaultValue=\"\"\r\n        style={{\r\n          width: \"100%\",\r\n          backgroundColor: \"rgb( 244 244 244)\",\r\n          border: \"none\",\r\n          padding: \"16px\",\r\n        }}\r\n        {...register(\"text\")}\r\n        error={errors.text ? true : false}\r\n      />\r\n        <Typography\r\n            variant=\"inherit\"\r\n            className={classes.errorTitle}\r\n          >\r\n            {errors.text?.message}\r\n        </Typography>\r\n\r\n\r\n\r\n      <Grid\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          marginTop:\"8px\"\r\n\r\n        }}\r\n      >\r\n            <div>\r\n              <Button\r\n              \r\n               variant=\"contained\"\r\n              component=\"label\"\r\n              style={{fontFamily:\"Shabnam\"}}\r\n              >\r\n                بارگذاری فایل\r\n                <input\r\n                  type=\"file\"\r\n                  {...register(\"file\")}\r\n                  id=\"fileuploaded\"\r\n                  hidden\r\n                />\r\n              </Button>\r\n              {!watch(\"file\")||watch(\"file\").length===0?null:<strong style={{marginRight:\"16px\"}}>{watch(\"file\")[0].name}</strong>}\r\n                {/* <input type='file'  id=\"fileuploaded\" {...register(\"file\")} style={{cursor:\"pointer\"}}/>\r\n                <label htmlFor='fileuploaded' style={{cursor:\"pointer\"}}>انتخاب فایل</label> */}\r\n            </div>\r\n        {/* {errors.file && <div className='error'>{errors.file.message}</div>} */}\r\n        <Button type=\"submit\" className={classes.ButtonSubmitPage} onClick={handleSubmit(onSubmit)} disabled={progress!==0}>ثبت</Button>\r\n      </Grid>\r\n     {(progress!==0 && progress > \"100%\")?<LodaingQr value={progress} setProgress={setProgress}/>:null} \r\n     {!watch(\"file\")||watch(\"file\").length!==0 && progress==0?null:<div style={{marginTop:\"16px\" , color:\"red\"}}>لطفا منتظر بمانید...</div>} \r\n      <Grid lg={2}  onClick={closeTicket} style={{cursor:\"pointer\",display: \"flex\",justifyContent: \"flex-start\",alignItems: \"center\" ,marginTop:\"16px\"}}><Close color=\"secondary\"/><div>بستن تیکت</div> </Grid>\r\n\r\n      </form>\r\n    </div>\r\n </Grid>\r\n\r\n   case \"CloseByUser\":\r\n     return  <Grid\r\n     style={{\r\n       backgroundColor: \"#fff\",\r\n       padding: \"48px \",\r\n       borderRadius: \"12px\",\r\n       textAlign:\"center\"\r\n       // position: \"fixed\",\r\n       // bottom:0,\r\n       // left:20,\r\n       // width:\"80%\",\r\n     }}\r\n   >\r\n    \r\n     \r\n  <Typography>تیکت بسته شده است و امکان ارسال پیام جدید در این تیکت وجود ندارد.</Typography>\r\n</Grid>\r\n case \"CloseByAdmin\":\r\n  return  <Grid\r\n  style={{\r\n    backgroundColor: \"#fff\",\r\n    padding: \"48px \",\r\n    borderRadius: \"12px\",\r\n    textAlign:\"center\"\r\n    // position: \"fixed\",\r\n    // bottom:0,\r\n    // left:20,\r\n    // width:\"80%\",\r\n  }}\r\n>\r\n \r\n  \r\n<Typography>تیکت بسته شده است و امکان ارسال پیام جدید در این تیکت وجود ندارد.</Typography>\r\n</Grid>\r\n   default:\r\n     return <div>در انتظار</div>\r\n\r\n  }\r\n}\r\nconsole.log(\"newTicketStatus\",newTicketStatus);\r\nlet btnClass = classNames({\r\n             \r\n  [classes.openTicket]: newTicketStatus.status===\"Open\",\r\n  [classes.closeTicket]: newTicketStatus.status===\"CloseByAdmin\",\r\n  [classes.closeTicketAdmin]: newTicketStatus.status===\"CloseByUser\",\r\n  [classes.waitTicket]: newTicketStatus.status===\"Wait\",\r\n\r\n    });\r\n  const changeText=(e)=>{\r\n      switch (e) {\r\n        case \"Open\":\r\n           return <div>باز</div>\r\n        case \"CloseByAdmin\":\r\n           return <div>بسته</div>\r\n          case \"CloseByUser\":\r\n           return <div>بسته</div>\r\n        default:\r\n           return <div>در انتظار</div>\r\n      }\r\n    }\r\n   \r\n\r\n  return (\r\n    <>\r\n        <div style={{margin:\"32px 32px 0px\"}}>\r\n\r\n     <Breadcrumbs\r\n        separator={<NavigateBefore fontSize=\"large\" style={{color:\"rgb(227, 156, 0)\"}} />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n      </div>\r\n\r\n    {loading?\r\n          <div className={classes.Loading}> <Loading color=\"orange\" /></div>:   \r\n           <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        height: \"100%\",\r\n        position:\"relative\",\r\n\r\n      }}\r\n    >\r\n     {/* top Page */}\r\n       <Grid\r\n        container\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          padding: \"16px 60px\",\r\n          justifyContent: \"space-between\",\r\n          borderRadius: \"12px\",\r\n\r\n          marginTop: \"24px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            backgroundColor: \"#fff\",\r\n            alignItems: \"center\",\r\n            padding: \"16px 32px\",\r\n            justifyContent: \"space-between\",\r\n            borderRadius: \"12px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <div style={{ fontSize: \"16px\", fontWeight: \"bold\" }}>{title(newTicketStatus.category)}</div>\r\n          <div className={btnClass}>{changeText(newTicketStatus.status)}</div>\r\n        </Grid>\r\n\r\n   \r\n        {/* message */}\r\n        {newTicket?.map((element) => {\r\n          switch (element.sender) {\r\n          \r\n            case 'user':\r\n              return (             \r\n              <Grid\r\n                className={classes.QuestionCountainer}\r\n                item\r\n                xs={12}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  className={classes.titleQuestion}\r\n              \r\n                >\r\n{      element.type==\"text\" ? <div>{element.text}</div>: \r\n<a onClick={()=>download(element.text)} target=\"_blank\"  href={`http://185.202.113.165:3000/api/ticket/download-file/${element.text}`} className={classes.fileLink} >\r\n  <div> <Description/></div>\r\n  <div> {element.text}</div>\r\n  </a>\r\n}                 </Grid>\r\n                <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                ({newTicketStatus.createBy?newTicketStatus.createBy.firstname +\" \"+ newTicketStatus.createBy.lastname:null}) | {moment.from(element.sentAt).locale('fa').format('YYYY/M/D HH:mm')} \r\n                  \r\n                </Grid>\r\n              </Grid>)\r\n            case 'admin':\r\n              return (              \r\n              <Grid\r\n                xs={12}\r\n                item\r\n                className={classes.AnswerCountainer}\r\n\r\n             >              \r\n              <Grid\r\n                 item\r\n                 xs={12}\r\n                 md={6}\r\n                 className={classes.titleAnswer}\r\n\r\n               >\r\n{      element.type==\"text\"  ? <div>{element.text}</div>: \r\n<a onClick={()=>download(element.text)} target=\"_blank\"  href={`http://185.202.113.165:3000/api/ticket/download-file/${element.text}`} className={classes.fileLink}>\r\n<div> <Description/></div>\r\n  <div> {element.text}</div>\r\n  </a>\r\n}               </Grid>\r\n               {/* {image ? <img src={image} width=\"450\"/>:null} */}\r\n               <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n               پشتیبان | {moment.from(element.sentAt).locale('fa').format('YYYY/M/D HH:mm')}\r\n               </Grid>\r\n             </Grid>\r\n             )\r\n          }\r\n        })}\r\n\r\n\r\n        {/* {Question.map((element) => {\r\n          return (\r\n            <>\r\n              <Grid\r\n                className={classes.QuestionCountainer}\r\n                item\r\n                xs={12}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  className={classes.titleQuestion}\r\n                >\r\n                  {element.titleQuestion}\r\n                </Grid>\r\n                <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                  {element.name}| {element.Date} {element.Time}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid\r\n                 xs={12}\r\n\r\n                item\r\n                className={classes.AnswerCountainer}\r\n\r\n              >\r\n                  \r\n                        \r\n               <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  className={classes.titleAnswer}\r\n\r\n                >\r\n                  {element.titleAnswer}\r\n                </Grid>\r\n                <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                  {element.name}| {element.Date} {element.Time}\r\n                </Grid>\r\n                \r\n\r\n              </Grid>\r\n            </>\r\n          );\r\n        })} */}\r\n\r\n\r\n        \r\n       </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      {/* bottom Page */}\r\n    {statusTickets()}\r\n\r\n            </div> \r\n    }\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SupportPage;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\AboutUsMain\\AboutUsMain.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Login\\Login.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\FrequentlyQuestions\\FrequentlyQuestions.js",["834","835","836","837","838","839","840","841","842","843","844","845"],"\r\n\r\n// import {\r\n//   Accordion,\r\n//   AccordionDetails,\r\n//   AccordionSummary,\r\n//   FormControl,\r\n//   Grid,\r\n//   MenuItem,\r\n//   Select,\r\n//   Typography,\r\n// } from \"@material-ui/core\";\r\n// import { CallMissedSharp, ExpandMore } from \"@material-ui/icons\";\r\n// import { styled } from \"@material-ui/styles\";\r\n// import * as React from \"react\";\r\n// import useStyles from \"./Styles\";\r\n\r\n// export default function SimpleAccordion() {\r\n//   const classes = useStyles();\r\n//   const [borderColor, setborderColort] = React.useState(true);\r\n\r\n//   const [value, setValue] = React.useState(\"همه\"); // selected option\r\n//   const options = [\r\n//     { label: \"همه\", value: \"همه\" },\r\n//     { label: \"تغذیه زنبور\", value: \"تغذیه زنبور\" },\r\n//     { label: \"برداشت عسل\", value: \"برداشت عسل\" },\r\n//     { label: \"بیماری زنبور\", value: \"بیماری زنبور\" },\r\n//   ];\r\n\r\n//   const data = [\r\n//     {\r\n//       id: \"1\",\r\n//       Title: \"متن سوال 1\",\r\n//       paragraph:\r\n//       \"Hello\"+ \"\\n\" +\"world\",\r\n//     },\r\n//     {\r\n//       id: \"2\",\r\n//       Title: \"متن سوال 2\",\r\n//       paragraph:\r\n//         \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n//     },\r\n//     {\r\n//       id: \"3\",\r\n//       Title: \"متن سوال 3\",\r\n//       paragraph:\r\n//         \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n//     },\r\n//     {\r\n//       id: \"4\",\r\n//       Title: \"متن سوال 4\",\r\n//       paragraph:\r\n//         \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n//     },\r\n//     {\r\n//       id: \"5\",\r\n//       Title: \"متن سوال 5\",\r\n//       paragraph:\r\n//         \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n//     },\r\n//     {\r\n//       id: \"6\",\r\n//       Title: \"متن سوال 6\",\r\n//       paragraph:\r\n//         \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n//     },\r\n//     {\r\n//       id: \"7\",\r\n//       Title: \"متن سوال 7\",\r\n//       paragraph:\r\n//         \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n//     },\r\n//     {\r\n//       id: \"8\",\r\n//       Title: \"متن سوال 8\",\r\n//       paragraph:\r\n//         \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n//     },\r\n//     {\r\n//       id: \"9\",\r\n//       Title: \"متن سوال 9\",\r\n//       paragraph:\r\n//         \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n//     },\r\n//   ];\r\n  \r\n//   const changeColor = (index) => {\r\n//     console.log(index);\r\n//   };\r\n//   const handleChange = (event) => {\r\n//     setValue(event.target.value);\r\n//   };\r\n//   return (\r\n//     <Grid container className={classes.container}>\r\n//       <Grid\r\n//         item\r\n//         xs={12}\r\n//         style={{\r\n//           display: \"flex\",\r\n//           alignItems: \"center\",\r\n//           justifyContent: \"flex-start\",\r\n//         }}\r\n//       >\r\n//         <Typography style={{ marginLeft: \"16px\", whiteSpace: \"nowrap\" }}>\r\n//           دسته بندی سوالات\r\n//         </Typography>\r\n//         <FormControl\r\n//           fullWidth\r\n//           variant=\"outlined\"\r\n//           className={classes.inputSelect}\r\n//         >\r\n//           <Select\r\n        \r\n//             labelId=\"demo-simple-select-label\"\r\n//             id=\"demo-simple-select\"\r\n//             value={value}\r\n//             onChange={handleChange}\r\n\r\n//             // inputProps={{ \"aria-label\": \"Without label\" }}\r\n//           >\r\n//             {options?.map((option) => {\r\n//               return (\r\n//                 <MenuItem key={option.value} value={option.value}>\r\n//                   {option.label ?? option.value}\r\n//                 </MenuItem>\r\n//               );\r\n//             })}\r\n//           </Select>\r\n//         </FormControl>\r\n//       </Grid>\r\n\r\n//       {/* item */}\r\n//       <Grid style={{ width: \"100%\" }}>\r\n//         {data.map((el, index) => {\r\n//           return (\r\n//             <Accordion\r\n//               onClick={() => changeColor(el.id)}\r\n//               className={classes.Accordion}\r\n//               style={{ borderRadius: \"9px\", marginTop: \"16px\" }}\r\n//             >\r\n//               <AccordionSummary\r\n//                 className={classes.arrowStyle}\r\n//                 expandIcon={<ExpandMore />}\r\n//                 aria-controls=\"panel1a-content\"\r\n//                 id=\"panel1a-header\"\r\n//               >\r\n//                 <Typography>{el.Title}</Typography>\r\n//               </AccordionSummary>\r\n//               <AccordionDetails>\r\n//                 <Typography>{el.paragraph}</Typography>\r\n//               </AccordionDetails>\r\n//             </Accordion>\r\n//           );\r\n//         })}\r\n//       </Grid>\r\n//     </Grid>\r\n//   );\r\n// }\r\n\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Breadcrumbs,\r\n  FormControl,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ArrowLeft, CallMissedSharp, ExpandMore, NavigateBefore } from \"@material-ui/icons\";\r\nimport { styled } from \"@material-ui/styles\";\r\nimport * as React from \"react\";\r\nimport useStyles from \"./Styles\";\r\nimport {\r\n  Link,\r\n  useParams,useHistory\r\n} from \"react-router-dom\";\r\nimport Title from \"../../../../components/Typography/Title/Title\";\r\n\r\nexport default function SimpleAccordion() {\r\n  const classes = useStyles();\r\n  const [borderColor, setborderColort] = React.useState(true);\r\n\r\n  const [value, setValue] = React.useState(\"همه\"); // selected option\r\n  const options = [\r\n    { label: \"همه\", value: \"همه\" },\r\n    { label: \"تغذیه زنبور\", value: \"تغذیه زنبور\" },\r\n    { label: \"برداشت عسل\", value: \"برداشت عسل\" },\r\n    { label: \"بیماری زنبور\", value: \"بیماری زنبور\" },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      id: \"1\",\r\n      Title: \"متن سوال 1\",\r\n      paragraph:\r\n      \"Hello\"+ \"\\n\" +\"world\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      Title: \"متن سوال 2\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      Title: \"متن سوال 3\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      Title: \"متن سوال 4\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"5\",\r\n      Title: \"متن سوال 5\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"6\",\r\n      Title: \"متن سوال 6\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"7\",\r\n      Title: \"متن سوال 7\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"8\",\r\n      Title: \"متن سوال 8\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"9\",\r\n      Title: \"متن سوال 9\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n  ];\r\n  \r\n  const changeColor = (index) => {\r\n    console.log(index);\r\n  };\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const breadcrumbs = [\r\n\r\n    <Link\r\n    to=\"/app/Support\"\r\n      key=\"1\"\r\n      style={{textDecoration:\"none\",cursor:\"pointer\",fontWeight:\"bold\"}}\r\n      \r\n    >\r\n          <Title key=\"1\" title=\" پشتیبانی \"/>\r\n          {/* <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\"}}>پشتیبانی</p> */}\r\n\r\n  \r\n    </Link>,\r\n        <div\r\n         to=\"/app/Support\"\r\n        key=\"2\"\r\n        style={{textDecoration:\"none\",cursor:\"pointer\",fontWeight:\"bold\"}}\r\n      >\r\n         {/* <Title key=\"2\" title=\"پیام‌های من\"/> */}\r\n         <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\"}}>سوالات متداول</p>\r\n      </div>,\r\n      \r\n  \r\n  \r\n  \r\n  ];\r\n  return (\r\n    <div className={classes.container}>\r\n      <Breadcrumbs\r\n         separator=\"\"\r\n        separator={<NavigateBefore fontSize=\"large\" style={{color:\"rgb(227, 156, 0)\"}} />}\r\n        // separator={<ArrowBackIosRounded fontSize=\"large\" />}\r\n\r\n        aria-label=\"breadcrumb\"\r\n        \r\n      >\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n    <Grid container className={classes.container2}>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n      >\r\n        <Typography style={{ marginLeft: \"16px\", whiteSpace: \"nowrap\" }}>\r\n          دسته بندی سوالات\r\n        </Typography>\r\n        <FormControl\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          className={classes.inputSelect}\r\n        >\r\n          <Select\r\n           style={{height:\"40px\"}}\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={value}\r\n            onChange={handleChange}\r\n\r\n            // inputProps={{ \"aria-label\": \"Without label\" }}\r\n          >\r\n            {options?.map((option) => {\r\n              return (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label ?? option.value}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n\r\n      {/* items */}\r\n      <Typography variant=\"h3\" color=\"secondary\" style={{fontWeight:\"600\",marginTop:\"60px\"}}>کندووان پلاس</Typography>\r\n      <Grid style={{ width: \"100%\" }}>\r\n            <Accordion\r\n              // onClick={() => changeColor(el.id)}\r\n              className={classes.Accordion}\r\n              style={{ borderRadius: \"9px\", marginTop: \"16px\"}}\r\n            >\r\n              <AccordionSummary\r\n                className={classes.arrowStyle}\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography variant=\"h6\" style={{fontWeight:\"600\"}}>برد هوشمند محصول کندوان پلاس چه ویژگی دارد؟</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                 - برد هوشمند کندووان پلاس دارای سنسور اندازه‌گیری وزن، دما و رطوبت است و همچنین برای ضبط صدای داخل کندو دارای میکروفون می‌باشد.  <br/>\r\n               - برد هوشمند کندووان پلاس قابلیت اتصال به وای‌فای و بلوتوث را دارد.<br/>\r\n                - برد هوشمند کندووان پلاس اطلاعات باز و بسته‌شدن درب کندو را اطلاع می‌دهد.<br/><br/>\r\n                کاربرد اصلی این برد این است که در صورت عدم دسترسی به کندو می‌توانید با تلفن همراهتان از طریق اپلیکیشن از اتفاقات داخل کندو آگاه شوید.</Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n      </Grid>\r\n\r\n\r\n      <Grid style={{ width: \"100%\" }}>\r\n            <Accordion\r\n              // onClick={() => changeColor(el.id)}\r\n              className={classes.Accordion}\r\n              style={{ borderRadius: \"9px\", marginTop: \"16px\" }}\r\n            >\r\n              <AccordionSummary\r\n                className={classes.arrowStyle}\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography variant=\"h6\" style={{fontWeight:\"600\"}}>کندووان پلاس در چه شهرهایی خدمات‌رسانی می‌کند؟</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                کندووان پلاس در چند شهر بزرگ مثل: تهران، کرج، رشت، تبریز خدمات ارائه می‌دهد که درحال‌توسعه است و سعی در افزایش شهرها در سال آینده دارد. نصب کندو و آموزش اولیه در شهر تهران رایگان است ولی در دیگر شهرها مشمول هزینه می‌شود.\r\n               </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n      </Grid>\r\n\r\n      <Grid style={{ width: \"100%\" }}>\r\n            <Accordion\r\n              // onClick={() => changeColor(el.id)}\r\n              className={classes.Accordion}\r\n              style={{ borderRadius: \"9px\", marginTop: \"16px\" }}\r\n            >\r\n              <AccordionSummary\r\n                className={classes.arrowStyle}\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography variant=\"h6\" style={{fontWeight:\"600\"}}> تیم پشتیبانی کندووان پلاس چه خدماتی ارائه می‌دهد؟</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                تیم پشتیبانی کندووان پلاس یک همراه خوب زنبورداری و در دسترس شماست. تیم کندووان پلاس پاسخگوی هرگونه سؤال، در خواست خدمات حضوری و غیرحضوری (نصب کندو، برداشت عسل و…)، آموزش اولیه و مشاوره در حوزه زنبورداری است. پس از دریافت محصول با اپلیکیشنی که در اختیارتان قرار می‌گیرد آموزش‌های تکمیلی را دریافت خواهید کرد.\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n      </Grid>\r\n\r\n      <Grid style={{ width: \"100%\" }}>\r\n            <Accordion\r\n              // onClick={() => changeColor(el.id)}\r\n              className={classes.Accordion}\r\n              style={{ borderRadius: \"9px\", marginTop: \"16px\" }}\r\n            >\r\n              <AccordionSummary\r\n                className={classes.arrowStyle}\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography variant=\"h6\" style={{fontWeight:\"600\"}}>بازدید از کندو چگونه برنامه‌ریزی می‌شود</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                با کندوهای هوشمند کندووان پلاس نیاز به بازدیدهای مکرر نیست. در صورت لزوم به تلفن همراه کاربر از طریق اپلیکیشن بازدیدها یادآوری می‌شود.\r\n               </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n      </Grid>\r\n\r\n      <Grid style={{ width: \"100%\" }}>\r\n            <Accordion\r\n              // onClick={() => changeColor(el.id)}\r\n              className={classes.Accordion}\r\n              style={{ borderRadius: \"9px\", marginTop: \"16px\" }}\r\n            >\r\n              <AccordionSummary\r\n                className={classes.arrowStyle}\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography variant=\"h6\" style={{fontWeight:\"600\"}}>چه زمانی کندوهارا نصب می‌کنید؟</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                نصب و تحویل دهی کندوها متناسب با فصل زنبورداری از اوایل اردیبهشت شروع می‌شود تا اواخر تابستان می‌تواند ادامه داشته باشد.\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n      </Grid>\r\n \r\n      <Typography variant=\"h3\" color=\"secondary\" style={{fontWeight:\"600\",marginTop:\"32px\"}}>زنبورداری شهری</Typography>\r\n      <Grid style={{ width: \"100%\" }}>\r\n            <Accordion\r\n              // onClick={() => changeColor(el.id)}\r\n              className={classes.Accordion}\r\n              style={{ borderRadius: \"9px\", marginTop: \"16px\" }}\r\n            >\r\n              <AccordionSummary\r\n                className={classes.arrowStyle}\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography variant=\"h6\" style={{fontWeight:\"600\"}}>زنبورداری شهری چیست؟</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                به طور خلاصه، زنبورداری شهری شامل نصب کندوهای زنبور عسل در سطح شهر است.  باتوجه به این که گرده افشان ها  مسئول گرده افشانی یک سوم هر چیزی که در بشقاب هایمان می گذاریم، هستند،زنبورداری شهری از این موجودات گرده افشان نیز حمایت می کند.                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n      </Grid>\r\n\r\n      <Grid style={{ width: \"100%\" }}>\r\n            <Accordion\r\n              // onClick={() => changeColor(el.id)}\r\n              className={classes.Accordion}\r\n              style={{ borderRadius: \"9px\", marginTop: \"16px\" }}\r\n            >\r\n              <AccordionSummary\r\n                className={classes.arrowStyle}\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography variant=\"h6\" style={{fontWeight:\"600\"}}>زنبورداری شهری چیست؟</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                به طور خلاصه، زنبورداری شهری شامل نصب کندوهای زنبور عسل در سطح شهر است.  باتوجه به این که گرده افشان ها  مسئول گرده افشانی یک سوم هر چیزی که در بشقاب هایمان می گذاریم، هستند،زنبورداری شهری از این موجودات گرده افشان نیز حمایت می کند.                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n      </Grid>\r\n\r\n\r\n      \r\n\r\n    </Grid>\r\n    </div>\r\n  );\r\n}","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Layout\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportMessage\\SupportMessage.js",["846","847","848","849","850","851","852","853"],"import { Breadcrumbs, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { NavigateBefore } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport moment from \"jalali-moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useStyles from \"./Style\";\r\nimport {\r\n  Link,\r\n  useParams,useHistory\r\n} from \"react-router-dom\";\r\nimport Title from \"../../../../components/Typography/Title/Title\";\r\n// function SupportMessage() {\r\n\r\n//   return (\r\n//     <div>SupportMessage</div>\r\n//   )\r\n// }\r\n\r\n// export default SupportMessage\r\n\r\nfunction SupportMessage() {\r\n  const [newTicket , setNewTicket] = useState([])\r\n  const[loading,setLoading]=useState(true)\r\n  const classes = useStyles();\r\n  const [show,setShow]=useState(false)\r\n  const [data, setData] = useState([\r\n    {\r\n      id: 1,\r\n      titleQuestion:\r\n        \"باسلام زنبوردار عزیز از طریق لینک زیر اپلیکیشن کندووان پلاس را بروز رسانی کنید.\",\r\n      name: \"جعفر\",\r\n      Date: \"1401/03/20\",\r\n      Time: \"12:14\",\r\n    },\r\n    {\r\n      id: 1,\r\n      titleQuestion: \"ممنون از شما حتما رسیدگی خواهد شد.\",\r\n      name: \"رضا\",\r\n      Date: \"1401/03/20\",\r\n      Time: \"12:14\",\r\n    },\r\n  ]);\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////\r\n  \r\n  const token = localStorage.getItem(\"id_token\")\r\n  console.log(\"token\",token);\r\n  useEffect(() => {\r\n    const fetchData = async () =>{\r\n      // setLoading(true);\r\n      try {\r\n        const {data: response} = await axios.get(\"http://185.202.113.165:3000/api/message/get-by-user-for-user\",{\r\n          headers: {\r\n            'token': `${token}` \r\n          },\r\n        },)\r\n        console.log( \"show response support\" , response.data);\r\n        setNewTicket(response.data )\r\n        setLoading(false)\r\n        if(response.data ){\r\n          setShow(true)\r\n        }else{\r\n          setShow(false)\r\n        }\r\n    \r\n      } catch (error) {\r\n        console.error(error.message);\r\n        setLoading(true)\r\n\r\n      }\r\n      // setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////\r\n  const breadcrumbs = [\r\n\r\n    <Link\r\n    to=\"/app/Support\"\r\n      key=\"1\"\r\n      style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n    >\r\n          <Title key=\"1\" title=\" پشتیبانی \"/>\r\n  \r\n    </Link>,\r\n        <Link\r\n         to=\"/app/Support\"\r\n        key=\"2\"\r\n        style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n      >\r\n         {/* <Title key=\"2\" title=\"پیام‌های من\"/> */}\r\n         <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\"}}>پیام‌های پشتیبان</p>\r\n  \r\n      </Link>,\r\n      \r\n  \r\n  \r\n  \r\n  ];\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n    <div style={{}}>\r\n      <Breadcrumbs\r\n        separator={<NavigateBefore fontSize=\"large\" style={{color:\"rgb(227, 156, 0)\"}} />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n      </div>\r\n    <Grid\r\n      container\r\n      className={classes.container2}\r\n\r\n    >\r\n      {/* message */}\r\n      {data.map((element) => {\r\n        return (\r\n          <>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              className={classes.SupportMessage}\r\n\r\n            >\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                style={{\r\n                  fontSize: \"16px\",\r\n                  fontWeight: \"bold\",\r\n                  width: \"100%\",\r\n                  borderRadius: \"12px\",\r\n                  backgroundColor: \"rgb( 244 244 244)\",\r\n                  padding: \"16px 32px\",\r\n                  boxShadow: \"0px 3px  6px  0px rgba(0,0,0,0.16)\",\r\n                }}\r\n              >\r\n                {element.titleQuestion}\r\n              </Grid>\r\n              <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                {element.name}| {element.Date} {element.Time}\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        );\r\n      })}\r\n\r\n      <Grid\r\n        style={{\r\n          marginTop: \"100px\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Divider\r\n          style={{ backgroundColor: \"rgb( 173 173 173)\", width: \"40%\" }}\r\n        />\r\n        <Typography style={{ color: \"rgb( 173 173 173)\" }}>\r\n          پیام جدید\r\n        </Typography>\r\n        <Divider\r\n          style={{ backgroundColor: \"rgb( 173 173 173)\", width: \"40%\" }}\r\n        />\r\n      </Grid>\r\n\r\n      {data.map((element) => {\r\n    //  if(moment().locale('fa').format(\"YYYY/MM/DD\") == \"1401/03/20\" )  {\r\n    //   console.log(\"true\");\r\n    //  } else{\r\n    //    console.log(\"false\");\r\n    //  }\r\n    console.log(\"data.Date\",element.Date);\r\n        \r\n        return (\r\n          <>\r\n          {moment().locale('fa').format(\"YYYY/MM/DD\") == element.Date?\r\n               <Grid\r\n               item\r\n               xs={12}\r\n               className={classes.SupportNewMessage}\r\n   \r\n             >\r\n               <Grid\r\n                 item\r\n                 xs={12}\r\n                 style={{\r\n                   fontSize: \"16px\",\r\n                   fontWeight: \"bold\",\r\n                   width: \"100%\",\r\n                   borderRadius: \"12px\",\r\n                   backgroundColor: \"rgb( 255 242 212)\",\r\n                   padding: \"16px 32px\",\r\n                   boxShadow: \"0px 3px  6px  0px rgba(0,0,0,0.16)\",\r\n                 }}\r\n               >\r\n                 {element.titleQuestion}\r\n               </Grid>\r\n               <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                 {element.name}| {element.Date} {element.Time}\r\n               </Grid>\r\n             </Grid>:null\r\n        \r\n        \r\n        }\r\n\r\n          </>\r\n        );\r\n      })}\r\n    </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportMessage;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Audio.js",["854","855","856","857","858","859"],"import { Avatar, Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport ApexLineChart from \"../../charts/components/ApexLineChart\";\r\nimport PieCharts from \"../../charts/PieCharts\";\r\nimport useStyles from \"./Style\";\r\nfunction Audio() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      item\r\n      className={classes.Audio_container}\r\n      xs={12}\r\n      style={{\r\n        fontWeight: 600,\r\n\r\n        margin: \"16px 0\",\r\n      }}\r\n    >\r\n\r\n   \r\n        {/* toplevel */}\r\n       <Grid item xs={12} > <ApexLineChart/> </Grid>\r\n        {/* midlevel */}\r\n      <Grid\r\n        className={classes.midPartAudio}\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            marginTop: \"32px\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n      >\r\n          <Grid\r\n            item\r\n            xs={6}\r\n          \r\n            alignItems=\"center\"\r\n            justifyContent=\"space-around\"\r\n            style={{ display: \"flex\" }}\r\n          >\r\n            <Grid\r\n            \r\n              item\r\n              style={{ display: \"flex\" }}\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                احتمال بچه‌دهی\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <PieCharts />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-around\"\r\n            style={{ display: \"flex\" }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                احتمال وجود ملکه\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n            <PieCharts />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* bottom */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            margin: \"32px 0px\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.Soundscards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n              style={{ width: \"30px\" }}\r\n            >\r\n              <img src=\"/assets/microphone-svgrepo-com (2).svg\" width=\"100%\" />\r\n            </Grid>\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                صدای کندو\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.Soundscards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n              style={{ width: \"50px\" }}\r\n            >\r\n              <img src=\"/assets/note-svgrepo-com (3).svg\" width=\"100%\" />\r\n            </Grid>\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                یادداشت متنی\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.Soundscards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n              style={{ width: \"60px\" }}\r\n            >\r\n              <img src=\"/assets/camera-svgrepo-com (1).svg\" width=\"100%\" />\r\n            </Grid>\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                عکس کندو\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sm={2}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.Soundscards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n              style={{ width: \"50px\" }}\r\n            >\r\n              <img src=\"/assets/Group 11027.svg\" width=\"100%\" />\r\n            </Grid>\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                یادداشت صوتی\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n    </Grid>\r\n  );\r\n}\r\nexport default Audio;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\Setting\\Edituser.js",["860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876"],"import { Avatar, Box, Divider, FormControlLabel, FormGroup, Grid, Modal, Switch, TextField, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport {\r\n    BrowserRouter as Router,\r\n\r\n    Link,NavLink,useRouteMatch\r\n\r\n  } from \"react-router-dom\" \r\nimport useStyles from \"./styles\";\r\nimport Adduser from '../User/Adduser';\r\nimport EditPhoneNumber from './EditPhoneNumber';\r\nimport AddSubmitCode from './AddSubmitCode';\r\nimport AddJob from '../JobUser/AddJob';\r\nimport Title from '../../Typography/Title/Title';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport IOSSwitch from './IOSSwitch';\r\nimport axios from 'axios';\r\n\r\nfunction Edituser() {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const classes = useStyles();\r\n     const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n      const handleClose = () => {\r\n        setOpen(false);\r\n\r\n      };\r\n      const style = {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        width: 400,\r\n        bgcolor: \"background.paper\",\r\n        borderRadius:\"16px\",\r\n        boxShadow: 24,\r\n        pt: 2,\r\n        px: 0,\r\n        pb: 2,\r\n      };\r\n    const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/\r\n\r\n    const validationSchema = yup.object().shape({\r\n  \r\n      phoneNumber:yup.string().matches(phoneRegExp, 'شماره موبایل را بدون صفر و با حروف انگلیسی وارد کنید'),\r\n      Username:yup.string().required( 'لطفا نام کاربری خود را وارد کنید'),\r\n      name:yup.string().required('لطفا نام خود را وارد کنید'),\r\n      family:yup.string().required('لطفا نام خانوادگی خود را وارد کنید'),\r\n      email: yup.string().email('لطفا ایمیل معتبر وارد کنید')\r\n  \r\n    });\r\n\r\n    const [data, setData] = useState([\r\n      {\r\n        id: 1,\r\n        titleQuestion:\r\n          \"باسلام زنبوردار عزیز از طریق لینک زیر اپلیکیشن کندووان پلاس را بروز رسانی کنید.\",\r\n        name: \"جعفر\",\r\n        Date: \"1400/01/01\",\r\n        Time: \"12:14\",\r\n      },\r\n      {\r\n        id: 1,\r\n        titleQuestion: \"ممنون از شما حتما رسیدگی خواهد شد.\",\r\n        name: \"رضا\",\r\n        Date: \"1400/01/01\",\r\n        Time: \"12:14\",\r\n      },\r\n    ]);\r\n\r\n    const token = localStorage.getItem(\"id_token\")\r\n\r\n    try{\r\n      const response = axios.get(\"http://185.202.113.165:3000/api/auth/me\",{\r\n        'token': `${token}` ,\r\n         \r\n      })\r\n      console.log(\"response profile\",response.data);\r\n      console.log(JSON.stringify(response))       \r\n  \r\n  }catch (err) {\r\n  \r\n  \r\n  \r\n  }\r\n    const {\r\n        register,\r\n        control,\r\n        handleSubmit,\r\n        formState: { errors }\r\n      } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        defaultValues: data\r\n      });\r\n      const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n        alert(JSON.stringify(data, null, 2));\r\n        // history.push(\"/login/step2\")\r\n      };\r\n      \r\n      let { path, url } = useRouteMatch();\r\n\r\n\r\n\r\n\r\n      const [state, setState] = React.useState({\r\n        checkedA: false,\r\n        checkedB: true,\r\n      });\r\n    \r\n      const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Grid\r\n    container\r\n    style={{\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"16px 32px\",\r\n      justifyContent: \"space-between\",\r\n      borderRadius: \"12px\",\r\n      marginTop: \"24px\",\r\n    }}\r\n  >\r\n    \r\n    <Title title=\"تنظیمات\" variant=\"h3\"/>\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      style={{\r\n        display: \"flex\",\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        padding: \"16px 32px\",\r\n        justifyContent: \"space-between\",\r\n        borderRadius: \"12px\",\r\n        width: \"100%\",\r\n        marginTop:\"32px\"\r\n      }}\r\n    >\r\n      <div style={{ fontSize: \"16px\", fontWeight: \"bold\" ,display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n          <Avatar src='./assets/HeaderProfile.svg' style={{width:\"60px\",height:\"60px\",marginLeft:\"8px\"}}/>\r\n          <div>\r\n              <p>شاهین رضوی</p>\r\n              <p style={{color:\"rgb( 102 ,103 ,104)\"}}>۰۹۱۲۳۴۵۶۷۸۹</p>\r\n          </div>\r\n      </div>\r\n      <div style={{backgroundColor:\"rgba(227 ,23 ,10, 0.11)\",padding:\"8px 16px\",borderRadius:\"8px\",\r\n           color:\"rgb( 227, 23 ,10)\",fontWeight:600}}>خروج از حساب کاربری</div>\r\n    </Grid>\r\n\r\n    <Grid xs={12} style={{padding:\" 32px \", borderRadius:\"12px\",     backgroundColor:\"#fff\",marginTop:\"32px\"}}>\r\n\t          \t{/* <img alt=\"\" className=\"avatar\" src=\"/assets/Untitled-1.svg\"/> */}\r\n              <p style={{fontWeight:600}}>ویرایش اطلاعات کاربری</p>\r\n \r\n<Grid xs={12} justifyContent='space-between' style={{display:\"flex\"}}>  \r\n    <TextField\r\n      \r\n      // style={{direction:\"ltr\"}}\r\n      className={classes.TextField}\r\n      label=\"شماره موبایل\"\r\n    //   onChange={e => setLoginValue(e.target.value)}\r\n    onClick={handleOpen}\r\n      id=\"phoneNumber\"\r\n      name=\"phoneNumber\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      margin=\"normal\"\r\n      size=\"small\"\r\n      {...register('phoneNumber')}\r\n      error={errors.phoneNumber ? true : false}\r\n    />\r\n   {/* <Typography variant=\"inherit\" color=\"textSecondary\" style={{color:\"red\"}}>\r\n      {errors.phoneNumber?.message}\r\n    </Typography><br/> */}\r\n\r\n\r\n    <TextField\r\n      \r\n              // style={{direction:\"ltr\"}}\r\n                className={classes.TextField}\r\n              label=\"نام کاربری\"\r\n                id=\"Username\"\r\n                name=\"Username\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                size=\"small\"\r\n                {...register('Username')}\r\n                error={errors.phoneNumber ? true : false}\r\n              />\r\n              {/* <Typography variant=\"inherit\" color=\"textSecondary\" style={{color:\"red\"}}>\r\n                {errors.Username?.message}\r\n              </Typography> */}\r\n</Grid>\r\n\r\n<Grid xs={12} justifyContent='space-between' style={{display:\"flex\"}}>\r\n              <TextField\r\n      \r\n      // style={{direction:\"ltr\"}}\r\n        className={classes.TextField}\r\n      label=\"نام\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        size=\"small\"\r\n        {...register('name')}\r\n        error={errors.phoneNumber ? true : false}\r\n      />\r\n      {/* <Typography variant=\"inherit\" color=\"textSecondary\" style={{color:\"red\"}}>\r\n        {errors.name?.message}\r\n      </Typography> */}\r\n\r\n\r\n\r\n      <TextField\r\n      \r\n      // style={{direction:\"ltr\"}}\r\n        className={classes.TextField}\r\n      label=\"نام خانوادگی\"\r\n        id=\"family\"\r\n        name=\"family\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        size=\"small\"\r\n        {...register('family')}\r\n        error={errors.phoneNumber ? true : false}\r\n      />\r\n      {/* <Typography variant=\"inherit\" color=\"textSecondary\" style={{color:\"red\"}}>\r\n        {errors.family?.message}\r\n      </Typography> */}\r\n     \r\n\r\n</Grid> \r\n\r\n     <Grid>\r\n     <TextField\r\n      \r\n      // style={{direction:\"ltr\"}}\r\n        className={classes.TextField}\r\n      label=\"ایمیل\"\r\n        id=\"email\"\r\n        name=\"email\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        size=\"small\"\r\n        {...register('email')}\r\n        error={errors.phoneNumber ? true : false}\r\n      />\r\n      {/* <Typography variant=\"inherit\" color=\"textSecondary\" style={{color:\"red\"}}>\r\n        {errors.email?.message}\r\n      </Typography> */}\r\n    </Grid>\r\n    </Grid>\r\n\r\n<Grid   xs={12} style={{display:\"flex\",gap:\"36px\"}}>\r\n    <Grid\r\n      item\r\n      xs={6}\r\n      style={{\r\n        display: \"flex\",\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        padding: \"12px 24px\",\r\n        justifyContent: \"space-between\",\r\n        borderRadius: \"12px\",\r\n        width: \"100%\",\r\n        marginTop:\"24px\"\r\n      }}\r\n    >\r\n      <div style={{ fontSize: \"16px\", fontWeight: \"bold\" ,display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n              اعلان‌ها        \r\n      </div>\r\n      \r\n      <FormControlLabel\r\n        control={<IOSSwitch  checked={state.checkedB} onChange={handleChange} name=\"checkedB\" />}\r\n      />\r\n    </Grid>\r\n\r\n    <Grid\r\n      item\r\n      xs={6}\r\n      style={{\r\n        display: \"flex\",\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        padding: \"12px 24px\",\r\n        justifyContent: \"space-between\",\r\n        borderRadius: \"12px\",\r\n        width: \"100%\",\r\n        marginTop:\"24px\"\r\n      }}\r\n    >\r\n      <div style={{ fontSize: \"16px\", fontWeight: \"bold\" ,display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n         بازدید دستی\r\n      </div>\r\n      <FormControlLabel\r\n        control={<IOSSwitch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n      />\r\n    </Grid>\r\n</Grid>\r\n\r\n\r\n\r\n    <div>\r\n        <Modal\r\n          open={open}\r\n\r\n\r\n          onClose={handleClose}\r\n          aria-labelledby=\"parent-modal-title\"\r\n          aria-describedby=\"parent-modal-description\"\r\n        >\r\n          <Box sx={{ ...style, width: \"40vw\" }} >\r\n            <EditPhoneNumber />\r\n          </Box>\r\n          \r\n        </Modal>\r\n    </div>\r\n\r\n\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Edituser","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\User\\TableofUser.js",["877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914"],"\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  Fade,\r\n  IconButton,\r\n  MenuItem,\r\n  Modal,\r\n  Popover,\r\n  Popper,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { Children, useEffect, useState } from \"react\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n// import \"./ApiaryList.css\";\r\nimport XLSX from \"xlsx\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  Edit as EditIcon,\r\n  MoreVertOutlined,\r\n  Share,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,NavLink,\r\n  useParams,useRouteMatch\r\n} from \"react-router-dom\" \r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport CompanyAddList from \"../../../components/Form/ApiaryList/ApiaryAddList\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport \"../../../Iran-Sans-normal\";\r\nimport ApiaryAddList from \"../../../components/Form/ApiaryList/ApiaryAddList\";\r\nimport ApiaryUpdateList from \"../../../components/Form/ApiaryList/ApiaryUpdateList\";\r\nimport Adduser from \"../../../components/Form/User/Adduser\";\r\nimport useStyles from \"./styles\";\r\nimport EditUser from \"../../../components/Form/User/EditUser\";\r\n\r\nfunction TableofUser() {\r\n  const [open, setOpen] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [downloadOpen, setdownloadOpen] = useState(false);\r\n\r\n  const [selectedRows, setSelectedRows] = useState();\r\n  const [scroll, setScroll] = useState('paper');\r\n\r\n  const [toolbar, setToolbar] = useState(false);\r\n  const[Hive,setHive]=useState(\"all\")\r\n  let { path, url } = useRouteMatch();\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n   \r\n    setScroll(scrollType);\r\n  };\r\n  const handleClickEdit= (scrollType) => () => {\r\n    setOpenEdit(true);\r\n   \r\n    setScroll(scrollType);\r\n  };\r\n  useEffect(()=>{\r\n    console.log(\"Hive\",Hive)\r\n  },[Hive])\r\n\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setdownloadOpen(false);\r\n    setOpenEdit(false);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflow: \"scroll\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    borderRadius: \"16px\",\r\n    boxShadow: 24,\r\n    pt: 2,\r\n    px: 4,\r\n    pb: 3,\r\n  };\r\n\r\n  const [Company, setCompany] = useState([\r\n    {\r\n      id: \"1\",\r\n      name: \"شاهین رضوانی\",\r\n      email: \"shahin@gmail.com\",\r\n      Beehive: \"زنبورستان 1\",\r\n      Role: \"نقش\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: \"شاهین کاظمی\",\r\n      email: \"shahin@gmail.com\",\r\n      Beehive: \"زنبورستان 3\",\r\n      Role: \"نقش\",\r\n    },\r\n  ]);\r\n\r\n\r\n\r\n  console.log(Company);\r\n  const columns = [\r\n    {\r\n      title: \"نام شخص\",\r\n      field: \"name\",\r\n      validate: (rowDate) => {\r\n        if (rowDate.name === undefined || rowDate.name === \"\") {\r\n          return \"این فیلد ضروری است\";\r\n        } else if (rowDate.name.length < 2) {\r\n          return \"نام شما حداقل باید دارای دو کاراکتر باشد\";\r\n        }\r\n        return true;\r\n      },\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n\r\n      render: (rowData) => {\r\n        console.log(\"rowData\", rowData);\r\n        return (\r\n          <Link\r\n            // to={`/app/user/${rowData.id}`}\r\n            className=\"title\"\r\n            style={{ display: \"flex\" }}\r\n          >\r\n            <p className=\"title\">{rowData.name}</p>\r\n          </Link>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \" ایمیل/تلفن\",\r\n      field: \"State\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.email}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \" زنبورستان\",\r\n      field: \"city\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.Beehive}</p>;\r\n      },\r\n    },\r\n    \r\n    {\r\n      title: \"نقش\",\r\n      field: \"InadequatCondition\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <div>{rowData.Role}</div>;\r\n      },\r\n    },\r\n    \r\n    {\r\n      title: \"عملیات\",\r\n      field: \"thumbnail\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      \r\n      render: (rowData) => {\r\n        return (\r\n          // <Link to={`/app/CompanyList/${rowData.id}`}>\r\n          <div>\r\n            <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n              {(popupState) => (\r\n                <div>\r\n                  <MoreVertOutlined\r\n                    variant=\"contained\"\r\n                    {...bindTrigger(popupState)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n\r\n                  <Popover\r\n                    {...bindPopover(popupState)}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                  >\r\n                    <div style={{ borderRadius: \" 16px\", padding: \" 16px\" }}>\r\n                      <Link\r\n                        onClick={handleEditOpen}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-start\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        <Edit style={{ marginLeft: \"16px\" }} />\r\n                        ویرایش\r\n                      </Link>\r\n                      <hr\r\n                        style={{\r\n                          borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                          height: \"2px\",\r\n                        }}\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-start\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        <Share style={{ marginLeft: \"16px\" }} />\r\n                        اشتراک گذاری\r\n                      </div>\r\n                      <hr\r\n                        style={{\r\n                          borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                          height: \"2px\",\r\n                        }}\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-start\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src=\"/assets/move-svgrepo-com.svg\"\r\n                          style={{ margin: \"0 0px 0 24px\" }}\r\n                        />\r\n                        انتقال\r\n                      </div>\r\n                      <hr\r\n                        style={{\r\n                          borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                          height: \"2px\",\r\n                        }}\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          color: \"red\",\r\n                          justifyContent: \"flex-start\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => onRowDelete(rowData)}\r\n                      >\r\n                        <img\r\n                          src=\"/assets/trash-svgrepo-com-2.svg\"\r\n                          style={{ margin: \"0 0px 0 24px\" }}\r\n                        />\r\n                        حذف\r\n                      </div>\r\n                    </div>\r\n                  </Popover>\r\n                </div>\r\n              )}\r\n            </PopupState>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //downloadExcel\r\n  const downloadFile = () => {\r\n    setdownloadOpen(true);\r\n  };\r\n  const downloadExcel = () => {\r\n    const newData = Company.map((row) => {\r\n      delete row.tableData;\r\n      return row;\r\n    });\r\n    const workSheet = XLSX.utils.json_to_sheet(newData);\r\n    const workBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, \"students\");\r\n    //Buffer\r\n    let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n    //Binary string\r\n    XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n    //Download\r\n    XLSX.writeFile(workBook, \"StudentsData.xlsx\");\r\n  };\r\n  const [searched, setSearched] = useState();\r\n\r\n  const requestSearch = (searchedVal) => {\r\n    const filteredRows = Company.map((rows) => {\r\n      return rows.name;\r\n      // console.log(\"rows.title\",rows)\r\n    }).filter((row) => {\r\n      return row.toLowerCase().includes(searchedVal.toLowerCase());\r\n    });\r\n    setCompany(filteredRows);\r\n    console.log(\"Company\", Company);\r\n    console.log(\"filteredRows\", filteredRows);\r\n  };\r\n  const cancelSearch = () => {\r\n    setSearched(\"\");\r\n    requestSearch(searched);\r\n  };\r\n  const handleBulkDelete = () => {\r\n    console.log(selectedRows);\r\n    const updatedData = Company.filter((row) => !selectedRows.includes(row));\r\n    setCompany(updatedData);\r\n  };\r\n\r\n  const onRowDelete = (rowData) => {\r\n    const updatedData = Company.filter((row) => ![rowData].includes(row));\r\n    setCompany(updatedData);\r\n  };\r\n\r\n  const downloadPdf = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"جزییات زنبورستان\", 20, 10);\r\n    doc.autoTable({\r\n      theme: \"grid\",\r\n      columns: columns.map((col) => ({ ...col, dataKey: col.field })),\r\n      body: Company,\r\n    });\r\n    doc.setFont(\"Iran-Sans\"); // set custom font\r\n    doc.save(\"table.pdf\");\r\n  };\r\n  const add = () => {\r\n    return console.log(\"click\");\r\n  };\r\n  return (\r\n    <div>\r\n      <h2 style={{ color: \"rgb(227, 156, 0)\" }}>کاربران</h2>\r\n      <MaterialTable\r\n        localization={{\r\n          toolbar: {\r\n            searchPlaceholder: \"dfsdfsdf\",\r\n          },\r\n        }}\r\n        title=\"\"\r\n        style={{ borderRadius: \"25px\" }}\r\n        data={Company}\r\n        columns={columns}\r\n        onSelectionChange={(rows) => setSelectedRows(rows)}\r\n        localization={{\r\n          body: {\r\n            editRow: { deleteText: \"آیا میخواهید این سطر را حذف کنید؟\" },\r\n          },\r\n          pagination: {\r\n            labelDisplayedRows: \"{from}-{to} از {count}\",\r\n            labelRowsSelect: \"تعداد ردیف\",\r\n            labelRowsPerPage: \"۱\",\r\n            firstAriaLabel: \"اولین صقحه\",\r\n\r\n            previousAriaLabel: \"صفحه قبل\",\r\n\r\n            nextAriaLabel: \"صفحه بعد\",\r\n            lastAriaLabel: \"اخرین صفحه\",\r\n          },\r\n          toolbar: {\r\n            nRowsSelected: \"{0} مورد انتخاب شد\",\r\n            searchPlaceholder: \"جستجو \",\r\n          },\r\n          header: {\r\n            actions: \"عملیات\",\r\n          },\r\n          body: {\r\n            emptyDataSourceMessage: \"موردی جهت نمایش وجود ندارد.\",\r\n            filterRow: {\r\n              filterTooltip: \"فیلتر\",\r\n            },\r\n          },\r\n        }}\r\n        options={{\r\n          columnsButton: true,\r\n          actionsColumnIndex: -1,\r\n          addRowPosition: \"last\",\r\n          rowStyle: {\r\n            fontWeight: 600,\r\n            textAlign: \"right\",\r\n          },\r\n          headerStyle: {\r\n            fontWeight: 600,\r\n            color: \"rgb( 102, 103 ,104)\",\r\n          },\r\n          selection: true,\r\n          selectionProps: (rowData) => ({\r\n            // checked: Company?.includes(rowData.value) ? true: false,\r\n            onClick: () => {\r\n              console.log(\"clicked asdasda\");\r\n              setToolbar(true);\r\n            },\r\n          }),\r\n          search: true,\r\n          searchFieldAlignment: \"left\",\r\n          searchFieldStyle: {\r\n            borderTop: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderRight: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderLeft: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderBottom: \"none\",\r\n            padding: \"4px\",\r\n            borderRadius: \"8px\",\r\n          },\r\n          // filtering: true,\r\n        }}\r\n        components={\r\n          {\r\n            // Toolbar: (props) => (\r\n            //   <>\r\n            //     <div\r\n            //       style={{\r\n            //         direction: \"rtl\",\r\n            //         display: \"flex\",\r\n            //         justifyContent: \"space-between\",\r\n            //         alignItems: \"center\",\r\n            //         padding: \"16px  32px  0px\",\r\n            //       }}\r\n            //     >\r\n            //       <div\r\n            //         style={{\r\n            //           display: \"flex\",\r\n            //           alignItems: \"center\",\r\n            //           justifyContent: \"center\",\r\n            //         }}\r\n            //       >\r\n            //         <SearchBar\r\n            //           style={{\r\n            //             direction: \"ltr\",\r\n            //             border: \"1px solid red\",\r\n            //             width: \"100%\",\r\n            //             borderRadius: \"8px\",\r\n            //           }}\r\n            //           value={searched}\r\n            //           onChange={(searchVal) => requestSearch(searchVal)}\r\n            //           onCancelSearch={() => cancelSearch()}\r\n            //         />\r\n            //         {/* <MTableToolbar {...props} /> */}\r\n            //         <div\r\n            //           onClick={handleOpen}\r\n            //           style={{\r\n            //             backgroundColor: \"rgb( 227, 156, 0)\",\r\n            //             marginRight: \"32px\",\r\n            //             color: \"#000\",\r\n            //             padding: \"8px\",\r\n            //             display: \"flex\",\r\n            //             alignItems: \"center\",\r\n            //             justifyContent: \"center\",\r\n            //             borderRadius: \"8px\",\r\n            //           }}\r\n            //         >\r\n            //           <img src=\"/assets/Group 182.svg\" />\r\n            //         </div>\r\n            //       </div>\r\n            //       <div\r\n            //         onClick={downloadFile}\r\n            //         style={{\r\n            //           backgroundColor: \"black\",\r\n            //           cursor: \"pointer\",\r\n            //           color: \"white\",\r\n            //           display: \"flex\",\r\n            //           alignItems: \"center\",\r\n            //           justifyContent: \"center\",\r\n            //           borderRadius: \"8px\",\r\n            //           padding: \"8px\",\r\n            //           // marginLeft: \"32px\",\r\n            //         }}\r\n            //       >\r\n            //         <span>دانلود</span>\r\n            //         <img\r\n            //           src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n            //           style={{ marginRight: \"8px\" }}\r\n            //         />\r\n            //       </div>\r\n            //     </div>\r\n            //     <hr\r\n            //       style={{\r\n            //         borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n            //         height: \"2px\",\r\n            //       }}\r\n            //     />\r\n            //     {toolbar ? (\r\n            //       <MTableToolbar {...props}>{console.log(props)}</MTableToolbar>\r\n            //     ) : null}\r\n            //   </>\r\n            // ),\r\n          }\r\n        }\r\n        actions={[\r\n          {\r\n            icon: () => <Select\r\n               labelId=\"demo-simple-select-label\"\r\n               variant=\"outlined\"\r\n               className={classes.inputSelect}\r\n               Id='demo-simple-select'\r\n               style={{width:100}}\r\n               value={Hive}\r\n               className={classes.inputSelect}\r\n               onChange={(e)=>setHive(e.target.value)}>\r\n                 <MenuItem value={\"all\"}><em>All</em></MenuItem>\r\n                 <MenuItem value={2019}>2019</MenuItem>\r\n                 <MenuItem value={2020}>2020</MenuItem>\r\n                 <MenuItem value={2021}>2021</MenuItem>\r\n            </Select>,\r\n\r\n            tooltip: \"دانلود\",\r\n            isFreeAction: true,\r\n          },\r\n\r\n\r\n          {\r\n            icon: () => (\r\n              <div>\r\n                <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                  {(popupState) => (\r\n                    <div>\r\n                      <MoreVertOutlined\r\n                        variant=\"contained\"\r\n                        {...bindTrigger(popupState)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n\r\n                      <Popover\r\n                        {...bindPopover(popupState)}\r\n                        anchorOrigin={{\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                        transformOrigin={{\r\n                          vertical: \"top\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n                        >\r\n                          <Link\r\n                              onClick={handleClickEdit('body')} \r\n                             style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <Edit style={{ marginLeft: \"16px\" }} />\r\n                            ویرایش\r\n                          </Link>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <Share style={{ marginLeft: \"16px\" }} />\r\n                            اشتراک گذاری\r\n                          </div>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <img\r\n                              src=\"/assets/move-svgrepo-com.svg\"\r\n                              style={{ margin: \"0 0px 0 24px\" }}\r\n                            />\r\n                            انتقال\r\n                          </div>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              color: \"red\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => handleBulkDelete(selectedRows)}\r\n                          >\r\n                            <img\r\n                              src=\"/assets/trash-svgrepo-com-2.svg\"\r\n                              style={{ margin: \"0 8px 0 16px\" }}\r\n                            />\r\n                            حذف\r\n                          </div>\r\n                        </div>\r\n                      </Popover>\r\n                    </div>\r\n                  )}\r\n                </PopupState>\r\n              </div>\r\n            ),\r\n\r\n            // isFreeAction: true,\r\n          },\r\n\r\n          {\r\n            icon: () => (\r\n              <div onClick={handleClickOpen('body')}>\r\n                <img\r\n                  style={{\r\n                    backgroundColor: \"rgb( 227, 156, 0)\",\r\n\r\n                    color: \"#000\",\r\n                    padding: \"8px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    borderRadius: \"8px\",\r\n                  }}\r\n                  src=\"/assets/Group 182.svg\"\r\n                />\r\n              </div>\r\n            ),\r\n            tooltip: \"اضافه کردن کاربر\",\r\n    \r\n            isFreeAction: true,\r\n          },\r\n          {\r\n            icon: () => (\r\n              <div\r\n                onClick={downloadFile}\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  cursor: \"pointer\",\r\n                  color: \"white\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  borderRadius: \"8px\",\r\n                  padding: \"8px\",\r\n                  // marginLeft: \"32px\",\r\n                }}\r\n              >\r\n                <span style={{ fontFamily: \"Shabnam\", fontSize: \"1rem\" }}>\r\n                  دانلود\r\n                </span>\r\n                <img\r\n                  src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n                  style={{ marginRight: \"8px\" }}\r\n                />\r\n              </div>\r\n            ),\r\n            tooltip: \"دانلود\",\r\n            isFreeAction: true,\r\n          },\r\n        ]}\r\n      />\r\n      <div>\r\n        <Dialog\r\n          PaperProps={{\r\n            style: { borderRadius: 12,width:\"60%\" }\r\n          }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"xl\"\r\n        >\r\n            <Adduser />\r\n    \r\n        </Dialog>\r\n      </div>\r\n\r\n      <div>\r\n        <Dialog\r\n          PaperProps={{\r\n            style: { borderRadius: 12,width:\"60%\" }\r\n          }}\r\n        open={openEdit}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"xl\"\r\n        >\r\n            <EditUser/>\r\n        </Dialog>\r\n      </div>\r\n\r\n      <div>\r\n        <Modal\r\n          open={downloadOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"parent-modal-title\"\r\n          aria-describedby=\"parent-modal-description\"\r\n        >\r\n          <Box\r\n              sx={{\r\n                ...style,\r\n               width: {\r\n                  xs: \"350px\",\r\n                  sm: \"500px\",\r\n                },\r\n        \r\n              }} \r\n            className=\"downloadFile\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div onClick={downloadExcel} className=\"downloadExcel\">\r\n              <img src=\"/assets/excel-svgrepo-com.svg\" />\r\n            </div>\r\n            <div onClick={downloadPdf} className=\"downloadPdf\">\r\n              <img src=\"/assets/pdf-svgrepo-com (1).svg\" />\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableofUser;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\HiveStatus.js",["915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Breadcrumbs, Button, Dialog, Grid, Slide, Typography } from \"@material-ui/core\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from \"./Style\";\r\nimport Chart from \"../../../components/Chart/Chart\";\r\nimport \"../Support/Support.css\"\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,NavLink,\r\n  useParams,useRouteMatch,useHistory\r\n} from \"react-router-dom\" \r\nimport RightTopCard from \"./RightTopCard\";\r\nimport LeftCard from \"./LeftCard\";\r\nimport Audio from \"./Audio\";\r\nimport Diagram from \"./Diagram\";\r\nimport WebHiveSubmit from \"./webHiveSubmit\";\r\nimport { NavigateBefore } from \"@material-ui/icons\";\r\nimport Title from \"../../../components/Typography/Title/Title\";\r\nimport LinaerStepper from \"./LinaerStepper\";\r\nimport {\r\n\r\n  Close,\r\n  Edit,\r\n  \r\n  MoreVertOutlined,\r\n  Share,\r\n\r\n} from \"@material-ui/icons\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n}); \r\n\r\nfunction HiveStatus() {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n\r\n    setOpen(false);\r\n  };\r\n  let { path, url } = useRouteMatch();\r\n  console.log(path,\"path\")\r\n  console.log(url,\"url\")\r\n  let { id } = useParams();\r\n  \r\n  console.log(\"id ro bebin \" , id);\r\nconst apiaryIdClick=localStorage.getItem(\"apiaryIdClick\")\r\n  const breadcrumbs = [\r\n\r\n    <Link\r\n      to=\"/app/ApiaryList\"\r\n      key=\"1\"\r\n      style={{textDecoration:\"none\",cursor:\"pointer\",fontSize:\"1.2rem\"}}\r\n    >\r\n\r\n          <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\",fontSize:\"1.2rem\"}}>زنبورستان</p>\r\n\r\n    </Link>,\r\n        <Link\r\n        to=\"/app/ApiaryList/Beehive/2\"\r\n        key=\"2\"\r\n        style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n      >\r\n            {/* <Title key=\"2\" title=\"کندووان\"/> */}\r\n            <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\",fontSize:\"1.2rem\"}} >{apiaryIdClick}</p>\r\n\r\n  \r\n      </Link>,\r\n\r\n            <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\",fontSize:\"1.2rem\"}}>{id}</p>\r\n            \r\n  ];\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Breadcrumbs \r\n        separator={<NavigateBefore fontSize=\"large\" style={{color:\"rgb(227, 156, 0)\"}} />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n      <Grid container spacing={3} style={{marginTop:\"8px\"}}>\r\n\r\n    <Grid item xs={12}  lg={6}>\r\n\r\n      <Grid item  className={classes.TabHeader} >\r\n        <Grid ><NavLink exact to={`${url}`} className={classes.item} activeClassName={classes.activeItem}>وضعیت</NavLink></Grid>\r\n        <Grid><NavLink to={`${url}/Sound`} className={classes.item} activeClassName={classes.activeItem}>صدا و تصویر</NavLink></Grid>\r\n        <Grid><NavLink to={`${url}/Diagram`} className={classes.item} activeClassName={classes.activeItem}> نمودار </NavLink></Grid>\r\n        <Grid><NavLink to={`${url}/History`} className={classes.item} activeClassName={classes.activeItem}> تاریخچه </NavLink></Grid>\r\n      </Grid> \r\n\r\n{/* \r\n        <RightTopCard />\r\n         <Audio />\r\n         <Diagram /> */}\r\n\r\n\r\n      <Switch>\r\n        <Route exact path={`${path}`}>\r\n            <RightTopCard onClickOpen={handleClickOpen}/>\r\n        </Route>\r\n        <Route path={`${path}/Sound`}>\r\n            <Audio />\r\n        </Route>\r\n        <Route path={`${path}/Diagram`}>\r\n            <Diagram /> \r\n        </Route>\r\n      </Switch>     \r\n             \r\n    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Grid item  xs={12} lg={6} >        \r\n        <LeftCard />   \r\n          <div>\r\n          \r\n         \r\n      <Dialog \r\n          \r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        {/* <WebHiveSubmit  onClose={handleClose} /> */}\r\n        <LinaerStepper onClose={handleClose}/>\r\n        </Dialog > \r\n          </div>\r\n      </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HiveStatus;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Hive.js",["941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997"],"\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Dialog,\r\n  Fade,\r\n  IconButton,\r\n  MenuItem,\r\n  Modal,\r\n  Popover,\r\n  Popper,\r\n  Select,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { Children, useEffect, useState } from \"react\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport axios from \"axios\";\r\nimport useStyles from \"./styles\";\r\nimport \"./Hive.css\";\r\nimport XLSX from \"xlsx\";\r\nimport {  Close, Edit, Edit as EditIcon, MoreVertOutlined, NavigateBefore, Share } from \"@material-ui/icons\";\r\nimport { Link ,useParams,useHistory } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport CompanyAddList from \"../../../components/Form/ApiaryList/ApiaryAddList\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport \"../../../Iran-Sans-normal\";\r\nimport ApiaryAddList from \"../../../components/Form/ApiaryList/ApiaryAddList\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Title from \"../../../components/Typography/Title/Title\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport NutritionStepper from \"./Questionnaire/NutritionStepper\";\r\nimport CureHiveStepper from \"./Questionnaire/CureHiveStepper\";\r\nimport CatchHoneyStepper from \"./Questionnaire/CatchHoneyStepper\";\r\nimport Loading from \"../../../components/Loading/Loading\";\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n}); \r\n\r\n\r\nfunction  Hive() {\r\n  const history = useHistory()\r\n\r\n  const location = useLocation()\r\n  // window.localStorage.getItem(location.state.rowDatas)\r\n  // const rowDatas= window.localStorage.setItem()\r\n  // console.log(\"location\",location)\r\n  // console.log(\"rowDatanew\",rowDatas)\r\n  const [open, setOpen] = useState(false);\r\n  const[openNutrition,setOpenNutrition]=useState(false);\r\n  const[openCatchHoney,setopenCatchHoney]=useState(false);\r\n  const[openCureHive,setOpenCureHive]=useState(false);\r\n  const [downloadOpen, setdownloadOpen] = useState(false);\r\n  const [ loading , setLoading]=useState(true)\r\n\r\n  const [selectedRows, setSelectedRows] = useState();\r\n\r\n  const [toolbar, setToolbar] = useState(false);\r\n  const[Hive,setHive]=useState(\"all\")\r\n  const [scroll, setScroll] = useState('paper');\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n\r\n    setScroll(scrollType);\r\n  };\r\n  const handleNutrition=(popupState)=>{\r\n    setOpenNutrition(true)\r\n    popupState.close() \r\n  }\r\n  const handleCatchHoney=(popupState)=>{\r\n    setopenCatchHoney(true)\r\n    popupState.close()\r\n  }\r\n  const handleCureHive=(popupState)=>{\r\n    setOpenCureHive(true)\r\n    popupState.close()\r\n  }\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setdownloadOpen(false);\r\n    setOpenNutrition(false)\r\n    setopenCatchHoney(false)\r\n    setOpenCureHive(false)\r\n  };\r\n  \r\n  useEffect(()=>{\r\n    console.log(\"Hive\",Hive)\r\n  },[Hive])\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflow: \"scroll\",\r\n    width: 430,\r\n    // bgcolor: \"background.paper\",\r\n    background:\" rgb( 244 244 244)\",\r\n    borderRadius: \"16px\",\r\n    boxShadow: 24,\r\n    pt: 4,\r\n    px: 6,\r\n    pb: 4,\r\n  };\r\n  const [Company, setCompany] = useState([\r\n    {\r\n      id: \"1\",\r\n      title: \"کندوی 1\",\r\n      type: \"نوع کندو\",\r\n      queenType: \"نژاد ملکه\",\r\n      dateCreated: \"23/09/1400\",\r\n      active: 1,\r\n      isCheckListDone: 1,\r\n      isHiveSick: 1,\r\n      hasQueen: 1,\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"کندوی 2\",\r\n      type: \"نوع کندو\",\r\n      queenType: \"نژاد ملکه\",\r\n      dateCreated: \"23/09/1400\",\r\n      active: 0,\r\n      isCheckListDone: 0,\r\n      isHiveSick: 0,\r\n      hasQueen: 0,\r\n    },\r\n  ]);\r\n  const[hiveTable,setHiveTable]= useState([])\r\n  // const useStyles = makeStyles({\r\n  //   Button: {\r\n  //     margin: \"8px 0px\",\r\n  //     fontFamily: \"Shabnam\",\r\n  //     cursor: \"pointer\",\r\n  //     width: \"5%\",\r\n  //   },\r\n  // });\r\n  \r\n  const classes = useStyles();\r\n/////////////////////////////////////////////////////////////////////////////////////////\r\nconst Apiary_id= localStorage.getItem(\"Apiary_id\")\r\nconsole.log(\"Apiary_id\",Apiary_id);\r\nconst token = localStorage.getItem(\"id_token\");\r\nconsole.log(\"token\", token);\r\nuseEffect(() => {\r\n  const fetchData = async (index) => {\r\n    console.log(\"salam id\",index);\r\n    setLoading(true);\r\n    try {\r\n      const { data: response } = await axios.get(\r\n        `http://185.202.113.165:3000/api/hive/get-by-apiary/${id}`,\r\n        {\r\n          headers: {\r\n            token: `${token}`,\r\n          },\r\n        },\r\n      );\r\n      console.log(\"show response hive\", response.data);\r\n      setHiveTable(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      if (error.response?.status === 401) {\r\n        localStorage.clear(\"id_token\")\r\n        console.log(\"سرور دچار مشکل شده است یا اعتبار توکن به پایان رسیده است\" + \"ApiaryList\" );\r\n        window.location.reload()\r\n      }else{\r\n      console.log(\"سرور دچار مشکل شده است یا اعتبار توکن به پایان رسیده است\" + \"ApiaryList\" );\r\n      // history.push(\"/app/Error\")\r\n      // window.location.reload()\r\n     }}\r\n\r\n    // setLoading(false);\r\n  };\r\n  fetchData();\r\n}, []);\r\n\r\n\r\n////////////////////////////////////////////////////////////////////\r\n\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////\r\nconst[ filter,setFilter]=useState([])\r\n  console.log(\"token\", token);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // setLoading(true);\r\n      try {\r\n        const { data: response } = await axios.get(\r\n          \"http://185.202.113.165:3000/api/apiary/get-for-user\",\r\n          {\r\n            headers: {\r\n              token: `${token}`,\r\n            },\r\n          },\r\n        );\r\n        console.log(\"show response\", response.data);\r\n        setFilter(response.data);\r\n      } catch (error) {\r\n        if (error.response?.status === 401) {\r\n          localStorage.clear(\"id_token\")\r\n          console.log(\"سرور دچار مشکل شده است یا اعتبار توکن به پایان رسیده است\" + \"ApiaryList\" );\r\n          window.location.reload()\r\n        }else{\r\n        console.log(\"سرور دچار مشکل شده است یا اعتبار توکن به پایان رسیده است\" + \"ApiaryList\" );\r\n        // history.push(\"/app/Error\")\r\n        window.location.reload()\r\n       }}\r\n\r\n      // setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  ////////////////////////////////////////////////\r\n  console.log(Company);\r\n  const columns = [\r\n\r\n    {\r\n      title: \"نام کندو\",\r\n      field: \"title\",\r\n      cellStyle: {\r\n        textAlign:\" center !important\",\r\n        transform:\"translateX(10px)\",\r\n        fontSize:\"0.8rem\",\r\n        justifyContent:\"center\",\r\n      },\r\n\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n        whiteSpace: \"nowrap\",\r\n           fontSize:\"0.8rem\",\r\n           color:\"rgb( 102, 103, 104)\",\r\n           \r\n      },\r\n\r\n      render: (rowData) => {\r\n        console.log(\"rowData\", rowData);\r\n        return (\r\n          <Link\r\n            to={`/app/ApiaryList/Beehive/Hive/${rowData.title.split(' ').join('-')}`}   \r\n            style={{ textDecoration:\"none\" ,color:\"black\",cursor:\"pointer\"}}\r\n            className=\"description\"\r\n\r\n          >\r\n            {rowData.title}\r\n          </Link>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \" نوع کندو\",\r\n      field: \"type\",\r\n      cellStyle: {\r\n        textAlign:\" right !important\",\r\n\r\n        fontSize:\"0.8rem\",\r\n        justifyContent:\"center\",\r\n      },\r\n\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n        whiteSpace: \"nowrap\",\r\n           fontSize:\"0.8rem\",\r\n           color:\"rgb( 102, 103, 104)\",\r\n           fontWeight:\"600\",\r\n          //  paddingRight:\"20px\"\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.type}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \" نژاد ملکه\",\r\n      field: \"queenType\",\r\n      cellStyle: {\r\n        textAlign:\" center !important\",\r\n\r\n        fontSize:\"0.8rem\",\r\n        justifyContent:\"center\",\r\n      },\r\n\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n        whiteSpace: \"nowrap\",\r\n           fontSize:\"0.8rem\",\r\n           colot:\"slateGrey\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.queenType}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"تاریخ ایجاد\",\r\n      field: \"dateCreated\",\r\n      cellStyle: {\r\n        textAlign:\" center !important\",\r\n\r\n        fontSize:\"0.8rem\",\r\n        justifyContent:\"center\",\r\n      },\r\n\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n        whiteSpace: \"nowrap\",\r\n           fontSize:\"0.8rem\",\r\n           color:\"rgb( 102, 103, 104)\",\r\n           fontWeight:\"600\", \r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.dateCreated}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"وضعیت برد\",\r\n      field: \"active\",\r\n      cellStyle: {\r\n        textAlign:\" center !important\",\r\n\r\n        fontSize:\"0.8rem\",\r\n        justifyContent:\"center\",\r\n        // paddingRight:\"8px\"\r\n      },\r\n\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n        whiteSpace: \"nowrap\",\r\n           fontSize:\"0.8rem\",\r\n           color:\"rgb( 102, 103, 104)\",\r\n           fontWeight:\"600\", \r\n           \r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          <div className={rowData.active ? \"statusActive\" : \"statusDeactive\"}>\r\n            {rowData.active ? \"فعال\" : \"غیرفعال\"}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"کار\",\r\n      field: \"isCheckListDone\",\r\n      cellStyle: {\r\n        textAlign:\" left !important\",\r\n        transform:\"translateX(12px)\",\r\n        fontSize:\"0.8rem\",\r\n        // justifyContent:\"flex-end\",\r\n      },\r\n\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n        whiteSpace: \"nowrap\",\r\n           fontSize:\"0.8rem\",\r\n           color:\"rgb( 102, 103, 104)\",\r\n           fontWeight:\"600\", \r\n\r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          <div >\r\n            {rowData.isCheckListDone ? (\r\n              <img src=\"/assets/checklist-svgrepo-com-1.svg\" />\r\n            ) : (\r\n              <img src=\"/assets/checklist-svgrepo-com.svg\" />\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"بیماری\",\r\n      field: \"isHiveSick\",\r\n      cellStyle: {\r\n        textAlign:\" center !important\",\r\n        transform:\"translateX(10px)\",\r\n        fontSize:\"0.8rem\",\r\n        justifyContent:\"center\",\r\n      },\r\n\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n        whiteSpace: \"nowrap\",\r\n           fontSize:\"0.8rem\",\r\n           color:\"rgb( 102, 103, 104)\",\r\n           fontWeight:\"600\", \r\n          // paddingRight:\"20px\"\r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          <div className={rowData.isHiveSick ? \"sickActive\" : \"sickDeactive\"}>\r\n            {rowData.isHiveSick ? (\r\n              <img src=\"/assets/sickness-svgrepo-com-1.svg\" />\r\n            ) : (\r\n              <img src=\"/assets/sickness-svgrepo-com-2.svg\" />\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"ملکه\",\r\n      field: \"hasQueen\",\r\n      cellStyle: {\r\n        textAlign:\" center !important\",\r\n        transform:\"translateX(10px)\",\r\n        fontSize:\"0.8rem\",\r\n        justifyContent:\"center\",\r\n      },\r\n\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n        whiteSpace: \"nowrap\",\r\n           fontSize:\"0.8rem\",\r\n           color:\"rgb( 102, 103, 104)\",\r\n           fontWeight:\"600\", \r\n          // paddingRight:\"20px\"\r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          <div className={rowData.hasQueen ? \"jobActive\" : \"jobDeactive\"}>\r\n            {rowData.hasQueen ? (\r\n              <img src=\"/assets/Component 24 – 5.svg\" />\r\n            ) : (\r\n              <img src=\"/assets/Component 24 – 6.svg\" />\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"عملیات\",\r\n      field: \"action\",\r\n      cellStyle: {\r\n        textAlign:\" center !important\",\r\n        transform:\"translateX(10px)\",\r\n        fontSize:\"0.8rem\",\r\n        justifyContent:\"center\",\r\n      },\r\n\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n        whiteSpace: \"nowrap\",\r\n           fontSize:\"0.8rem\",\r\n           color:\"rgb( 102, 103, 104)\",\r\n           fontWeight:\"600\", \r\n          // paddingRight:\"20px\"\r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          // <Link to={`/app/CompanyList/${rowData.id}`}>\r\n          <div>\r\n          <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n            {(popupState) => (\r\n              <div>\r\n            <MoreVertOutlined variant=\"contained\" {...bindTrigger(popupState)} style={{cursor:\"pointer\"}}/>\r\n\r\n                \r\n                <Popover\r\n              \r\n\r\n                  {...bindPopover(popupState)}\r\n                  anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\",\r\n                  }}\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n                  >\r\n                     <div\r\n                     onClick={()=>handleCureHive(popupState)}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                        cursor:\"pointer\"\r\n\r\n                  \r\n                      }}\r\n                    >\r\n                      <img src=\"/assets/medicine-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                      درمان\r\n                    </div>\r\n                    <hr\r\n                      style={{\r\n                        borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                        height: \"2px\",\r\n                      }}\r\n                    />\r\n                    <div\r\n                    onClick={()=>handleNutrition(popupState)}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                        cursor:\"pointer\"\r\n\r\n                  \r\n                      }}\r\n                    >\r\n                      <img src=\"/assets/flower-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                      تغذیه\r\n                    </div>\r\n                    <hr\r\n                      style={{\r\n                        borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                        height: \"2px\",\r\n                      }}\r\n                    />\r\n                    <div\r\n                    onClick={()=>handleCatchHoney(popupState)}  \r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                        cursor:\"pointer\"\r\n\r\n                  \r\n                      }}\r\n                    >\r\n                      <img src=\"/assets/honey-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                      برداشت عسل\r\n                    </div>\r\n                    <hr\r\n                      style={{\r\n                        borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                        height: \"2px\",\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                        cursor:\"pointer\"\r\n\r\n                  \r\n                      }}\r\n                    >\r\n                      <img src=\"/assets/move-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                      طبق عسل\r\n                    </div>\r\n                    <hr\r\n                      style={{\r\n                        borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                        height: \"2px\",\r\n                      }}\r\n                    />\r\n                     <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                        cursor:\"pointer\"\r\n\r\n                  \r\n                      }}\r\n                    >\r\n                      <img src=\"/assets/noun-migration-2781863.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                       کوچ\r\n                    </div>\r\n                    <hr\r\n                      style={{\r\n                        borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                        height: \"2px\",\r\n                      }}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                        cursor:\"pointer\"\r\n\r\n                      }}\r\n                    >\r\n                      <Share style={{ marginLeft: \"16px\" }} />\r\n                      اشتراک گذاری\r\n                    </div>\r\n                    <hr\r\n                      style={{\r\n                        borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                        height: \"2px\",\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                        cursor:\"pointer\"\r\n\r\n                  \r\n                      }}\r\n                    >\r\n                      <img src=\"/assets/move-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                      انتقال\r\n                    </div>\r\n                    <hr\r\n                      style={{\r\n                        borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                        height: \"2px\",\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        color:\"red\",\r\n                        justifyContent: \"flex-start\",\r\n                        cursor:\"pointer\"\r\n\r\n                      }}\r\n                      onClick={() => handleBulkDelete(selectedRows)}\r\n                    >\r\n                      <img src=\"/assets/trash-svgrepo-com-2.svg\" style={{ margin: \"0 8px 0 16px\" }} />\r\n                      حذف\r\n                    </div>\r\n                  </div>\r\n                </Popover>\r\n              </div>\r\n            )}\r\n          </PopupState>\r\n        </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //downloadExcel\r\n  const downloadFile = () => {\r\n    setdownloadOpen(true);\r\n  };\r\n  const downloadExcel = () => {\r\n    const type=(e)=>{\r\n      console.log(\"eeeee\",e);\r\n      switch (e) {\r\n        case 'Garden':\r\n          return \"باغ\"\r\n        case 'Farm':\r\n           return \"مزرعه\"\r\n        case 'Mountain':\r\n          return \"مرتع کوهستانی\"\r\n        case 'Plain':\r\n          return \"دشت\"\r\n          case 'Other':\r\n            return \"سایر\"\r\n        default:\r\n          return null\r\n      }\r\n    }\r\n    const queenType=(e)=>{\r\n      console.log(\"eeeee\",e);\r\n      switch (e) {\r\n        case 'Urban':\r\n          return \"شهری\"\r\n        case 'Village':\r\n          return \"روستایی\"\r\n        default:\r\n          return null\r\n      }\r\n    }\r\n\r\n\r\n    const newData = hiveTable.map((row) => {\r\n      // bug\r\n      // delete row.tableData;\r\n      console.log(\"row\", row);\r\n      console.log(\"name\", row.name);\r\n\r\n      console.log(\"regionType\", row.regionType);\r\n      console.log(\"123413412342\",type(row.type));\r\n      console.log(\"123413412342\",queenType(row.queenType));\r\n      return {\r\n        \"نام کندو\":row.title,\r\n        \" نوع کندو\": type(row.type),\r\n        \"نژاد ملکه\":queenType(row.queenType),\r\n        \"تاریخ ایجاد\":row.dateCreated,\r\n        \"وضعیت برد\":row.active,\r\n        \"کار\":row.isCheckListDone,\r\n        \"بیماری\":row.isHiveSick,\r\n        \"ملکه\":row.hasQueen  \r\n      };\r\n    });\r\n    const workSheet = XLSX.utils.json_to_sheet(newData);\r\n    const workBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, \"Apiary\");\r\n    //Buffer\r\n    let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n    //Binary string\r\n    XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n    //Download\r\n    XLSX.writeFile(workBook, \"لیست کندوها.xlsx\");\r\n  };\r\n  \r\n  const [searched, setSearched] = useState();\r\n////////////////////////////////////////////////////////////////////\r\nconst changeApiary =async(index)=>{\r\n  console.log(\"salam id\",index);\r\n  setLoading(true);\r\n  try {\r\n    const { data: response } = await axios.get(\r\n      `http://185.202.113.165:3000/api/hive/get-by-apiary/${index}`,\r\n      {\r\n        headers: {\r\n          token: `${token}`,\r\n        },\r\n      },\r\n    );\r\n    console.log(\"show response hive\", response.data);\r\n    setHiveTable(response.data);\r\n    setLoading(false);\r\n   \r\n  } catch (error) {\r\n    if (error.response?.status === 401) {\r\n      localStorage.clear(\"id_token\")\r\n      console.log(\"سرور دچار مشکل شده است یا اعتبار توکن به پایان رسیده است\" + \"ApiaryList\" );\r\n      window.location.reload()\r\n    }else{\r\n    console.log(\"سرور دچار مشکل شده است یا اعتبار توکن به پایان رسیده است\" + \"ApiaryList\" );\r\n    // history.push(\"/app/Error\")\r\n    // window.location.reload()\r\n   }}\r\n}\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n  const requestSearch = (searchedVal) => {\r\n    const filteredRows = hiveTable.map((rows) => {\r\n      return rows.name;\r\n      // console.log(\"rows.title\",rows)\r\n    }).filter((row) => {\r\n      return row.toLowerCase().includes(searchedVal.toLowerCase());\r\n    });\r\n    setHiveTable(filteredRows);\r\n    console.log(\"hiveTable\", hiveTable);\r\n    console.log(\"filteredRows\", filteredRows);\r\n  };\r\n  \r\n  const cancelSearch = () => {\r\n    setSearched(\"\");\r\n    requestSearch(searched);\r\n  };\r\n  const handleBulkDelete = async() => {\r\n    if(window.confirm(\"آیا از حدف این مورد اطمینان دارید؟\")){\r\n      // const response = await axios.delete(`https://sdfsdf/${selectedRows[0].id}`)\r\n      console.log(\"selectedRows\",selectedRows[0].id)\r\n   \r\n      const updatedData = hiveTable.filter((row) => !selectedRows.includes(row));\r\n      setHiveTable(updatedData);\r\n  }};\r\n\r\n  const onRowDelete= async(rowData) => {\r\n    if(window.confirm(\"آیا از حدف این مورد اطمینان دارید؟\")){\r\n      // const response = await axios.delete(`https://sdfsdf/${rowData.id}`)\r\n      console.log(\"rowData\",rowData.id)\r\n      const updatedData=hiveTable.filter((row)=>![rowData].includes(row))\r\n      setHiveTable(updatedData);\r\n  }};\r\n\r\n  const downloadPdf = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"جزییات زنبورستان\", 20, 10);\r\n    doc.autoTable({\r\n      theme: \"grid\",\r\n      columns: columns.map((col) => ({ ...col, dataKey: col.field })),\r\n      body: hiveTable,\r\n    });\r\n    doc.setFont('Iran-Sans'); // set custom font\r\n    doc.save(\"table.pdf\");\r\n  };\r\n  const add = () => {\r\n    return console.log(\"click\");\r\n  };\r\n\r\n\r\n  let { id } = useParams();\r\n  localStorage.setItem(\"apiaryIdClick\",id)\r\n  console.log(\"id ro bebin \" , id);\r\n  const breadcrumbs = [\r\n\r\n    <Link\r\n      to=\"/app/ApiaryList\"\r\n      key=\"1\"\r\n      style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n    >\r\n          {/* <Title key=\"2\" title=\"زنبورستان\"/> */}\r\n          <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\",fontSize:\"1.2rem\"}}>زنبورستان</p>\r\n    </Link>,\r\n\r\n\r\n         <p style={{color:\"rgb(227, 156, 0)\" ,fontWeight:\"bold\",fontSize:\"1.2rem\"}}>{Apiary_id}</p>\r\n\r\n  ];\r\n\r\n  return (\r\n    <>\r\n    {loading?\r\n          <div className={classes.Loading}> <Loading color=\"orange\" /></div>:   \r\n    <div className={classes.container}>\r\n      <Breadcrumbs \r\n        separator={<NavigateBefore fontSize=\"large\" style={{color:\"rgb(227, 156, 0)\"}} />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n      <MaterialTable\r\n        localization={{\r\n          toolbar: {\r\n            searchPlaceholder: \"dfsdfsdf\",\r\n          },\r\n        }}\r\n        title=\"\"\r\n        style={{ borderRadius: \"25px\",marginTop:\"16px\" }}\r\n        data={hiveTable}\r\n        columns={columns}\r\n        onSelectionChange={(rows) => setSelectedRows(rows)}\r\n        localization={{\r\n          body: {\r\n            editRow: { deleteText: \"آیا میخواهید این سطر را حذف کنید؟\" },\r\n          },\r\n          pagination: {\r\n            labelDisplayedRows: \"{from}-{to} از {count}\",\r\n            labelRowsSelect: 'تعداد ردیف',\r\n            labelRowsPerPage: '۱',\r\n            firstAriaLabel: 'اولین صقحه',     \r\n            previousAriaLabel: 'صفحه قبل',    \r\n            nextAriaLabel: 'صفحه بعد',\r\n            lastAriaLabel: 'اخرین صفحه',\r\n          },\r\n          toolbar: {\r\n            nRowsSelected: \"{0} مورد انتخاب شد\",\r\n            searchPlaceholder: \"جستجو \",\r\n          },\r\n          header: {\r\n            actions: \"عملیات\",\r\n          },\r\n          body: {\r\n            emptyDataSourceMessage: \"موردی جهت نمایش وجود ندارد.\",\r\n            filterRow: {\r\n              filterTooltip: \"فیلتر\",\r\n            },\r\n          },\r\n        }}\r\n        options={{\r\n          \r\n          columnsButton: true,\r\n          actionsColumnIndex: -1,\r\n          addRowPosition: \"last\",\r\n          rowStyle: {\r\n            fontWeight: 600,\r\n            textAlign: \"right\",\r\n          },\r\n          headerStyle: {\r\n            fontWeight: 600,\r\n            color: \"rgb( 102, 103 ,104)\",\r\n          },\r\n          selection: true,\r\n          selectionProps: (rowData) => ({\r\n            // checked: Company?.includes(rowData.value) ? true: false,\r\n            onClick: () => {\r\n              console.log(\"clicked asdasda\");\r\n              setToolbar(true);\r\n            },\r\n          }),\r\n          search: true,\r\n          searchFieldAlignment:\"left\",\r\n          searchFieldStyle: {\r\n            borderTop: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderRight: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderLeft: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderBottom: \"none\",\r\n            padding: \"4px\",\r\n            borderRadius: \"8px\",\r\n   \r\n          },\r\n          // filtering: true,\r\n        }}\r\n\r\n        actions={[\r\n          {\r\n            icon: () => \r\n            <Select\r\n               labelId=\"demo-simple-select-label\"\r\n               variant=\"outlined\"\r\n               Id='demo-simple-select'\r\n               placeholder=\"زنبورستان \"\r\n               style={{width:\"auto\"}}\r\n            defaultValue={Apiary_id}\r\n              //  defaultValue={Hive}\r\n               className={classes.inputSelect}\r\n               onChange={(e)=>setHive(e.target.value)}>\r\n                 { \r\n                 filter.map((el)=>([\r\n                   <MenuItem  onClick={()=>changeApiary(el._id)} value={el.name}>\r\n                     <Link to={`/app/ApiaryList/Beehive/${el._id}`} style={{color:\"#000\",textDecoration:\"none\",cursor: \"pointer\"}} onClick={() => localStorage.setItem(\"Apiary_id\",el.name)}>\r\n                      {el.name}\r\n                     </Link>\r\n                    </MenuItem>\r\n                 ]))}\r\n            </Select>,\r\n            isFreeAction: true,\r\n          },            \r\n          // console.log(\"rowData\", rowData);\r\n          // const str = rowData.name.split(' ').join('-') \r\n          {\r\n            icon: () => (\r\n              \r\n\r\n\r\n              \r\n              <div>\r\n              <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                {(popupState) => (\r\n                  <div>\r\n                <MoreVertOutlined variant=\"contained\" {...bindTrigger(popupState)} style={{cursor:\"pointer\"}}/>\r\n    \r\n                    \r\n                    <Popover\r\n                  \r\n    \r\n                      {...bindPopover(popupState)}\r\n                      anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"center\",\r\n                      }}\r\n                      transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n                      >\r\n                         <div\r\n                         onClick={()=>handleCureHive(popupState)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor:\"pointer\"\r\n    \r\n                      \r\n                          }}\r\n                        >\r\n                          <img src=\"/assets/medicine-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                          درمان\r\n                        </div>\r\n                        <hr\r\n                          style={{\r\n                            borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                            height: \"2px\",\r\n                          }}\r\n                        />\r\n                        <div\r\n                        onClick={()=>handleNutrition(popupState)}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor:\"pointer\"\r\n    \r\n                      \r\n                          }}\r\n                        >\r\n                          <img src=\"/assets/flower-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                          تغذیه\r\n                        </div>\r\n                        <hr\r\n                          style={{\r\n                            borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                            height: \"2px\",\r\n                          }}\r\n                        />\r\n                        <div\r\n                        onClick={()=>handleCatchHoney(popupState)}  \r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor:\"pointer\"\r\n    \r\n                      \r\n                          }}\r\n                        >\r\n                          <img src=\"/assets/honey-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                          برداشت عسل\r\n                        </div>\r\n                        <hr\r\n                          style={{\r\n                            borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                            height: \"2px\",\r\n                          }}\r\n                        />\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor:\"pointer\"\r\n    \r\n                      \r\n                          }}\r\n                        >\r\n                          <img src=\"/assets/move-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                          طبق عسل\r\n                        </div>\r\n                        <hr\r\n                          style={{\r\n                            borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                            height: \"2px\",\r\n                          }}\r\n                        />\r\n                         <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor:\"pointer\"\r\n    \r\n                      \r\n                          }}\r\n                        >\r\n                          <img src=\"/assets/noun-migration-2781863.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                           کوچ\r\n                        </div>\r\n                        <hr\r\n                          style={{\r\n                            borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                            height: \"2px\",\r\n                          }}\r\n                        />\r\n    \r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor:\"pointer\"\r\n    \r\n                          }}\r\n                        >\r\n                          <Share style={{ marginLeft: \"16px\" }} />\r\n                          اشتراک گذاری\r\n                        </div>\r\n                        <hr\r\n                          style={{\r\n                            borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                            height: \"2px\",\r\n                          }}\r\n                        />\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor:\"pointer\"\r\n    \r\n                      \r\n                          }}\r\n                        >\r\n                          <img src=\"/assets/move-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                          انتقال\r\n                        </div>\r\n                        <hr\r\n                          style={{\r\n                            borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                            height: \"2px\",\r\n                          }}\r\n                        />\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            color:\"red\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor:\"pointer\"\r\n    \r\n                          }}\r\n                          onClick={() => handleBulkDelete(selectedRows)}\r\n                        >\r\n                          <img src=\"/assets/trash-svgrepo-com-2.svg\" style={{ margin: \"0 8px 0 16px\" }} />\r\n                          حذف\r\n                        </div>\r\n                      </div>\r\n                    </Popover>\r\n                  </div>\r\n                )}\r\n              </PopupState>\r\n            </div>\r\n            ),\r\n\r\n            // isFreeAction: true,\r\n          },\r\n\r\n          {\r\n            icon: () => (\r\n              <div onClick={handleClickOpen('body')}>\r\n                <img\r\n                  style={{\r\n                    backgroundColor: \"rgb( 227, 156, 0)\",\r\n                    \r\n                    color: \"#000\",\r\n                    padding: \"8px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    borderRadius: \"8px\",\r\n                    boxShadow:\"0px 3px 6px 0px rgba(0,0,0,0.16)\"\r\n\r\n                  }}\r\n                  src=\"/assets/Group 182.svg\"\r\n                />\r\n              </div>\r\n            ),\r\n        \r\n            onClick: () => add(),\r\n            isFreeAction: true,\r\n          },\r\n          {\r\n            icon: () => (\r\n              <div\r\n                onClick={downloadFile}\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  cursor: \"pointer\",\r\n                  color: \"white\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  borderRadius: \"8px\",\r\n                  padding: \"8px\",\r\n                  boxShadow:\"0px 3px 6px 0px rgba(0,0,0,0.16)\"\r\n\r\n                  // marginLeft: \"32px\",\r\n                }}\r\n              >\r\n                <span style={{fontFamily:\"Shabnam\",fontSize:\"1rem\"}}>دانلود</span>\r\n                <img\r\n                  src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n                  style={{ marginRight: \"8px\" }}\r\n                />\r\n              </div>\r\n            ),\r\n            tooltip: \"دانلود\",\r\n            isFreeAction: true,\r\n          },\r\n\r\n\r\n        ]}\r\n      />\r\n      <div>\r\n        <Dialog\r\n          PaperProps={{\r\n            style: { borderRadius: 12,width:\"50%\"}\r\n          }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"xl\"\r\n        >\r\n            {/* <ApiaryAddList /> */}\r\n            <div style={{textAlign:\"center\",background:\"orange\",padding:\"16px\"}}>در حال حاضر برای اضافه کردن کندو از طریق اپلیکیشن اقدام کنید.</div>\r\n        </Dialog>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <div>       \r\n      <Dialog \r\n          \r\n        open={openNutrition}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        {/* <WebHiveSubmit  onClose={handleClose} /> */}\r\n        <NutritionStepper onClose={handleClose}/>\r\n        </Dialog > \r\n       </div>\r\n\r\n\r\n\r\n       <div>\r\n          <Dialog \r\n              \r\n            open={openCatchHoney}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            {/* <WebHiveSubmit  onClose={handleClose} /> */}\r\n            <CatchHoneyStepper onClose={handleClose}/>\r\n            </Dialog > \r\n        </div>\r\n\r\n\r\n        <div>\r\n          <Dialog \r\n              \r\n            open={openCureHive}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n            {/* <WebHiveSubmit  onClose={handleClose} /> */}\r\n            <CureHiveStepper onClose={handleClose}/>\r\n            </Dialog > \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div>\r\n        <Modal\r\n          open={downloadOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"parent-modal-title\"\r\n          aria-describedby=\"parent-modal-description\"\r\n        >\r\n          <Box\r\n            sx={{\r\n              ...style,\r\n\r\n\r\n            }}\r\n            className=\"downloadFile\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              position:\"relative\",\r\n              overflow: \"hidden\"\r\n            }}\r\n          >\r\n            <div  onClick={handleClose} style={{position:\"absolute\",top:\"10px\",right:\"10px\",cursor:\"pointer\"}}><Close/></div>\r\n            <div onClick={downloadPdf} className=\"downloadPdf\">\r\n              <img src=\"/assets/pdf-svgrepo-com (1).svg\" width=\"100px\" height=\"100px\"/>\r\n            </div>\r\n            <div onClick={downloadExcel} className=\"downloadExcel\">\r\n              <img src=\"/assets/excel-svgrepo-com.svg\" width=\"100px\"  height=\"100px\"/>\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n    }\r\n     </>\r\n  );\r\n}\r\n\r\nexport default Hive;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\youtube.js",["998","999"],"import React, { useState } from 'react'\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { register } from '../../../serviceWorker';\r\nimport * as yup from \"yup\";\r\n\r\n    const schema=yup.object().shape({\r\n        files:yup.mixed().test('required',\"لطقا فایل را انتخاب کنید\", value=>{\r\n            return value && value.length;\r\n        })\r\n    })\r\n\r\n    function Youtube(){\r\n        const{\r\n            register,\r\n            handleSubmit,\r\n            watch,\r\n            formState:{errors},\r\n        } = useForm({\r\n            resolver: yupResolver(schema)\r\n        })\r\n \r\n     const [ image , setImage ] = useState('')\r\n\r\n     const convert2base64 = file =>{\r\n         const reader = new FileReader();\r\n         reader.onloadend = () =>{\r\n             setImage(reader.result.toString())\r\n         };\r\n         reader.readAsDataURL(file)\r\n     }\r\n    const onSubmit=(data)=>{\r\n        console.log(\"dataaaa\",data);\r\n        if(data.files.length > 0){\r\n            convert2base64(data.files[0])\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n        {image ? <img src={image} width=\"450\"/>:null}\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {!watch(\"files\")||watch(\"files\").length===0?(\r\n            <div>\r\n                <input type='file'  id=\"fileuploaded\" {...register(\"files\")} style={{cursor:\"pointer\"}}/>\r\n                <label htmlFor='fileuploaded' style={{cursor:\"pointer\"}}>selectFile</label>\r\n            </div>):(<strong>{watch(\"files\")[0].name}</strong>)}\r\n            <button type='submit' className='btn'>\r\n                Submit\r\n            </button>\r\n            {errors.files && <div className='error'>{errors.files.message}</div>}\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Youtube","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\typography\\Typography.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\Dashboard.js",["1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011"],"import React, { Suspense, useState } from \"react\";\r\nimport { Box, Grid, Paper } from \"@material-ui/core\";\r\nimport { styled, useTheme } from \"@material-ui/styles\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport ApexLineChart from \"../charts/components/ApexLineChart\";\r\nimport BigStat2 from \"./components/BigStat/BigStat2\";\r\n// import MapBox from \"../../components/MapBox/MapBox\";\r\nimport Title from \"../../components/Typography/Title/Title\";\r\n\r\nimport { useQuery, gql } from \"@apollo/client\";\r\n// import MapBox from \"../../components/MapBox/MapBox\";\r\nimport Calender from \"../candoProject/Calender/Calender\";\r\nconst MapBox = React.lazy(() => import('../../components/MapBox/MapBox'));\r\n\r\n\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n\r\n  // const Item = styled(Paper)(({ theme }) => ({\r\n  //     backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  //     ...theme.typography.body2,\r\n  //     padding: theme.spacing(1),\r\n  //     textAlign: 'center',\r\n  //     color: theme.palette.text.secondary,\r\n  //   }));\r\n\r\n  return (\r\n    <Grid className={classes.container} >\r\n      <Title title=\"نقشه\" variant=\"h6\" />\r\n\r\n      {/* map */}\r\n\r\n      <Grid item xs={12} className={classes.mapBox}>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <MapBox />\r\n      </Suspense>\r\n      </Grid>\r\n\r\n      {/* second part */}\r\n\r\n      <Grid container spacing={3} className={classes.secondPart}>\r\n\r\n\r\n\r\n        <Grid item xs={12} className={classes.boxes}  >\r\n          <Grid item lg={3}  xs={12} className={classes.CardItem}>\r\n            <Widget\r\n              color=\"secondary\"\r\n              Img=\"/assets/hive-svgrepo-com (-1.svg\"\r\n              title=\"تعداد زنبورستان\"\r\n              upperTitle\r\n              style={{ fontWeight: 600,   borderRadius:\"32px\"}}\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <div style={{margin:\"4px 0\"}}>\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600}}\r\n                  >\r\n                    اکانت خودم\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              </div>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3} xs={12} className={classes.CardItem}>\r\n            <Widget\r\n              color=\"secondary\"\r\n              Img=\"/assets/hive-svgrepo-com (3).svg\"\r\n              title=\"تعداد کندو\"\r\n              upperTitle\r\n              style={{ fontWeight: 600}}\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت خودم\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3}  xs={12} className={classes.CardItem}>\r\n            <Widget\r\n              color=\"secondary\"\r\n              Img=\"/assets/Group 11039.svg\"\r\n              title=\"تعداد بازدید\"\r\n              upperTitle\r\n              style={{ fontWeight: 600}}\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت خودم\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3} xs={12} className={classes.CardItem}>\r\n            <Widget\r\n              color=\"secondary\"\r\n              Img=\"/assets/power-svgrepo-com-1.svg\"\r\n              title=\"میانگین قدرت\"\r\n              upperTitle\r\n              style={{ fontWeight: 600}}\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت خودم\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3}  xs={12} className={classes.CardItem}>\r\n            <Widget\r\n              color=\"secondary\"\r\n              Img=\"/assets/12425575071619191957.svg\"\r\n              title=\"تعداد کارها\"\r\n              upperTitle\r\n              style={{ fontWeight: 600}}\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت خودم\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* \r\n        <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container spacing={2} columns={8}>\r\n        <Grid item xs={3}>\r\n          <Item>xs=8</Item>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Item>xs=8</Item>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Item>xs=8</Item>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Item>xs=8</Item>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Item>xs=8</Item>\r\n        </Grid>\r\n      </Grid>\r\n    </Box> */}\r\n\r\n        {/* <Grid item lg={2} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            color=\"secondary\"\r\n            Img=\"/assets/hive-svgrepo-com (-1.svg\"\r\n            title=\"تعداد کارها\"\r\n            upperTitle\r\n            style={{ fontWeight: 600 }}\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              style={{ marginTop: \"30px\" }}\r\n            >\r\n              <Grid item>\r\n                <Typography\r\n                  variant=\"p\"\r\n                  weight=\"Bold\"\r\n                  noWrap\r\n                  style={{ fontWeight: 600 }}\r\n                >\r\n                  اکانت خودم\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                  1\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              style={{ marginTop: \"30px\" }}\r\n            >\r\n              <Grid item>\r\n                <Typography\r\n                  variant=\"p\"\r\n                  weight=\"Bold\"\r\n                  noWrap\r\n                  style={{ fontWeight: 600 }}\r\n                >\r\n                  اکانت\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                  1\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid> */}\r\n\r\n        {/* calender */}\r\n        <Grid item lg={12} xs={12}>\r\n          <Title title=\"تقویم\" variant=\"h6\" />\r\n          <Calender />\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n        {/* last part */}\r\n        <Grid\r\n          className={classes.Programs}\r\n          item\r\n          lg={12}\r\n          xs={12}\r\n          style={{ display: \"flex\" ,gap:\"32px\"}}\r\n        >\r\n          <Grid className={classes.reminderJob} item lg={12} xs={12}>\r\n            <Title title=\"يادآوری کارها\" variant=\"h6\" />\r\n            {mock.bigState.map((stat, index) => (\r\n              <Grid item lg={12} xs={12} style={{ display: \"flex\" }}>\r\n                <Grid\r\n                  item\r\n                  lg={12}\r\n                  md={12}\r\n                  sm={12}\r\n                  xs={12}\r\n                  key={stat.product}\r\n                  style={{ marginTop: \"12px\" }}\r\n                >\r\n                  <BigStat2 {...stat} />\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <Grid className={classes.workDone} item lg={12} xs={12}>\r\n            <Title title=\"کارهای انجام شده\" variant=\"h6\" />\r\n        \r\n            {mock.DoneJob.map((stat, index) => (\r\n              <Grid item lg={12} xs={12} style={{ display: \"flex\" }}>\r\n                <Grid\r\n                  item\r\n                  lg={12}\r\n                  md={12}\r\n                  sm={12}\r\n                  xs={12}\r\n                  key={index}\r\n                  style={{ marginTop: \"12px\",gap:\"32px\"  }}\r\n                >\r\n                  <BigStat {...stat} />\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n         \r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\Setting\\IOSSwitch.js",["1012","1013","1014","1015","1016","1017","1018","1019","1020","1021"],"import { Avatar, Box, Divider, FormControlLabel, FormGroup, Grid, Modal, Switch, TextField, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\n\r\nimport { withStyles } from '@material-ui/styles'; \r\n\r\nconst IOSSwitch = withStyles((theme) => ({\r\n  \r\n    root: {\r\n      width: 52,\r\n      height: 26,\r\n      padding: 0,\r\n      // margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n  \r\n  \r\n       transform: 'translateX(-9px)',\r\n  \r\n      padding: 1,\r\n      '&$checked': {\r\n        transform: 'translateX(16px)',\r\n        color: theme.palette.common.white,\r\n        '& + $track': {\r\n          backgroundColor: 'blue',\r\n          opacity: 1,\r\n          border: 'none',\r\n        },\r\n      },\r\n      '&$focusVisible $thumb': {\r\n        color: '#52d869',\r\n        border: '6px solid #fff',\r\n  \r\n  \r\n      },\r\n    },\r\n    thumb: {\r\n      width: 24,\r\n      height: 24,\r\n    },\r\n    track: {\r\n      borderRadius: 26 / 2,\r\n      border: `1px solid ${theme.palette.grey[400]}`,\r\n      backgroundColor:\"gray\",\r\n      opacity: 1,\r\n      transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n  }))(({ classes, ...props }) => {\r\n    return (\r\n      <Switch\r\n        focusVisibleClassName={classes.focusVisible}\r\n        disableRipple\r\n        classes={{\r\n          root: classes.root,\r\n          switchBase: classes.switchBase,\r\n          thumb: classes.thumb,\r\n          track: classes.track,\r\n          checked: classes.checked,\r\n        }}\r\n        {...props}\r\n      />\r\n    );\r\n  });\r\n\r\n  export default IOSSwitch","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\Setting\\AddSubmitCode.js",["1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032"],"import { Button, CircularProgress, Divider, Grid, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useUserDispatch } from '../../../context/UserContext';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport useStyles from \"./styles\";\r\n\r\nfunction AddSubmitCode() {\r\n  const classes = useStyles();\r\n  // const history=useHistory()\r\n  const [loginValue, setLoginValue] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n\r\n  // global\r\n  const userDispatch = useUserDispatch();\r\n  // const phoneRegExp = /09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/\r\n  const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/\r\n\r\n  const validationSchema = yup.object().shape({\r\n \r\n    phoneNumber:yup.string().required(\"لطفا کد تایید را وارد کنید\")\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n  const onSubmit = data => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // history.push(\"/login/step2\")\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n    <Typography variant=\"h6\" align=\"center\" margin=\"dense\" color='secondary' className={classes.Title}>\r\n         کد تایید    \r\n    </Typography>\r\n    <Divider  className={classes.Divider}/>\r\n    <Typography variant=\"h6\" align=\"center\" margin=\"dense\" color='primary' className={classes.codeTitle} >\r\n       کد تایید را وارد کنید.    \r\n    </Typography>\r\n    \r\n   <Grid className={classes.main} >\r\n    <TextField\r\n\r\n      style={{direction:\"ltr\"}}\r\n      className={classes.TextField}\r\n      label=\"کد تايید\"\r\n      onChange={e => setLoginValue(e.target.value)}\r\n\r\n      id=\"phoneNumber\"\r\n      name=\"phoneNumber\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      margin=\"normal\"\r\n      size=\"small\"\r\n      {...register('phoneNumber')}\r\n      error={errors.phoneNumber ? true : false}\r\n    />\r\n   <Typography variant=\"inherit\" color=\"textSecondary\" className={classes.errorMessage}>\r\n      {errors.phoneNumber?.message}\r\n    </Typography><br/>\r\n\r\n   \r\n\r\n\r\n\r\n<Button\r\n onClick={() =>        \r\n    console.log(\"click\")\r\n}\r\n    variant=\"contained\"\r\n    className={classes.buttonLogin}\r\n  >\r\n    ثبت\r\n</Button>\r\n </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddSubmitCode","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\User\\EditUser.js",["1033","1034","1035","1036","1037","1038","1039","1040","1041","1042"],"import React, { useRef, useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport PreviewImage from \"./PreviewImage\";\r\n\r\nfunction EditUser() {\r\n  const classes = useStyles();\r\n  const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/;\r\n  const FILE_SIZE = 10000*10000;\r\n\r\n  const validationSchema = yup.object().shape({\r\n    phoneNumber: yup\r\n      .string()\r\n      .matches(\r\n        phoneRegExp,\r\n        \"شماره موبایل را بدون صفر و با حروف انگلیسی وارد کنید\",\r\n      ),\r\n    Username: yup.string().required(\"لطفا نام کاربری خود را وارد کنید\"),\r\n    name: yup.string().required(\"لطفا نام خود را وارد کنید\"),\r\n    family: yup.string().required(\"لطفا نام خانوادگی خود را وارد کنید\"),\r\n    email: yup.string().email(\"لطفا ایمیل معتبر وارد کنید\"),\r\n    // Img:yup\r\n    // .mixed()\r\n    // .required(\"لطفا یک فایل انتخاب کنید\")\r\n    // .test(\r\n    //   \"fileSize\",\r\n    //   \"قایل انتخابی حجم زیادی دارد\",\r\n    //   (value) => {\r\n    //     console.log(\"vlaue\",value?.size)\r\n    //     return value && value?.size <= FILE_SIZE\r\n    //   }\r\n    // ),\r\n  });\r\nconst [data,setData]=useState({\r\n    name:\"شاهین رضوانی\",\r\n    Username:\"shahin2022\",\r\n    phoneNumber:\"09120000000\",\r\n    email:\"shahin1360@gmail.com\"\r\n})\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues:data\r\n  });\r\n  const[selectedFile,setSelectedFile]=useState(null)\r\nconst fileRef=useRef(null)\r\n  const onSubmit = (data) => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // history.push(\"/login/step2\")\r\n  };\r\n\r\n  const fileSelectHandler = (e) => {\r\n     setSelectedFile(e.target.files[0]);\r\n  };\r\n  const fileUploadHandler = () => {};\r\n\r\n  let { path, url } = useRouteMatch();\r\n\r\n  return (\r\n    <Paper>\r\n      <Box px={3} py={2} className={classes.root}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          align=\"center\"\r\n          margin=\"dense\"\r\n          color=\"secondary\"\r\n          className={classes.Title}\r\n        >\r\n          کاربر جدید\r\n        </Typography>\r\n        <Divider className={classes.Divider1} />\r\n\r\n        <Grid item xs={6} sm={6} className={classes.TabHeader}>\r\n          <Grid>\r\n            <NavLink\r\n             exact to={`${url}`}\r\n              className={classes.item}\r\n              activeClassName={classes.activeItem}\r\n            >\r\n              وضعیت\r\n            </NavLink>\r\n          </Grid>\r\n          <Grid>\r\n            <NavLink\r\n              to={`${url}/sound`}\r\n              className={classes.item}\r\n              activeClassName={classes.activeItem}\r\n            >\r\n              صدا و تصویر\r\n            </NavLink>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={1} className={classes.container}>\r\n          <div>\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"name\")}\r\n                  error={errors.name ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.name?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام خانوادگی </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"family\"\r\n                  name=\"family\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"family\")}\r\n                  error={errors.family ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.family?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام کاربری </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"Username\"\r\n                  name=\"Username\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"Username\")}\r\n                  error={errors.Username ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.Username?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>شماره موبایل</label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"phoneNumber\"\r\n                  name=\"phoneNumber\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"phoneNumber\")}\r\n                  error={errors.phoneNumber ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.phoneNumber?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>ایمیل</label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"email\")}\r\n                  error={errors.email ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n         \r\n              >\r\n                {errors.email?.message}\r\n              </Typography>\r\n            </Grid>\r\n          </div>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            sm={6}\r\n            className={classes.uploaderImageBox}\r\n \r\n          >\r\n            <Typography variant=\"p\">آپلود عکس</Typography>\r\n        \r\n          {/* <input type=\"file\"  onChange={fileSelectHandler}  accept=\"image/png, image/jpeg\"   /> */}\r\n        <div className={classes.uploaderImage}>\r\n\r\n            { console.log(\"selectedFile\",selectedFile)}\r\n{  selectedFile ? <PreviewImage file={selectedFile} />:<Avatar src=\"./assets/Mask Group 3.svg\" alt=\"\"   className={classes.PreviewImage}/>\r\n}            <Button\r\n                 variant=\"contained\"\r\n                 component=\"label\"\r\n                 onChange={fileSelectHandler} \r\n                 style={{fontFamily:\"Shabnam\"}}\r\n                 className={classes.EditPhoto}\r\n \r\n             >\r\n               <img src=\"./assets/edit-svgrepo-com.svg\" className={classes.Edit}/>\r\n                ویرایش\r\n                \r\n               <input\r\n                  type=\"file\"\r\n                   hidden\r\n                   accept= \"image/jpg, image/jpeg , image/gif , image/png \"\r\n                   {...register(\"Img\")}\r\n               />\r\n           </Button>\r\n\r\n\r\n\r\n          </div>\r\n            {/* <button onClick={()=>{\r\n              // fileRef.current.onClick()\r\n            }}>آپلود\r\n            </button> */}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box mt={8} style={{ width: \"100%\" }}>\r\n          <div  className={classes.button}>\r\n            <Button variant=\"contained\" className={classes.Button2}>\r\n              انصراف\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.Button1}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              افزودن\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default EditUser;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\User\\styles.js",["1043"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    inputSelect: {\r\n        width: \"250px\",\r\n        display:\"flex\",\r\n        height:\"40px\",\r\n        borderRadius: \"8px\",\r\n        border: \"none\",\r\n        // height: \"40px\",\r\n        fontFamily: \"Shabnam\",\r\n        \"&\t.MuiSelect-outlined\":{\r\n        \r\n          borderRadius: \"8px\",\r\n        },\r\n        \"&\t.MuiSelect-outlined\":{\r\n        \r\n          borderRadius: \"8px\",\r\n        },\r\n    \r\n     \r\n      },\r\n    \r\n    \r\n    \r\n      select: {\r\n        backgroundColor: \"rgb( 244, 244 ,244)\",\r\n        borderRadius: \"10px\",\r\n        \"&:before\": {\r\n          border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n          borderRadius: \"10px\",\r\n        },\r\n        \"&:hover\": {\r\n          border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n          borderRadius: \"10px\",\r\n        },\r\n        \"&:after\": {\r\n          border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n        },\r\n        \"&:not(.Mui-disabled):hover::before\": {\r\n          border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n        },\r\n      },\r\n}));\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\AboutUsMain\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\addQRcode.js",["1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058"],"import {\r\n    Button,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Divider,\r\n    Grid,\r\n    MenuItem,\r\n    OutlinedInput,\r\n    Select,\r\n    TextareaAutosize,\r\n    TextField,\r\n    Typography,\r\n  } from \"@material-ui/core\";\r\n  import React, { useContext, useEffect, useState } from \"react\";\r\n  import useStyles from \"./Style\";\r\n  import { useForm, Controller } from \"react-hook-form\";\r\n  import axios from \"axios\";\r\n  import { yupResolver } from \"@hookform/resolvers/yup\";\r\n  import * as yup from \"yup\";\r\n  import AuthContext from \"../../context/AuthProvider\";\r\n\r\nfunction AddQRcode({handleClose,title,setNewTicket,newTicket}) {\r\n\r\n    const validationSchema = yup.object().shape({\r\n        text: yup\r\n          .string()\r\n          .required(\"لطفا تعداد QRCODE درخواستی را وارد نمایید.\"),\r\n        // title: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n        // text: yup\r\n        //   .string()\r\n        //   .required(\"لطفا درخواست خود را وارد نمایید.\"),\r\n          });\r\n          // const [newTicket , setNewTicket] = useState()\r\n          const token = localStorage.getItem(\"id_token\")\r\n          console.log(\"token\",token);\r\n\r\n        const {\r\n            register,\r\n            control,\r\n            handleSubmit,\r\n            reset,\r\n            formState: { errors },\r\n          } = useForm({\r\n            resolver: yupResolver(validationSchema),\r\n          });\r\n        \r\n          \r\n          const onSubmit = async(data) => {\r\n            // console.log(JSON.stringify(data, null, 2));\r\n            // alert(JSON.stringify(data, null, 2));\r\n        \r\n            const response = await axios.post(\"http://185.202.113.165:3000/api/ticket\", {text:data.text , category:\"requestQRCode\"} , {\r\n              headers: {\r\n                'token': `${token}` \r\n              }\r\n            }).then((res)=>{\r\n              console.log(\"response1\", res.data.data);\r\n              setNewTicket([res.data.data  , ...newTicket])\r\n            })\r\n            reset({\r\n              text: \"\",\r\n        \r\n            })\r\n            console.log(\"response ro see kon to addticket\",response);\r\n            // setData({ data: [...data, data] });\r\n            handleClose()\r\n          };\r\n        \r\n        \r\n          const [data, setData] = useState();\r\n          const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"24px 0px\",\r\n      }}\r\n    >\r\n      <div\r\n      className={classes.titleBox}\r\n\r\n      >\r\n        {title} \r\n      </div>\r\n      <Divider\r\n        style={{ backgroundColor: \"rgb( 244 ,244 ,244)\", marginTop: \"32px\" }}\r\n      />\r\n      <div\r\n      className={classes.box}\r\n\r\n      >\r\n       \r\n          <div\r\n            style={{ display: \"flex\", alignItems: \"center\", marginTop: \"32px\" }}\r\n          >\r\n            {/* <h2\r\n              style={{\r\n                fontSize: \"0.8rem\",\r\n                fontWeight: 600,\r\n                fontFamily: \"Shabnam\",\r\n              }}\r\n            >\r\n              {props.title}\r\n            </h2> */}\r\n    <div\r\n    className={classes.topMain}    >\r\n      <h2\r\n        style={{\r\n          fontSize: \"0.8rem\",\r\n          fontWeight: 600,\r\n          fontFamily: \"Shabnam\",\r\n        }}\r\n      >\r\n        تعداد QR Code درخواستی\r\n      </h2>\r\n      <div className={classes.input} >\r\n      <TextField\r\n       \r\n        id=\"outlined-basic\"\r\n        variant=\"outlined\"\r\n        className={classes.inputQrCode}\r\n\r\n        {...register(\"text\")}\r\n        error={errors.text ? true : false}\r\n      />\r\n        <Typography\r\n            variant=\"inherit\"\r\n            className={classes.errorTitle}\r\n          >\r\n            {errors.text?.message}\r\n        </Typography>\r\n    </div>\r\n    \r\n      </div>\r\n   </div>\r\n        \r\n\r\n        {/* <DialogContent style={{ overflow: \"hidden\", padding: \"0\" }}>\r\n          <div style={{ marginTop: \"32px\" }}>شرح درخواست</div>\r\n          <TextareaAutosize\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              className={classes.TextareaAutosize}\r\n              style={{\r\n                backgroundColor: \"rgb( 244, 244, 244)\",\r\n                width: \"100%\",\r\n                borderRadius: \"8px\",\r\n                border: \"none\",\r\n                height:\"130px\",\r\n                marginTop:\"16px\"\r\n              }}\r\n              {...register(\"text\")}\r\n              error={errors.text ? true : false}\r\n            />\r\n              <Typography\r\n                  variant=\"inherit\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.text?.message}\r\n              </Typography>\r\n\r\n        </DialogContent> */}\r\n      </div>\r\n      <Divider\r\n        style={{ marginTop: \"40px\", backgroundColor: \"rgb( 244 ,244 ,244)\" }}\r\n      />\r\n      <DialogActions className={classes.actionButton}>\r\n        <Button onClick={handleClose} className={classes.cancelButton}>\r\n          انصراف\r\n        </Button>\r\n        <Button    onClick={handleSubmit(onSubmit)} className={classes.addButton}>\r\n          افزودن\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddQRcode","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\FrequentlyQuestions\\Styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportMessage\\Style.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Login\\Style.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Style.js",["1059"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  container:{\r\n    padding: \"32px \",\r\n  },\r\n  TabHeader: {\r\n    backgroundColor: \"rgb( 255 ,242, 212)\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    height: \"60px\",\r\n    boxShadow:\r\n      \" rgba(0, 0, 0, 0.1) 0px 60px 100px -100px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\r\n    color: \"rgb( 227, 156, 0)\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"15px\",\r\n    fontSize: \"18px\",\r\n    marginBottom: \"16px;\",\r\n  },\r\n  item: {\r\n    textDecoration: \"none\",\r\n    color: \"rgb( 227, 156, 0)\",\r\n  },\r\n  rightTopCard_Container:{\r\n    fontWeight: 600,height:\"auto\",background:\"#fff\",padding:\"50px 50px 100px\",borderRadius:\"15px\",\r\n    boxShadow:\"0px 3px 6px 0px rgba(0 ,0 ,0, 0.16)\"\r\n  },\r\n  LeftCard_Container:{\r\n    fontWeight: 600,height:\"auto\",background:\"#fff\",padding:\"20px 30px 100px\",borderRadius:\"15px\",\r\n    boxShadow:\"0px 3px 6px 0px rgba(0 ,0 ,0, 0.16)\"\r\n  },\r\n  diagram_container:{\r\n    fontWeight: 600,height:\"auto\",background:\"#fff\",padding:\"20px 30px\",borderRadius:\"15px\",\r\n    boxShadow:\"0px 3px 6px 0px rgba(0 ,0 ,0, 0.16)\"\r\n  },\r\n  Audio_container:{\r\n    fontWeight: 600,height:\"auto\",background:\"#fff\",padding:\"20px 30px\",borderRadius:\"15px\",\r\n    boxShadow:\"0px 3px 6px 0px rgba(0 ,0 ,0, 0.16)\"\r\n  },\r\n  activeItem: {\r\n    background: \"#fff\",\r\n    padding: \"4px 16px\",\r\n    borderRadius: \"8px\",\r\n    color: \"#000\",\r\n    textDecoration: \"none\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 3px 6px 0px rgba(0,0,0,0.16)\",\r\n  },\r\n  greenHeader: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgb( 33, 192, 99)\",\r\n    boxShadow: \"0px 3px 6px 0px rgba(0, 0,0, 0.16)\",\r\n    padding: theme.spacing(2.5),\r\n    borderRadius: \"15px\",\r\n    color: \"#fff\",\r\n    cursor:\"pointer\"\r\n  },\r\n  cards: {\r\n    boxShadow: \"red 0px 6px 0px,  0px 7px 13px -3px, red 0px -3px 0px inset\",\r\n    borderRadius: \"15px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \"24px 0px \",\r\n\r\n    // paddingTop:theme.spacing(2),\r\n  },\r\n  Soundscards: {\r\n    boxShadow: \" rgba(0, 0, 0, 0.16) 0px 0px 4px 0px\",\r\n    boxSizing: \"border-box\",\r\n    borderRadius: \"15px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \" 20px 50px \",\r\n    height: \"100px\",\r\n    // width:\"50px\"\r\n  },\r\n\r\n  logoHives: {\r\n    width: \"80px\",\r\n    height: \"80px\",\r\n    border: \"8px solid red\",\r\n    borderRadius: \"50%\",\r\n    marginRight: \"16px\",\r\n  },\r\n  cardSubtitleLeft: {\r\n    marginTop: \"8px\",\r\n  },\r\n  cardTitleLeftBottom: {\r\n    fontWeight: 600,\r\n    color: \"rgb( 173 173 173) \",\r\n  },\r\n  cardSubtitleLeftBottom: { fontWeight: 600, marginTop: \"16px\" },\r\n  cardBottomPart: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\"\r\n  },\r\n  midPartAudio: {\r\n    boxShadow: \" rgba(0, 0, 0, 0.16) 0px 0px 4px 0px\",\r\n    boxSizing: \"border-box\",\r\n    borderRadius: \"15px\",\r\n    padding: \"32px\",\r\n  },\r\n  DialogActions: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop: \"16px\",\r\n  },\r\n  DialogBox: {\r\n    width: \"500px\",\r\n    padding: \"40px 20px\",\r\n  },\r\n  ButtonHiveSubmitYes: {\r\n    background: theme.palette.secondary.main,\r\n    fontWeight: 600,\r\n    padding: \"4px 32px\",\r\n    \"&:hover\": {\r\n      background: theme.palette.secondary.main,\r\n    },\r\n  },\r\n  ButtonHiveSubmitNo: {\r\n    background: \"rgb( 244 244 244)\",\r\n    fontWeight: 600,\r\n    padding: \"4px 32px\",\r\n  },\r\n\r\n  ButtonHiveSubmitNoFinish: {\r\n    display: \"none\",\r\n  },\r\n  hideElement:{\r\n    display: \"none\",\r\n  },\r\n  ButtonHiveSubmitFinish: {\r\n    background: \"blue\",\r\n    fontWeight: 600,\r\n    width: \"50%\",\r\n    color: \"#fff\",\r\n    padding: \"4px 48px\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Shabnam\",\r\n    borderRadius: \"12px\",\r\n    \"&:hover\": {\r\n      background: \"blue\",\r\n    },\r\n  },\r\n  mainChartHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgb( 244 ,244 ,244)\",\r\n    padding: \"0 16px\",\r\n    borderRadius: \"12px\",\r\n  },\r\n  select: {\r\n    backgroundColor: \"#fff\",\r\n    width: \"200%\",\r\n    height:\"40px\",\r\n    borderRadius: \"8px\",\r\n    margin: \"8px 0\",\r\n    border:\"none\",\r\n    outline:\"0\",\r\n    boxShadow:\"0px 1px 2px 0px rgba(0,0,0,0.16)\",\r\n    fontWeight:\"600\",fontFamily:\"Shabnam\",\r\n    fontSize:\"0.8rem\",\r\n    \r\n  },\r\n  mainChartHeaderLabels: { display: \"flex\",alignItems: \"center\",   borderRadius: \"12px\",backgroundColor: \"rgb(244 244 244)\", padding: \"12px\",\r\n},\r\n  mainChartHeaderLabel:{display: \"flex\",alignItems: \"center\",justifyContent: \"center\",marginRight: \"16px\"},\r\n  mainChartLegentElement:{marginLeft: \"8px\" },\r\n  leftHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  \r\n  date: {\r\n    margin: \"16px 8px\",\r\n  },\r\n  dot:{\r\n    marginLeft: \"16px\",\r\n    border:\"1px solid red\"\r\n  },\r\n  //////////////////////////////////////\r\n  RadioGroup:{\r\n    display:\"flex\",\r\n    width:\"100%\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    marginTop:\"16px\"\r\n  },\r\n  FormLable:{\r\n    fontWeight:600,\r\n    fontFamily:\"Shabnam\"\r\n  },\r\n  inputSelect: {\r\n    width: \"250px\",\r\n    display:\"flex\",\r\n    height:\"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n\r\n    \"&\t.MuiSelect-outlined\":{\r\n    \r\n      borderRadius: \"10px\",\r\n    },\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      width:\"100%\",\r\n      marginTop:\"8px\"\r\n        },\r\n  },\r\n}));\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\LinaerStepper.js",["1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073"],"import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Grid,\r\n  ButtonGroup,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  MenuItem,\r\n  Select,\r\n  Slider,\r\n  Box,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useForm,\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n} from \"react-hook-form\";\r\nimport { ChangeHistory, Close } from \"@material-ui/icons\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport useStyles from \"./Style\";\r\n\r\n\r\n\r\nconst validationSchema = yup.object().shape({\r\n  eggs: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  Queen: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  Spawning: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n});\r\n\r\n\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"سوال اول\",\r\n    \"سوال دوم\",\r\n    \"سوال سوم\",\r\n    \"سوال چهارم\",\r\n    \"سوال پنجم\",\r\n    \"سوال ششم\",\r\n    \"سوال هفتم\",\r\n    \"سوال هشتم\",\r\n    \"سوال نهم\",\r\n    \"سوال دهم\",\r\n\r\n  ];\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst FirstQuestion = () => {\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <div >\r\n <FormLabel component=\"legend\" className={classes.FormLable}> مشاهده تخم روز</FormLabel>\r\n          <Controller\r\n    \r\n            rules={{ required: true }}\r\n            control={control}\r\n            name=\"eggs\"\r\n            {...register(\"eggs\", { required: \"لطفا یک گزینه را انتخاب کنید\" })}  \r\n            render={({ field }) => {\r\n              return (\r\n                <RadioGroup {...field}\r\n            \r\n          >\r\n             <div className={classes.RadioGroup} >\r\n                  <FormControlLabel\r\n                    value=\"yes\"\r\n                    control={<Radio />}\r\n                    label=\"بله\"\r\n                    \r\n              \r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"no\"     \r\n                    control={<Radio />}\r\n                    label=\"خیر\"\r\n\r\n                  />\r\n                  </div>\r\n                {/* <input label=\"بله\"   value=\"yes\" {...register(\"eggs\", { required: true })} type=\"radio\" value=\"Yes\" />\r\n                <input label=\"خیر\"  value=\"yes\" {...register(\"eggs\", { required: true })} type=\"radio\" value=\"No\" /> */}\r\n                </RadioGroup>\r\n              );\r\n            }}\r\n          />\r\n        <ErrorMessage\r\n        errors={errors}\r\n        name=\"eggs\"\r\n        render={({ message }) => <p style={{color:\"red\"}}>{message}</p>}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst SecondQuestion = () => {\r\n\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n       <FormLabel component=\"legend\" className={classes.FormLable}>مشاهده ملکه</FormLabel>\r\n          <Controller\r\n            rules={{ required: true }}\r\n            control={control}\r\n  \r\n            name=\"Queen\"\r\n         \r\n            render={({ field }) => {\r\n              return (\r\n                <RadioGroup {...field} \r\n            >\r\n                   <div className={classes.RadioGroup} >\r\n                  <FormControlLabel\r\n                    value=\"yes\"\r\n                    control={<Radio />}\r\n                    label=\"بله\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"no\"     \r\n                    control={<Radio />}\r\n                    label=\"خیر\"\r\n                  />\r\n                 </div>\r\n                </RadioGroup>\r\n                \r\n              );\r\n            }}\r\n          />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"Queen\"\r\n        render={({ message }) => <p style={{color:\"red\"}}>{message}</p>}\r\n      />\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst ThirdQuestion = () => {\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n    return (\r\n    <>\r\n<FormLabel component=\"legend\" className={classes.FormLable}>طرز تخم گذاری</FormLabel>\r\n          <Controller\r\n            rules={{ required: true }}\r\n            control={control}\r\n            name=\"Spawning\"\r\n            \r\n            render={({ field }) => {\r\n              return (\r\n                <RadioGroup {...field}\r\n           \r\n                >\r\n                  <div className={classes.RadioGroup} >\r\n                  <FormControlLabel\r\n                    value=\"Regular\"\r\n                    control={<Radio />}\r\n                    label=\"منظم\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"Irregular\"     \r\n                    control={<Radio />}\r\n                    label=\"نامنظم\"\r\n                  />\r\n                 </div>\r\n                </RadioGroup>\r\n              );\r\n            }}\r\n          />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"Spawning\"\r\n        render={({ message }) => <p style={{color:\"red\"}}>{message}</p>}\r\n      />\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst FourthQuestion = () => {\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n<FormLabel component=\"legend\" className={classes.FormLable}>مشاهده شاخون</FormLabel>\r\n          <Controller\r\n            rules={{ required: true }}\r\n            control={control}\r\n            name=\"ViewHorn\"\r\n            {...register(\"ViewHorn\", { required: \"لطفا یک گزینه را انتخاب کنید\" })}  \r\n            render={({ field }) => {\r\n              return (\r\n                <RadioGroup {...field}\r\n            \r\n          >\r\n             <div className={classes.RadioGroup} >\r\n                  <FormControlLabel\r\n                    value=\"yes\"\r\n                    control={<Radio />}\r\n                    label=\"بله\"\r\n              \r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"no\"     \r\n                    control={<Radio />}\r\n                    label=\"خیر\"\r\n\r\n                  />\r\n                  </div>\r\n                {/* <input label=\"بله\"   value=\"yes\" {...register(\"eggs\", { required: true })} type=\"radio\" value=\"Yes\" />\r\n                <input label=\"خیر\"  value=\"yes\" {...register(\"eggs\", { required: true })} type=\"radio\" value=\"No\" /> */}\r\n                </RadioGroup>\r\n              );\r\n            }}\r\n          />\r\n        <ErrorMessage\r\n        errors={errors}\r\n        name=\"ViewHorn\"\r\n        render={({ message }) => <p style={{color:\"red\"}}>{message}</p>}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst FivethQuestion = () => {\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n    <FormLabel component=\"legend\" className={classes.FormLable}>تعداد قاب زنبور</FormLabel>\r\n      <Controller\r\n        control={control}\r\n        {...register(\"NumberbeFrames\", {\r\n          required: \"پر کردن این قسمت الزامی است\"\r\n        })}\r\n        name=\"NumberbeFrames\"\r\n        \r\n        render={({ field }) => (\r\n          <TextField\r\n          type=\"number\"\r\n            id=\"NumberbeFrames\"\r\n            label=\"NumberbeFrames\"\r\n            variant=\"outlined\"\r\n            placeholder=\"تعداد قاب زنبور\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"NumberbeFrames\"\r\n        render={({ message }) => <p>{message}</p>}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SixthQuestion = () => {\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n    <FormLabel component=\"legend\" className={classes.FormLable}>تعداد قاب و تخم شیره</FormLabel>\r\n      <Controller\r\n        control={control}\r\n        {...register(\"FrameAndEggs\", {\r\n          required: \"پر کردن این قسمت الزامی است\"\r\n        })}\r\n        name=\"FrameAndEggs\"\r\n        \r\n        render={({ field }) => (\r\n          <TextField\r\n          type=\"number\"\r\n            id=\"FrameAndEggs\"\r\n            label=\"FrameAndEggs\"\r\n            variant=\"outlined\"\r\n            placeholder=\"تعداد قاب و تخم شیره\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"FrameAndEggs\"\r\n        render={({ message }) => <p>{message}</p>}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SeventhQuestion = () => {\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n    <FormLabel component=\"legend\" className={classes.FormLable}>تعداد قاب عسل</FormLabel>\r\n      <Controller\r\n        control={control}\r\n        {...register(\"NumberHoneyFrames\", {\r\n          required: \"پر کردن این قسمت الزامی است\"\r\n        })}\r\n        name=\"NumberHoneyFrames\"\r\n        \r\n        render={({ field }) => (\r\n          <TextField\r\n            type=\"number\"\r\n            id=\"NumberHoneyFrames\"\r\n            label=\"NumberHoneyFrames\"\r\n            variant=\"outlined\"\r\n            placeholder=\"تعداد قاب عسل\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"NumberHoneyFrames\"\r\n        render={({ message }) => <p>{message}</p>}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst EighthQuestion = () => {\r\n        const options = [\r\n      {\r\n        label: \"آرام بدون دود\",\r\n        value: \"آرام بدون دود\",\r\n      },\r\n      {\r\n        label: \"آرام با دود\",\r\n        value: \"آرام با دود\",\r\n      },\r\n      {\r\n        label: \"خشن بدون دود\",\r\n        value: \"خشن بدون دود\",\r\n      },\r\n      {\r\n        label: \"خشن با دود\",\r\n        value: \"خشن با دود\",\r\n      },\r\n    ];\r\n    const { control ,register, formState: { errors }} = useFormContext();\r\n    const classes=useStyles()\r\n    return( \r\n  <Grid item xs={12} sm={12} className={classes.Select} >\r\n  <div className={classes.input}>\r\n    <label className={classes.FormLable}>رفتار زنبور</label>\r\n    <Select\r\n      className={classes.inputSelect}\r\n      required\r\n      placeholder=\"رفتار زنبور\"\r\n      variant=\"outlined\"\r\n      {...register(\"BeeBehavior\")}\r\n      error={errors.regionVegetation ? true : false}\r\n    >\r\n      {options?.map((option) => {\r\n        return (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label ?? option.value}\r\n          </MenuItem>\r\n        );\r\n      })}\r\n    </Select>\r\n  </div>\r\n  {/* {errors.regionVegetation && <p>{errors.regionVegetation.message}</p>} */}\r\n  <ErrorMessage\r\n        errors={errors}\r\n        name=\"BeeBehavior\"\r\n        render={({ message }) => <p>{message}</p>}\r\n      />\r\n</Grid>\r\n\r\n)}\r\n\r\n\r\nconst NonethQuestion = () => {\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n    <FormLabel component=\"legend\" className={classes.FormLable}>Suspected of disease</FormLabel>\r\n    <Controller\r\n            rules={{ required: true }}\r\n            control={control}\r\n            name=\"SuspectedDisease\"\r\n            \r\n            render={({ field }) => {\r\n              return (\r\n                <RadioGroup {...field}\r\n           \r\n                >\r\n                  <div className={classes.RadioGroup} >\r\n                  <FormControlLabel\r\n                    value=\"Yes\"\r\n                    control={<Radio />}\r\n                    label=\"بله\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"No\"     \r\n                    control={<Radio />}\r\n                    label=\"خیر\"\r\n                  />\r\n                 </div>\r\n                </RadioGroup>\r\n              );\r\n            }}\r\n          />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"SuspectedDisease\"\r\n        render={({ message }) => <p>{message}</p>}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst TenthQuestion = () => {\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: 'خیلی ضعیف',\r\n    },\r\n    {\r\n      value: 25,\r\n      label: 'ضعیف',\r\n    },\r\n    {\r\n      value: 50,\r\n      label: 'متوسط',\r\n    },\r\n    {\r\n      value: 75,\r\n      label: 'قوی',\r\n    },\r\n    {\r\n      value: 100,\r\n      label: 'خیلی قوی',\r\n    },\r\n  ];\r\n  function valuetext(value) {\r\n    return value;\r\n  }\r\n  \r\n  function valueLabelFormat(value) {\r\n    return marks.findIndex((mark) => mark.value === value) + 1;\r\n  }\r\n  \r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n  return( \r\n<Grid item xs={12} sm={12} className={classes.Select} >\r\n<Controller\r\n          control={control}\r\n          name=\"test\"\r\n          defaultValue={50}\r\n          render={({ field: { value, onChange } }) => (\r\n         <Box sx={{ width: 300 }}>\r\n      <Slider\r\n      axis={\"x\"}\r\n        aria-label=\"Restricted values\"\r\n        defaultValue={20}\r\n        valueLabelFormat={valueLabelFormat}\r\n        getAriaValueText={valuetext}\r\n        step={null}\r\n        valueLabelDisplay=\"auto\"\r\n        marks={marks}\r\n        onChange={({ x }) => onChange(x)}\r\n        x={value}\r\n      />\r\n    </Box>\r\n          )}\r\n        />\r\n        <input type=\"submit\" />\r\n{/* {errors.regionVegetation && <p>{errors.regionVegetation.message}</p>} */}\r\n\r\n</Grid>\r\n  );\r\n};\r\n\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <FirstQuestion />;\r\n    case 1:\r\n      return <SecondQuestion />;\r\n    case 2:\r\n      return <ThirdQuestion />;\r\n    case 3:\r\n      return <FourthQuestion />;\r\n    case 4:\r\n      return <FivethQuestion />;\r\n    case 5:\r\n      return <SixthQuestion />;\r\n    case 6:\r\n      return <SeventhQuestion />;\r\n    case 7:\r\n      return <EighthQuestion />;\r\n    case 8:\r\n      return <NonethQuestion />;\r\n    case 9:\r\n      return <TenthQuestion />;\r\n    default:\r\n      return \"unknown step\";\r\n  }\r\n}\r\n\r\n\r\nconst LinaerStepper = (props) => {\r\n  const classes = useStyles();\r\n  const methods = useForm({\r\n    defaultValues: {\r\n      eggs: \"\",\r\n      Queen: \"\",\r\n      Spawning: \"\",\r\n      ViewHorn:\"\",\r\n      NumberbeFrames: \"\",\r\n      FrameAndEggs: \"\",\r\n      NumberHoneyFrames: \"\",\r\n      BeeBehavior: \"\",\r\n      SuspectedDisease: \"\",\r\n      test: \"\",\r\n    },\r\n  });\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skippedSteps, setSkippedSteps] = useState([]);\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1 || step === 2;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skippedSteps.includes(step);\r\n  };\r\n\r\n  const handleNext = (data) => {\r\n    console.log(data);\r\n    if (activeStep == steps.length - 1) {\r\n      fetch(\"https://jsonplaceholder.typicode.com/comments\")\r\n        .then((data) => data.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n          setActiveStep(activeStep + 1);\r\n        });\r\n    } else {\r\n      setActiveStep(activeStep + 1);\r\n      setSkippedSteps(\r\n        skippedSteps.filter((skipItem) => skipItem !== activeStep)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    console.log(\"methods\",methods);\r\n    if (!isStepSkipped(activeStep)) {\r\n      setSkippedSteps([...skippedSteps, activeStep]);\r\n    }\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n  return (\r\n    <div style={{padding:\"16px\" }}>\r\n      <Stepper alternativeLabel activeStep={activeStep} >\r\n        {steps.map((step, index) => {\r\n          const labelProps = {};\r\n          const stepProps = {};\r\n          // if (isStepOptional(index)) {\r\n          //   labelProps.optional = (\r\n          //     <Typography\r\n          //       variant=\"caption\"\r\n          //       align=\"center\"\r\n          //       style={{ display: \"block\" }}\r\n          //     >\r\n          //       optional\r\n          //     </Typography>\r\n          //   );\r\n          // }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step   {...stepProps} key={index}>\r\n              <StepLabel   {...labelProps}>{step}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <DialogContent>\r\n      <Grid  container style={{display:\"flex\",alignItems:\"flex-start\" ,justifyContent:\"space-between\",boxShadow:\"0px 3px 6px 0px rgba( 0, 0 ,0, 0.16)\",padding:\"16px 8px 32px\"}} >\r\n                <Grid item   style={{display:\"flex\",flexDirection:\"column\" }}>\r\n                    <Typography variant='p'>نکات: دقت به احتمال بچه دهی</Typography>\r\n                    <Typography variant='p'>عملیات: باز کردن کندو , بازدید قاب به قاب</Typography>\r\n                </Grid>\r\n                <Grid item onClick={props.onClose} ><Close color='secondary'/></Grid>\r\n      </Grid>\r\n      </DialogContent >\r\n   <Grid style={{marginTop:\"16px\"}}>\r\n      {activeStep === steps.length ? (\r\n        <Typography variant=\"h3\" align=\"center\" color=\"secondary\">\r\n          جواب سوالات با موفقیت ثبت شد!\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit(handleNext)} style={{textAlign:\"center\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n              {getStepContent(activeStep)}\r\n              {/* <Grid style={{width:\"100%\", display:\"flex\",alignContent:\"center\",justifyContent:\"center\"}}>\r\n               {isStepOptional(activeStep) && (\r\n                 <>\r\n                <Button\r\n                  className={classes.button}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={handleSkip}\r\n                  type=\"submit\"\r\n                >\r\n                  قیول\r\n                </Button>\r\n                <Button\r\n                      className={classes.button}\r\n                      variant=\"contained\"      \r\n                      onClick={handleSkip}\r\n                  >\r\n                                  رد کن    \r\n                </Button></>\r\n              )}\r\n              </Grid> */}\r\n            <Grid style={{width:\"100%\", display:\"flex\",alignContent:\"center\",justifyContent:\"space-evenly\",marginTop:\"16px\"}}>\r\n              <Button\r\n                className={classes.button}\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                color=\"secondary\"\r\n              >\r\n                برگشت\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                // onClick={handleNext}\r\n                type=\"submit\"\r\n              >\r\n                {activeStep === steps.length - 1 ? \"پایان\" : \"بعدی\"}\r\n             </Button> \r\n             </Grid> \r\n            </form>\r\n          </FormProvider>\r\n        </>\r\n      )}\r\n    </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinaerStepper;","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Sidebar\\Sidebar.js",["1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092"],"import React, { useState, useEffect } from \"react\";\r\nimport { Divider, Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Menu as MenuIcon,\r\n  LocationCity,\r\n  TableChart,\r\n  Accessibility,\r\n  ArrowForwardRounded,\r\n  DehazeRounded,\r\n\r\n} from \"@material-ui/icons\";\r\n\r\n\r\n\r\n\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport CalenderProject from \"../../pages/candoProject/CalenderProject/CalenderProject\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"خانه\" , link:\"/app/dashboard\", icon:<img src=\"/assets/house.png\"/>},\r\n\r\n  // { id: -4, label: \"زنبورستان\", link: \"/app/user\", icon:<img src=\"/assets/hive-svgrepo-com (1).svg\"/> },\r\n  { id: -4, label: \"زنبورستان\", link: \"/app/ApiaryList\", icon:<img src=\"/assets/hive-svgrepo-com (1).svg\"/> },\r\n\r\n  { id: -3, label: \"پشتیبانی\", link: \"/app/Support\", icon:<img src=\"/assets/customer-support-symbol-svgrepo-com-1.svg\"/>, \r\n  children: [\r\n    { label: \"پیام های من\", link: \"/app/Support\",color:\"secondary\" },\r\n    { label: \"پیام های پشتیبانی\", link: \"/app/SupportMessage\" },\r\n    { label: \"سوالات متداول\", link: \"/app/FrequentlyQuestions\"  },\r\n  ],\r\n},\r\n  {\r\n    id: -2,\r\n    label: \"تازه ها\",\r\n    link: \"/app/new\",\r\n    icon:<img src=\"/assets/megaphone-svgrepo-com.svg\"/>,\r\n  },\r\n  {\r\n    id: -1,\r\n    label: \"آموزش\",\r\n    link: \"/app/Education\",\r\n    icon:<img src=\"/assets/mortarboard-education-svgrepo-com-1.svg\"/>,\r\n  },\r\n  // { id: -5, label: \"محصولات\", link: \"/app/products\", icon:<img src=\"/assets/mortarboard-education-svgrepo-com-1.svg\"/>},\r\n  // {\r\n  //   id: 1,\r\n  //   label: \"کاربران\",\r\n  //   link: \"/app/user\",\r\n  //   icon:<img src=\"/assets/usersSidebar.svg\"/>,\r\n  // },\r\n  // {\r\n  //   id: 3,\r\n  //   label: \"تقویم کاری\",\r\n  //   link: \"/app/JobCalender\",\r\n  //   icon: <NotificationsIcon />,\r\n  // },\r\n\r\n  {\r\n    id: 3,\r\n    label: \"تقویم کاری\",\r\n    link: \"/app/JobCalender\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n\r\n  { id: 10, type: \"divider\"  ,backgroundColor:\"#fff\"},\r\n  {\r\n    id: 5,\r\n    type: 'title',\r\n    label: \"درباره ما\",\r\n    link:\"/app/AboutUs\",\r\n    icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  },\r\n  {\r\n    id: 6,\r\n    type: 'title2',\r\n    label: \"تنظیمات\",\r\n    link: \"/app/setting\",\r\n    icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var layoutState = useLayoutState();\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\nconst [icon,setIcon]=useState(true)\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\nconst changeIcon=()=>{\r\n  setIcon(!icon)\r\n}\r\n  return (\r\n    <Drawer \r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div/>\r\n\r\n\r\n      <List className={classes.sidebarList}>\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}> \r\n          {icon?<ArrowForwardRounded \r\n          onClick={changeIcon}\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n            />:<DehazeRounded style={{color:\"#fff\",marginRight:\"8px\"}}  onClick={changeIcon} classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n          }}/>}\r\n        </IconButton>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n       {icon?<div className={classes.candoTopSidebar}> \r\n          <div className={classes.candoLogo}>\r\n            <img src=\"/assets/Component 24 – 53.svg\" alt=\"عکس زنبور\" width=\"50px\"/>\r\n          </div>\r\n          <div>\r\n            <h1 className={classes.candoTopSidebarTitle}>کندوان پلاس</h1>\r\n            <h2>مدیریت هوشمند زنبورستان</h2>\r\n          </div>\r\n        </div>:null} \r\n        <Divider style={\r\n          {backgroundColor:\"#fff\"}\r\n        }/>,\r\n\r\n\r\n\r\n\r\n        {structure.map((link) => (          \r\n          <SidebarLink     \r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Header\\Header.js",["1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link,\r\n  Avatar\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  KeyboardArrowDown,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\nimport axios from \"axios\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n  const firstName = localStorage.getItem(\"profileName\");\r\n  console.log(\"firstName\",firstName);\r\n  const email = localStorage.getItem(\"email\")\r\n  const lastname = localStorage.getItem(\"lastname\")\r\n\r\n    console.log(\"email\",email);\r\n\r\n//   const token = localStorage.getItem(\"id_token\")\r\n\r\n//   try{\r\n//     const response = axios.get(\"http://185.202.113.165:3000/api/auth/me\",{\r\n//       'token': `${token}` ,\r\n       \r\n//     })\r\n//     console.log(\"response profile\",response.data);\r\n//     console.log(JSON.stringify(response))       \r\n\r\n// }catch (err) {\r\n\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar} >\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\nپنل کاربری\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            {/* <SearchIcon classes={{ root: classes.headerIcon }} /> */}\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* <div className={classes.HeaderBarcode}>\r\n        <img src=\"/assets/qr-code.svg\" width=\"20%\"/>  اسکن بارکد</div> */}\r\n        \r\n     <div className={classes.HeaderLeft}>\r\n      <div className={classes.HeaderLogo} >\r\n        <Avatar\r\n        style={{cursor:\"pointer\"}}\r\n         alt=\"Remy Sharp\" \r\n         src=\"/assets/HeaderProfile.svg\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon style={{cursor:\"pointer\"}} classes={{ root: classes.headerIcon }} />\r\n        </Avatar>\r\n         <KeyboardArrowDown    onClick={e => setProfileMenu(e.currentTarget)}/>\r\n      </div>\r\n         <Typography variant=\"p\" weight=\"medium\" className={classes.logotype}>\r\n          {`سلام ${firstName}!`}\r\n        </Typography>\r\n       </div> \r\n\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n          <Typography variant=\"h6\" weight=\"medium\">\r\n              پنل کاربری\r\n            </Typography>\r\n          \r\n          </div>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"p\" weight=\"medium\">\r\n            نام: {firstName} {lastname}\r\n            </Typography>\r\n          \r\n          </div>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"p\" weight=\"medium\">\r\n            ایمیل: {email}\r\n            </Typography>\r\n          \r\n          </div>\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem> */}\r\n\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"secondary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\nخروج از حساب\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\Setting\\EditPhoneNumber.js",["1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121"],"import { Button, CircularProgress, Divider, Grid, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useUserDispatch } from '../../../context/UserContext';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport useStyles from \"./styles\";\r\n\r\nfunction EditPhoneNumber() {\r\n  const steps = [\r\n    {\r\n      id:\"1\",\r\n     \r\n    },\r\n    {\r\n      id:\"2\",\r\n    },\r\n\r\n  ];\r\n  const classes = useStyles();\r\n  // const history=useHistory()\r\n  const [loginValue, setLoginValue] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = steps.length;\r\n\r\n  // global\r\n  const userDispatch = useUserDispatch();\r\n  // const phoneRegExp = /09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/\r\n  const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n \r\n    phoneNumber:yup.string().required(\"لطفا کد تایید را وارد کنید\")\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n  const onSubmit = data => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // history.push(\"/login/step2\")\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n    <Typography variant=\"h6\" align=\"center\" margin=\"dense\" color='secondary' className={classes.Title}>\r\n       ویرایش شماره تلفن      \r\n    </Typography>\r\n    <Divider className={classes.Divider}/>\r\n    <Typography variant=\"h6\" align=\"center\" margin=\"dense\" color='primary' className={classes.codeTitle}>\r\n       شماره تلفن جدید را وارد کنید    \r\n    </Typography>\r\n    \r\n   <Grid className={classes.main}>\r\n    <TextField\r\n      onClick={steps[activeStep].id == steps.length - 1 ? handleNext : console.log(\"inja code daryaft mishe mire server baraye taeed\")}  className={classes.buttonLogin}\r\n      // style={{direction:\"ltr\"}}\r\n      className={classes.TextField}\r\n      label={steps[activeStep].id == steps.length - 1 ? '    شماره تلفن   ' : '   کد تایید را وارد نمایید'  }\r\n      onChange={e => setLoginValue(e.target.value)}\r\n\r\n      id=\"phoneNumber\"\r\n      name=\"phoneNumber\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      margin=\"normal\"\r\n      size=\"small\"\r\n      {...register('phoneNumber')}\r\n      error={errors.phoneNumber ? true : false}\r\n    />\r\n   <Typography variant=\"inherit\" color=\"textSecondary\" className={classes.errorMessage}>\r\n      {errors.phoneNumber?.message}\r\n    </Typography><br/>\r\n\r\n   \r\n\r\n    <Button onClick={steps[activeStep].id == steps.length - 1 ? onSubmit : console.log(\"inja code daryaft mishe mire server baraye taeed\")}  className={classes.buttonLogin} >{steps[activeStep].id == steps.length - 1 ? 'ثبت' : ' دریافت کد تایید'}</Button>\r\n\r\n{/* \r\n<Button\r\n    \r\n    onClick={handleNext}\r\n    variant=\"contained\"\r\n    className={classes.buttonLogin}\r\n    \r\n  >\r\n  دریافت کد تایید         \r\n</Button> */}\r\n </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditPhoneNumber","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\Setting\\styles.js",["1122","1123"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontFamily: \"Shabnam\",\r\n  },\r\n  container:{\r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-between\",\r\n  },\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n    marginRight: \"25px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"none\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Shabnam\",\r\n\r\n  },\r\n  Title:{\r\n    fontWeight: \"bold\"\r\n  },\r\n  Divider:{\r\n    marginTop:\"16px\"\r\n  },\r\n  codeTitle:{\r\n    fontWeight:\"bold\", margin:\"24px 0px\"\r\n  },\r\n  main:{\r\n    display:\"flex\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    flexDirection:\"column\"\r\n  },\r\n  errorMessage:{\r\ncolor:\"red\"\r\n  },\r\n  // Button1: {\r\n  //   marginTop: \"8px\",\r\n  //   display: \"flex\",\r\n  //   fontFamily: \"Shabnam\",\r\n  //   cursor: \"pointer\",\r\n  //   border: \"none\",\r\n  //   marginTop: \"100px\",\r\n  //   backgroundColor: \"rgb( 255, 255, 255)\",\r\n  //   boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n  //   color: \"#000\",\r\n  //   width: \"16%\",\r\n  //   padding: \"16px 0px\",\r\n  //   borderRadius: \"16px\",\r\n  //   fontWeight: \"bold\",\r\n  //   fontSize: \"16px\",\r\n  //   \"&:hover\": {\r\n  //     backgroundColor: \"#fff\",\r\n  //     borderWidth: 2,\r\n  //   },\r\n  // },\r\n  Button1: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 26 ,115, 233)\",\r\n    color:\"#fff\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"20%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 26 ,115, 233)\",\r\n      borderWidth: 2,\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  Button2: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 255 255 255)\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"20%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 255 255 255)\",\r\n      borderWidth: 2,\r\n      color: \"#000\",\r\n    },\r\n  },\r\n  inputText:{\r\n    display: \"flex\",\r\n    flexDirection:\"column\",\r\n  },\r\n  TextField:{\r\n    width: \"48%\",\r\n    background:\"rgb( 240 240 240)\",\r\n    border:\"none\",\r\n    borderRadius: \"10px\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"orange !important\",\r\n      borderRadius: \"10px\",\r\n      fontWeight:\"bold\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n        borderRadius: \"10px\",\r\n\r\n      },\r\n    },\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems:\"center\",\r\n    marginTop: \"32px\",\r\n    fontFamily: \"Shabnam\",\r\n    border: \"none\",\r\n    \"& label.Mui-focused\": {\r\n      border:\"5px solid red\",\r\n      color: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"2px solid red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\", \r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid red !important\",\r\n        borderRadius: \"10px\",  \r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n\r\n      },\r\n    },\r\n  },\r\n  inputSelect: {\r\n    width: \"250px\",\r\n    display:\"flex\",\r\n    height:\"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n    \"&\t.MuiSelect-outlined\":{\r\n    \r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&\t.MuiSelect-outlined\":{\r\n    \r\n      borderRadius: \"10px\",\r\n    },\r\n\r\n \r\n  },\r\n\r\n\r\n\r\n  select: {\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    borderRadius: \"10px\",\r\n    \"&:before\": {\r\n      border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:hover\": {\r\n      border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:after\": {\r\n      border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n    },\r\n    \"&:not(.Mui-disabled):hover::before\": {\r\n      border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  icon: {\r\n    fill: \"green\"\r\n  },\r\n  text: {\r\n    border: \"none\",backgroundColor: \"#fff\",outline: \"2px solid red\"\r\n  },\r\n  outline: {\r\n    \"&:before\": {\r\n    borderColor: \"red\"\r\n    },\r\n    \"&:after\": {\r\n    borderColor: \"red\"\r\n    }},\r\n    item:{\r\n        textDecoration:\"none\",\r\n        color: \"rgb( 227, 156, 0)\",\r\n     \r\n      },\r\n      activeItem:{\r\n      background:\"#fff\",\r\n      padding:\"4px 16px\",\r\n      borderRadius:\"8px\",\r\n      color:\"#000\",\r\n      textDecoration:\"none\",\r\n      cursor:\"pointer\",\r\n      boxShadow:\"0px 3px 6px 0px rgba(0,0,0,0.16)\"\r\n      \r\n    },\r\n\r\n    TabHeader: {\r\n        backgroundColor: \"rgb( 255 ,242, 212)\",\r\n        margin:\"0 auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        height: \"50px\",\r\n        boxShadow:\r\n          \" rgba(0, 0, 0, 0.1) 0px 60px 100px -100px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\r\n        color: \"rgb( 227, 156, 0)\",\r\n        fontWeight: \"bold\",\r\n        borderRadius: \"15px\",\r\n        fontSize: \"1rem\",\r\n        marginBottom:\"16px;\",\r\n        marginTop:\"16px\"\r\n      },\r\n\r\n      buttonLogin:{\r\n        backgroundColor:\"blue\",\r\n        borderRadius:\"8px\",\r\n        width:\"30%\",\r\n        color:\"#fff\",\r\n        fontFamily:\"Shabnam\",\r\n        fontWeight:\"bold\",\r\n        \"&:hover\":{\r\n          backgroundColor:\"blue\",\r\n        }\r\n      }\r\n}));\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\hooks\\useAxiosPrivate.js",["1124","1125","1126","1127","1128","1129"],"import { SpeakerPhoneSharp } from '@material-ui/icons'\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { useUserDispatch } from '../../context/UserContext'\r\nimport { axiosPrivate } from '../api/axios'\r\nimport AuthContext from '../context/AuthProvider'\r\nimport useAuth from './useAuth'\r\nimport useRefresh from './useRefresh'\r\n\r\nfunction useAxiosPrivate() {\r\n    const userDispatch = useUserDispatch();\r\n\r\n    const refresh = useRefresh()\r\n    // const {Auth} = useAuth()\r\n    const {  auth  } = useContext(AuthContext)\r\n\r\n    useEffect(()=>{\r\n\r\n        const requestIntercept = axiosPrivate.interceptors.request.use(\r\n            \r\n            config => {\r\n                // if (!config.headers['token']) {\r\n                    config.headers['token'] = `${auth.token}` ;\r\n                // }\r\n                return config;\r\n            }, (error) => Promise.reject(error)\r\n        );\r\n\r\n        const responseIntercept = axiosPrivate.interceptors.response.use(\r\n            response => response ,\r\n            async (error) => {\r\n                const prevRequest = error?.config;\r\n                if (error?.response?.status === 401 \r\n                    // && !prevRequest?.sent\r\n                    )\r\n                     {\r\n                    // prevRequest.sent = true;\r\n                    localStorage.removeItem(\"token\");\r\n                    userDispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n                    // history.push(\"/login\");\r\n                    // const newAccessToken = await refresh();\r\n                    // prevRequest.headers['token'] = `${auth.token}` ;\r\n                    // return axiosPrivate(prevRequest);\r\n                }\r\n                return Promise.reject(error);\r\n            }\r\n        );  \r\n\r\n        return ()=>{\r\n            axiosPrivate.interceptors.request.eject(requestIntercept);\r\n            axiosPrivate.interceptors.response.eject(responseIntercept);\r\n        }\r\n    },[auth])\r\n\r\nreturn axiosPrivate\r\n}\r\n\r\nexport default useAxiosPrivate","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Questionnaire\\CureHiveStepper.js",["1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143"],"import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Grid,\r\n  ButtonGroup,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  MenuItem,\r\n  Select,\r\n  Slider,\r\n  Box,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useForm,\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n} from \"react-hook-form\";\r\nimport { ChangeHistory, Close } from \"@material-ui/icons\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport useStyles from \"./Style\";\r\n\r\n\r\n\r\nconst validationSchema = yup.object().shape({\r\n  eggs: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  Queen: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  Spawning: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n\r\n});\r\n\r\n\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"سوال اول\",\r\n    \"سوال دوم\",\r\n\r\n\r\n\r\n  ];\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst FirstQuestion = () => {\r\n    const options = [\r\n        {\r\n          label: \"تیمول\",\r\n          value: \"تیمول\",\r\n        },\r\n        {\r\n          label: \"اسید اگزالیک\",\r\n          value: \"اسید اگزالیک\",\r\n        }\r\n      ];\r\n      const { control ,register, formState: { errors }} = useFormContext();\r\n      const classes=useStyles()\r\n      return( \r\n    <Grid item xs={12} sm={12} className={classes.Select} >\r\n    <div className={classes.input}>\r\n      <label className={classes.FormLable}>دارو مورد استفاده</label>\r\n      <Select\r\n        className={classes.inputSelect}\r\n        required\r\n        placeholder=\"دارو مورد استفاده\"\r\n        variant=\"outlined\"\r\n        {...register(\"Medication\")}\r\n        error={errors.regionVegetation ? true : false}\r\n      >\r\n        {options?.map((option) => {\r\n          return (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label ?? option.value}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </div>\r\n    {/* {errors.regionVegetation && <p>{errors.regionVegetation.message}</p>} */}\r\n    <ErrorMessage\r\n          errors={errors}\r\n          name=\"Medication\"\r\n          render={({ message }) => <p>{message}</p>}\r\n        />\r\n  </Grid>\r\n  \r\n      )};\r\n\r\n\r\nconst SecondQuestion = () => {\r\n\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n    <FormLabel component=\"legend\" className={classes.FormLable}>تعداد قاب زنبور</FormLabel>\r\n      <Controller\r\n        control={control}\r\n        {...register(\"Frame\", {\r\n          required: \"پر کردن این قسمت الزامی است\"\r\n        })}\r\n        name=\"Frame\"\r\n        \r\n        render={({ field }) => (\r\n          <TextField\r\n            type=\"number\"\r\n            id=\"Frame\"\r\n            label=\"تعداد قاب زنبور\"\r\n            variant=\"outlined\"\r\n            placeholder=\"تعداد قاب زنبور\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"Frame\"\r\n        render={({ message }) => <p>{message}</p>}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <FirstQuestion />;\r\n    case 1:\r\n      return <SecondQuestion />;\r\n\r\n    default:\r\n      return \"unknown step\";\r\n  }\r\n}\r\n\r\n\r\nconst CureHiveStepper = (props) => {\r\n  const classes = useStyles();\r\n  const methods = useForm({\r\n    defaultValues: {\r\n        Medication: \"\",\r\n        Frame:\"\"\r\n\r\n    },\r\n  });\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skippedSteps, setSkippedSteps] = useState([]);\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1 || step === 2;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skippedSteps.includes(step);\r\n  };\r\n\r\n  const handleNext = (data) => {\r\n    console.log(data);\r\n    if (activeStep == steps.length - 1) {\r\n      fetch(\"https://jsonplaceholder.typicode.com/comments\")\r\n        .then((data) => data.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n          setActiveStep(activeStep + 1);\r\n        });\r\n    } else {\r\n      setActiveStep(activeStep + 1);\r\n      setSkippedSteps(\r\n        skippedSteps.filter((skipItem) => skipItem !== activeStep)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    console.log(\"methods\",methods);\r\n    if (!isStepSkipped(activeStep)) {\r\n      setSkippedSteps([...skippedSteps, activeStep]);\r\n    }\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n  return (\r\n    <div style={{padding:\"16px\" }}>\r\n      <Stepper alternativeLabel activeStep={activeStep} >\r\n        {steps.map((step, index) => {\r\n          const labelProps = {};\r\n          const stepProps = {};\r\n          // if (isStepOptional(index)) {\r\n          //   labelProps.optional = (\r\n          //     <Typography\r\n          //       variant=\"caption\"\r\n          //       align=\"center\"\r\n          //       style={{ display: \"block\" }}\r\n          //     >\r\n          //       optional\r\n          //     </Typography>\r\n          //   );\r\n          // }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step   {...stepProps} key={index}>\r\n              <StepLabel   {...labelProps}>{step}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <DialogContent>\r\n      <Grid  container style={{display:\"flex\",alignItems:\"flex-start\" ,justifyContent:\"space-between\",boxShadow:\"0px 3px 6px 0px rgba( 0, 0 ,0, 0.16)\",padding:\"16px 8px 32px\"}} >\r\n                <Grid item   style={{display:\"flex\",flexDirection:\"column\" }}>\r\n                <Typography variant='p'>عملیات: باز کردن کندو و دادن دارو برای مبارزه با آکنه</Typography>\r\n                    <Typography variant='p'>نکات: دقت شود که دارو به اندازه استفاده شود و\r\n      برای آشنایی بیشتر لینک ویدیو</Typography>\r\n                </Grid>\r\n                <Grid item onClick={props.onClose} ><Close color='secondary'/></Grid>\r\n      </Grid>\r\n      </DialogContent >\r\n   <Grid style={{marginTop:\"16px\"}}>\r\n      {activeStep === steps.length ? (\r\n        <Typography variant=\"h3\" align=\"center\" color=\"secondary\">\r\n          جواب سوالات با موفقیت ثبت شد!\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit(handleNext)} style={{textAlign:\"center\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n              {getStepContent(activeStep)}\r\n              {/* <Grid style={{width:\"100%\", display:\"flex\",alignContent:\"center\",justifyContent:\"center\"}}>\r\n               {isStepOptional(activeStep) && (\r\n                 <>\r\n                <Button\r\n                  className={classes.button}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={handleSkip}\r\n                  type=\"submit\"\r\n                >\r\n                  قیول\r\n                </Button>\r\n                <Button\r\n                      className={classes.button}\r\n                      variant=\"contained\"      \r\n                      onClick={handleSkip}\r\n                  >\r\n                                  رد کن    \r\n                </Button></>\r\n              )}\r\n              </Grid> */}\r\n            <Grid style={{width:\"100%\", display:\"flex\",alignContent:\"center\",justifyContent:\"space-evenly\",marginTop:\"16px\"}}>\r\n              <Button\r\n                className={classes.button}\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                color=\"secondary\"\r\n              >\r\n                برگشت\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                // onClick={handleNext}\r\n                type=\"submit\"\r\n              >\r\n                {activeStep === steps.length - 1 ? \"پایان\" : \"بعدی\"}\r\n             </Button> \r\n             </Grid> \r\n            </form>\r\n          </FormProvider>\r\n        </>\r\n      )}\r\n    </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CureHiveStepper;","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Questionnaire\\NutritionStepper.js",["1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158"],"import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Grid,\r\n  ButtonGroup,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  MenuItem,\r\n  Select,\r\n  Slider,\r\n  Box,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useForm,\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n} from \"react-hook-form\";\r\nimport { ChangeHistory, Close } from \"@material-ui/icons\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport useStyles from \"./Style\";\r\n\r\n\r\n\r\nconst validationSchema = yup.object().shape({\r\n  eggs: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  Queen: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  Spawning: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n\r\n});\r\n\r\n\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"سوال اول\",\r\n    \"سوال دوم\",\r\n    \"سوال سوم\",\r\n\r\n\r\n  ];\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst FirstQuestion = () => {\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n    <FormLabel component=\"legend\" className={classes.FormLable}>میزان کیک گرده</FormLabel>\r\n      <Controller\r\n        control={control}\r\n        {...register(\"Cake\", {\r\n          required: \"پر کردن این قسمت الزامی است\"\r\n        })}\r\n        name=\"Cake\"\r\n        \r\n        render={({ field }) => (\r\n          <TextField\r\n            type=\"number\"\r\n            id=\"Cake\"\r\n            label=\"میزان کیک گرده\"\r\n            variant=\"outlined\"\r\n            placeholder=\"میزان کیک گرده\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"Cake\"\r\n        render={({ message }) => <p>{message}</p>}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SecondQuestion = () => {\r\n\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n    <FormLabel component=\"legend\" className={classes.FormLable}>آب شکر</FormLabel>\r\n      <Controller\r\n        control={control}\r\n        {...register(\"Sugar\", {\r\n          required: \"پر کردن این قسمت الزامی است\"\r\n        })}\r\n        name=\"Sugar\"\r\n        \r\n        render={({ field }) => (\r\n          <TextField\r\n            type=\"number\"\r\n            id=\"Sugar\"\r\n            label=\"آب شکر\"\r\n            variant=\"outlined\"\r\n            placeholder=\"آب شکر\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"Sugar\"\r\n        render={({ message }) => <p>{message}</p>}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst ThirdQuestion = () => {\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n    return (\r\n        <>\r\n        <FormLabel component=\"legend\" className={classes.FormLable}>خمیر شیرین</FormLabel>\r\n          <Controller\r\n            control={control}\r\n            {...register(\"Sweet\", {\r\n              required: \"پر کردن این قسمت الزامی است\"\r\n            })}\r\n            name=\"Sweet\"\r\n            \r\n            render={({ field }) => (\r\n              <TextField\r\n                type=\"number\"\r\n                id=\"Sweet\"\r\n                label=\"خمیر شیرین\"\r\n                variant=\"outlined\"\r\n                placeholder=\"خمیر شیرین\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n          <ErrorMessage\r\n            errors={errors}\r\n            name=\"Sweet\"\r\n            render={({ message }) => <p>{message}</p>}\r\n          />\r\n        </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <FirstQuestion />;\r\n    case 1:\r\n      return <SecondQuestion />;\r\n    case 2:\r\n      return <ThirdQuestion />;\r\n    default:\r\n      return \"unknown step\";\r\n  }\r\n}\r\n\r\n\r\nconst NutritionStepper = (props) => {\r\n  const classes = useStyles();\r\n  const methods = useForm({\r\n    defaultValues: {\r\n      Cake: \"\",\r\n      Sugar: \"\",\r\n      Sweet: \"\",\r\n    },\r\n  });\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skippedSteps, setSkippedSteps] = useState([]);\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1 || step === 2;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skippedSteps.includes(step);\r\n  };\r\n\r\n  const handleNext = (data) => {\r\n    console.log(data);\r\n    if (activeStep == steps.length - 1) {\r\n      fetch(\"https://jsonplaceholder.typicode.com/comments\")\r\n        .then((data) => data.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n          setActiveStep(activeStep + 1);\r\n        });\r\n    } else {\r\n      setActiveStep(activeStep + 1);\r\n      setSkippedSteps(\r\n        skippedSteps.filter((skipItem) => skipItem !== activeStep)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    console.log(\"methods\",methods);\r\n    if (!isStepSkipped(activeStep)) {\r\n      setSkippedSteps([...skippedSteps, activeStep]);\r\n    }\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n  return (\r\n    <div style={{padding:\"16px\" }}>\r\n      <Stepper alternativeLabel activeStep={activeStep} >\r\n        {steps.map((step, index) => {\r\n          const labelProps = {};\r\n          const stepProps = {};\r\n          // if (isStepOptional(index)) {\r\n          //   labelProps.optional = (\r\n          //     <Typography\r\n          //       variant=\"caption\"\r\n          //       align=\"center\"\r\n          //       style={{ display: \"block\" }}\r\n          //     >\r\n          //       optional\r\n          //     </Typography>\r\n          //   );\r\n          // }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step   {...stepProps} key={index}>\r\n              <StepLabel   {...labelProps}>{step}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <DialogContent>\r\n      <Grid  container style={{display:\"flex\",alignItems:\"flex-start\" ,justifyContent:\"space-between\",boxShadow:\"0px 3px 6px 0px rgba( 0, 0 ,0, 0.16)\",padding:\"16px 8px 32px\"}} >\r\n                <Grid item   style={{display:\"flex\",flexDirection:\"column\" }}>\r\n                    <Typography variant='p'>\"\"</Typography>\r\n                    <Typography variant='p'>عملیات: باز کردن کندو و ریختن تعذیه در جای خودش</Typography>\r\n                </Grid>\r\n                <Grid item onClick={props.onClose} ><Close color='secondary'/></Grid>\r\n      </Grid>\r\n      </DialogContent >\r\n   <Grid style={{marginTop:\"16px\"}}>\r\n      {activeStep === steps.length ? (\r\n        <Typography variant=\"h3\" align=\"center\" color=\"secondary\">\r\n          جواب سوالات با موفقیت ثبت شد!\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit(handleNext)} style={{textAlign:\"center\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n              {getStepContent(activeStep)}\r\n              {/* <Grid style={{width:\"100%\", display:\"flex\",alignContent:\"center\",justifyContent:\"center\"}}>\r\n               {isStepOptional(activeStep) && (\r\n                 <>\r\n                <Button\r\n                  className={classes.button}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={handleSkip}\r\n                  type=\"submit\"\r\n                >\r\n                  قیول\r\n                </Button>\r\n                <Button\r\n                      className={classes.button}\r\n                      variant=\"contained\"      \r\n                      onClick={handleSkip}\r\n                  >\r\n                                  رد کن    \r\n                </Button></>\r\n              )}\r\n              </Grid> */}\r\n            <Grid style={{width:\"100%\", display:\"flex\",alignContent:\"center\",justifyContent:\"space-evenly\",marginTop:\"16px\"}}>\r\n              <Button\r\n                className={classes.button}\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                color=\"secondary\"\r\n              >\r\n                برگشت\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                // onClick={handleNext}\r\n                type=\"submit\"\r\n              >\r\n                {activeStep === steps.length - 1 ? \"پایان\" : \"بعدی\"}\r\n             </Button> \r\n             </Grid> \r\n            </form>\r\n          </FormProvider>\r\n        </>\r\n      )}\r\n    </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NutritionStepper;","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Questionnaire\\CatchHoneyStepper.js",["1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173"],"import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Grid,\r\n  ButtonGroup,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  MenuItem,\r\n  Select,\r\n  Slider,\r\n  Box,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  useForm,\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n} from \"react-hook-form\";\r\nimport { ChangeHistory, Close } from \"@material-ui/icons\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { ErrorMessage } from \"@hookform/error-message\";\r\nimport useStyles from \"./Style\";\r\n\r\n\r\n\r\nconst validationSchema = yup.object().shape({\r\n  eggs: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  Queen: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  Spawning: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n\r\n});\r\n\r\n\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"سوال اول\",\r\n    \"سوال دوم\",\r\n\r\n\r\n\r\n  ];\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst FirstQuestion = () => {\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n    <FormLabel component=\"legend\" className={classes.FormLable}>تعداد برداشت قاب عسل</FormLabel>\r\n      <Controller\r\n        control={control}\r\n        {...register(\"Frame\", {\r\n          required: \"پر کردن این قسمت الزامی است\"\r\n        })}\r\n        name=\"Frame\"\r\n        \r\n        render={({ field }) => (\r\n          <TextField\r\n            type=\"number\"\r\n            id=\"Frame\"\r\n            label=\"تعداد برداشت قاب عسل\"\r\n            variant=\"outlined\"\r\n            placeholder=\"تعداد برداشت قاب عسل\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"Frame\"\r\n        render={({ message }) => <p>{message}</p>}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst SecondQuestion = () => {\r\n\r\n  const { control ,register, formState: { errors }} = useFormContext();\r\n  const classes=useStyles()\r\n\r\n  return (\r\n    <>\r\n    <FormLabel component=\"legend\" className={classes.FormLable}>وزن برداشت عسل</FormLabel>\r\n      <Controller\r\n        control={control}\r\n        {...register(\"Weight\", {\r\n          required: \"پر کردن این قسمت الزامی است\"\r\n        })}\r\n        name=\"Weight\"\r\n        \r\n        render={({ field }) => (\r\n          <TextField\r\n            type=\"number\"\r\n            id=\"Weight\"\r\n            label=\"وزن برداشت عسل\"\r\n            variant=\"outlined\"\r\n            placeholder=\"وزن برداشت عسل\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            {...field}\r\n          />\r\n        )}\r\n      />\r\n      <ErrorMessage\r\n        errors={errors}\r\n        name=\"Weight\"\r\n        render={({ message }) => <p>{message}</p>}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <FirstQuestion />;\r\n    case 1:\r\n      return <SecondQuestion />;\r\n\r\n    default:\r\n      return \"unknown step\";\r\n  }\r\n}\r\n\r\n\r\nconst CatchHoneyStepper = (props) => {\r\n  const classes = useStyles();\r\n  const methods = useForm({\r\n    defaultValues: {\r\n        Frame: \"\",\r\n        Weight:\"\"\r\n\r\n    },\r\n  });\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [skippedSteps, setSkippedSteps] = useState([]);\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1 || step === 2;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skippedSteps.includes(step);\r\n  };\r\n\r\n  const handleNext = (data) => {\r\n    console.log(data);\r\n    if (activeStep == steps.length - 1) {\r\n      fetch(\"https://jsonplaceholder.typicode.com/comments\")\r\n        .then((data) => data.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n          setActiveStep(activeStep + 1);\r\n        });\r\n    } else {\r\n      setActiveStep(activeStep + 1);\r\n      setSkippedSteps(\r\n        skippedSteps.filter((skipItem) => skipItem !== activeStep)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    console.log(\"methods\",methods);\r\n    if (!isStepSkipped(activeStep)) {\r\n      setSkippedSteps([...skippedSteps, activeStep]);\r\n    }\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n  return (\r\n    <div style={{padding:\"16px\" }}>\r\n      <Stepper alternativeLabel activeStep={activeStep} >\r\n        {steps.map((step, index) => {\r\n          const labelProps = {};\r\n          const stepProps = {};\r\n          // if (isStepOptional(index)) {\r\n          //   labelProps.optional = (\r\n          //     <Typography\r\n          //       variant=\"caption\"\r\n          //       align=\"center\"\r\n          //       style={{ display: \"block\" }}\r\n          //     >\r\n          //       optional\r\n          //     </Typography>\r\n          //   );\r\n          // }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step   {...stepProps} key={index}>\r\n              <StepLabel   {...labelProps}>{step}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <DialogContent>\r\n      <Grid  container style={{display:\"flex\",alignItems:\"flex-start\" ,justifyContent:\"space-between\",boxShadow:\"0px 3px 6px 0px rgba( 0, 0 ,0, 0.16)\",padding:\"16px 8px 32px\"}} >\r\n      <Grid item onClick={props.onClose} ><Close color='secondary'/></Grid>\r\n                <Grid item   style={{display:\"flex\",flexDirection:\"column\" }}>\r\n                    <Typography variant='p' >عملیات: باز کردن کندو، بازدید از روی قاب و بررسی چند قاب\r\n      برداشتن طبق عسل و تکاندن زنبورها از روی قاب های عسل</Typography>\r\n                </Grid>\r\n         \r\n      </Grid>\r\n      </DialogContent >\r\n   <Grid style={{marginTop:\"16px\"}}>\r\n      {activeStep === steps.length ? (\r\n        <Typography variant=\"h3\" align=\"center\" color=\"secondary\">\r\n          جواب سوالات با موفقیت ثبت شد!\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit(handleNext)} style={{textAlign:\"center\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n              {getStepContent(activeStep)}\r\n              {/* <Grid style={{width:\"100%\", display:\"flex\",alignContent:\"center\",justifyContent:\"center\"}}>\r\n               {isStepOptional(activeStep) && (\r\n                 <>\r\n                <Button\r\n                  className={classes.button}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={handleSkip}\r\n                  type=\"submit\"\r\n                >\r\n                  قیول\r\n                </Button>\r\n                <Button\r\n                      className={classes.button}\r\n                      variant=\"contained\"      \r\n                      onClick={handleSkip}\r\n                  >\r\n                                  رد کن    \r\n                </Button></>\r\n              )}\r\n              </Grid> */}\r\n            <Grid style={{width:\"100%\", display:\"flex\",alignContent:\"center\",justifyContent:\"space-evenly\",marginTop:\"16px\"}}>\r\n              <Button\r\n                className={classes.button}\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                color=\"secondary\"\r\n              >\r\n                برگشت\r\n              </Button>\r\n\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                // onClick={handleNext}\r\n                type=\"submit\"\r\n              >\r\n                {activeStep === steps.length - 1 ? \"پایان\" : \"بعدی\"}\r\n             </Button> \r\n             </Grid> \r\n            </form>\r\n          </FormProvider>\r\n        </>\r\n      )}\r\n    </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CatchHoneyStepper;","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\charts\\PieCharts.js",["1174","1175","1176"],"\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { PieChart, Pie, Sector } from \"recharts\";\r\n\r\nconst data = [\r\n  { name: \"Group A\", value: 50 }, \r\n  { name: \"Group D\", value: 500 }\r\n];\r\n\r\nconst renderActiveShape = (props) => {\r\n    const RADIAN = Math.PI / 180;\r\n\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n  return (\r\n    <g >\r\n      <text x={cx} y={cy} dy={6} textAnchor=\"middle\" fill={fill} style={{display:\"flex\",alignItems: \"center\",justifyContent: \"center\"}}>\r\n      {` ${(percent * 100).toFixed(2)}%`}\r\n      </text>\r\n      <Sector \r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={percent?\"red\":\"green\"}\r\n      />\r\n      {/* <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill=\"red\"\r\n      /> */}\r\n      {/* <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      /> */}\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{` ${value.toFixed(2)}`}</text>\r\n      {/* <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"red\"\r\n      >\r\n        {` ${(percent * 100)}%`}\r\n      </text> */}\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default function PieCharts() {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const onPieEnter = useCallback(\r\n    (_, index) => {\r\n      setActiveIndex(index);\r\n    },\r\n    [setActiveIndex]\r\n  );\r\n\r\n  return (\r\n    <PieChart width={70} height={70}>\r\n      <Pie\r\n      style={{border: '1px solid red'}}\r\n        activeIndex={activeIndex}\r\n        activeShape={renderActiveShape}\r\n        data={data}\r\n        cx={30}\r\n        cy={25}\r\n        innerRadius={20}\r\n        outerRadius={30}\r\n        fill= \"rgb( 206 206 207)\"\r\n        dataKey=\"value\"\r\n        onMouseEnter={onPieEnter}\r\n      />\r\n    </PieChart>\r\n  );\r\n}\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Widget\\Widget.js",["1177","1178","1179"],"import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport Title from \"../Typography/Title/Title\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  Img,\r\n  color,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} >\r\n      <Paper\r\n        className={classes.paper}\r\n        classes={{\r\n          root: classnames(classes.widgetRoot, {\r\n            [classes.noWidgetShadow]: noWidgetShadow,\r\n          }),\r\n        }}\r\n      >\r\n        <div\r\n          className={classnames(classes.widgetHeader, {\r\n            [classes.noPadding]: noHeaderPadding,\r\n            [headerClass]: headerClass,\r\n          })}\r\n        >\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Grid item style={{ width: \"100%\"}}>\r\n                <Grid item xs={12} container alignItems={\"center\"}>\r\n                 <div > <img src={Img}  className={classes.Img}/></div>\r\n                  <Title title={title} variant=\"p\" />\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Diagram.js",["1180","1181","1182","1183","1184","1185"],"import {\r\n  Grid,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Area,\r\n  ComposedChart,\r\n  Line,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  Tooltip,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport Dot from \"../../../components/Sidebar/components/Dot\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\n// import useStyles from \"../../dashboard/styles\";\r\nimport useStyles from \"./Style\";\r\nimport TableDiagram from \"./tableDiagram\";\r\n\r\nfunction Diagram() {\r\n  const data = [\r\n    {\r\n      day: \"10:52\",\r\n      week: \"شنبه\",\r\n      bardia: 200,\r\n      total2: 200,\r\n      total: {\r\n        monthly: 50,\r\n        weekly: 200,\r\n        daily: 199,\r\n        percent: { value: 3.7, profit: false },\r\n      },\r\n      color: \"primary\",\r\n\r\n      registrations: {\r\n        monthly: { value: 830, profit: false },\r\n        weekly: { value: 215, profit: true },\r\n        daily: { value: \"به موقع\", profit: true },\r\n      },\r\n      bounce: {\r\n        monthly: { value: 4.5, profit: false },\r\n        weekly: { value: 3, profit: true },\r\n        daily: { value: 3.25, profit: true },\r\n      },\r\n    },\r\n    {\r\n      day: \"12:52\",\r\n      week: \"یک شنبه\",\r\n      bardia: 300,\r\n      total2: 300,\r\n      total: {\r\n        monthly: 80,\r\n        weekly: 800,\r\n        daily: 280,\r\n        percent: { value: 3.7, profit: false },\r\n      },\r\n      color: \"primary\",\r\n      registrations: {\r\n        monthly: { value: 830, profit: false },\r\n        weekly: { value: 215, profit: true },\r\n        daily: { value: \"به موقع\", profit: true },\r\n      },\r\n      bounce: {\r\n        monthly: { value: 4.5, profit: false },\r\n        weekly: { value: 3, profit: true },\r\n        daily: { value: 3.25, profit: true },\r\n      },\r\n    },\r\n    {\r\n      day: \"15:52\",\r\n      week: \"دوشنبه\",\r\n      bardia: 800,\r\n      total: {\r\n        monthly: 100,\r\n        weekly: 900,\r\n        daily: 550,\r\n        percent: { value: 3.7, profit: false },\r\n      },\r\n      color: \"primary\",\r\n      registrations: {\r\n        monthly: { value: 830, profit: false },\r\n        weekly: { value: 215, profit: true },\r\n        daily: { value: \"به موقع\", profit: true },\r\n      },\r\n      bounce: {\r\n        monthly: { value: 4.5, profit: false },\r\n        weekly: { value: 3, profit: true },\r\n        daily: { value: 3.25, profit: true },\r\n      },\r\n    },\r\n    // {\r\n    //   name: 'شنبه',\r\n    //   temperature: 400,\r\n    //   humidity: 240,\r\n    //   amt: 240,\r\n    // },\r\n    // {\r\n    //   name: 'یکشنبه',\r\n    //   temperature: 300,\r\n    //   humidity: 139,\r\n    //   amt: 221,\r\n    // },\r\n    // {\r\n    //   name: 'دوشنبه',\r\n    //   temperature: 200,\r\n    //   humidity: 980,\r\n    //   amt: 229,\r\n    // },\r\n    // {\r\n    //   name: 'سه شنبه',\r\n    //   temperature: 278,\r\n    //   humidity: 390,\r\n    //   amt: 200,\r\n    // },\r\n    // {\r\n    //   name: 'چهارشنبه',\r\n    //   temperature: 189,\r\n    //   humidity: 480,\r\n    //   amt: 218,\r\n    // },\r\n    // {\r\n    //   name: 'پنجشنبه',\r\n    //   temperature: 230,\r\n    //   humidity: 380,\r\n    //   amt: 250,\r\n    // },\r\n    // {\r\n    //   name: 'جمعه',\r\n    //   temperature: 349,\r\n    //   humidity: 430,\r\n    //   amt: 210,\r\n    // },\r\n  ];\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n  // const mainChartData = getMainChartData();\r\n  const [date, setDate] = useState(mainChartState);\r\n  // function getMainChartData() {\r\n  //   var resultArray = [];\r\n  //   var tablet = getRandomData(31, 350, 650, 750, 100);\r\n  //   var desktop = getRandomData(31, 150, 750, 750, 150);\r\n  //   var mobile = getRandomData(31, 150, 750, 750, 150);\r\n\r\n  //   for (let i = 0; i < tablet.length; i++) {\r\n  //     resultArray.push({\r\n  //       tablet: tablet[i].value,\r\n  //       desktop: desktop[i].value,\r\n  //       mobile: mobile[i].value,\r\n  //     });\r\n  //   }\r\n\r\n  //   return resultArray;\r\n  // }\r\n  // function getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  //   var array = new Array(length).fill();\r\n  //   let lastValue;\r\n\r\n  //   return array.map((item, index) => {\r\n  //     let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n  //     while (\r\n  //       randomValue <= min ||\r\n  //       randomValue >= max ||\r\n  //       (lastValue && randomValue - lastValue > maxDiff)\r\n  //     ) {\r\n  //       randomValue = Math.floor(Math.random() * multiplier + 1);\r\n  //     }\r\n\r\n  //     lastValue = randomValue;\r\n\r\n  //     return { value: randomValue };\r\n  //   });\r\n  // }\r\n\r\n  var tooltip;\r\n  const CustomizedTooltip = ({ active, payload, label }) => {\r\n    console.log(\"active\", active);\r\n    console.log(\"payload\", payload);\r\n    console.log(\"label\", label);\r\n    console.log(\"tooltip\", tooltip);\r\n    if (!active || !tooltip) return null;\r\n    for (const bar of payload)\r\n      if (bar.dataKey === tooltip)\r\n        return (\r\n          <div\r\n            style={{\r\n              background: bar.color,\r\n              color: \"#fff\",\r\n              padding: \" 8px\",\r\n              borderRadius: \"16px\",\r\n            }}\r\n          >\r\n            {bar.name}\r\n            <br />\r\n            {bar.value.toFixed(2)}\r\n          </div>\r\n        );\r\n    return null;\r\n  };\r\n  const openDatepicker = () => {};\r\n  return (\r\n    <Grid item xs={12} className={classes.diagram_container}>\r\n\r\n          <Grid item xs={12} className={classes.mainChartHeader}>\r\n            {/* <div className={classes.mainChartHeaderLabels}>\r\n              <div className={classes.mainChartHeaderLabel}>\r\n                <Dot color=\"warning\" />\r\n                <Typography className={classes.mainChartLegentElement}>\r\n                  Tablet\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.mainChartHeaderLabel}>\r\n                <Dot color=\"primary\" />\r\n                <Typography className={classes.mainChartLegentElement}>\r\n                  Mobile\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.mainChartHeaderLabel}>\r\n                <Dot color=\"secondary\" />\r\n                <Typography className={classes.mainChartLegentElement}>\r\n                  Desktop\r\n                </Typography>\r\n              </div>\r\n            </div> */}\r\n            <Grid>\r\n              <Select\r\n                className={classes.select}\r\n                value={mainChartState}\r\n                onChange={(e) => setMainChartState(e.target.value)}\r\n                input={\r\n                  <OutlinedInput\r\n                    labelWidth={0}\r\n                    classes={{\r\n                      notchedOutline: classes.mainChartSelectRoot,\r\n                      input: classes.mainChartSelect,\r\n                    }}\r\n                  />\r\n                }\r\n                autoWidth\r\n              >\r\n                <MenuItem value=\"daily\">روزانه</MenuItem>\r\n                <MenuItem value=\"weekly\">هفتگی</MenuItem>\r\n                <MenuItem value=\"monthly\">ماهیانه</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid className={classes.leftHeader}>\r\n              <Grid>\r\n                <Typography\r\n                  variant=\"p\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  style={{ fontFamily: \"Shabnam\",fontSize:\"0.8rem\" }}\r\n                >\r\n                  تاریخ شروع\r\n                </Typography>\r\n              </Grid>\r\n              <Grid>\r\n                <Typography\r\n                  variant=\"p\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  style={{ fontFamily: \"Shabnam\" }}\r\n                  className={classes.date}\r\n                >\r\n                  1400/03/20\r\n                </Typography>\r\n              </Grid>\r\n              <Grid>\r\n                <img\r\n                  src=\"./assets/calender-svgrepo-com.svg\"\r\n                  onClick={openDatepicker}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        {/* Diagram */}\r\n        <ResponsiveContainer width=\"100%\" minWidth={450} height={350}>\r\n          <ComposedChart\r\n            margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n            data={data}\r\n            style={{marginTop:\"16px\"}} \r\n          >\r\n            <YAxis\r\n              tickMargin={32}\r\n              allowDataOverflow\r\n              domain={[0, 100]}\r\n              type=\"number\"\r\n              yAxisId=\"1\"\r\n              stroke=\"blue\"\r\n            />\r\n            <YAxis\r\n              tickMargin={32}\r\n              orientation=\"left\"\r\n              allowDataOverflow\r\n              domain={[0, 1000]}\r\n              type=\"number\"\r\n              stroke=\"red\"\r\n            />\r\n            <YAxis\r\n              tickMargin={32}\r\n              orientation=\"right\"\r\n              allowDataOverflow\r\n              domain={[0, 1000]}\r\n              type=\"number\"\r\n              yAxisId=\"3\"\r\n              stroke=\"green\"\r\n            />\r\n            {/* <Tooltip content={<CustomizedTooltip />} /> */}\r\n\r\n            <XAxis\r\n              // type=\"number\"\r\n              // ticks={[10, 20, 30 ,100]}\r\n              // domain={[10, 100]}\r\n              dataKey=\"week\"\r\n              tickFormatter={[]}\r\n              tick={{ fill: theme.palette.primary.main, fontSize: 14 }}\r\n              stroke={theme.palette.primary.main}\r\n              tickLine={false}\r\n            />\r\n            <Tooltip />\r\n            {/* {data.map((el) => {\r\n              console.log(el.total[\"monthly\"]);\r\n              return (\r\n                <Line\r\n                  type=\"natural\"\r\n                  // label={{ fill: \"red\", marginTop: \"16px\" }}\r\n                  dataKey=\"total[monthly]\"\r\n                  stroke={theme.palette.red.main}\r\n                  strokeWidth={2}\r\n                  name=\"رطوبت\"\r\n                  onMouseOver={() => (tooltip = \"mobile\")}\r\n                  dot={{\r\n                    stroke: theme.palette.primary.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.primary.main,\r\n                  }}\r\n                />\r\n              );\r\n            })} */}\r\n            {console.log(\"data.total\", data.total)}\r\n            {console.log(\"date\", date)}\r\n            <Line\r\n              type=\"natural\"\r\n              // label={{ fill: \"red\", marginTop: \"16px\" }}\r\n              dataKey=\"total[monthly]\"\r\n              stroke={theme.palette.blue.main}\r\n              strokeWidth={2}\r\n              name=\"رطوبت\"\r\n              onMouseOver={() => (tooltip = \"mobile\")}\r\n              dot={{\r\n                stroke: theme.palette.blue.dark,\r\n                strokeWidth: 2,\r\n                fill: theme.palette.blue.main,\r\n              }}\r\n            />\r\n            <Line\r\n              type=\"natural\"\r\n              // dataKey={data.total(mainChartState)}\r\n              stroke={theme.palette.green.main}\r\n              dataKey=\"total[daily]\"\r\n              strokeWidth={2}\r\n              name=\"وزن\"\r\n              onMouseOver={() => (tooltip = \"desktop\")}\r\n              dot={{\r\n                stroke: theme.palette.green.dark,\r\n                strokeWidth: 2,\r\n                fill: \"green\",\r\n              }}\r\n            />\r\n            <Line\r\n              // label\r\n              type=\"natural\"\r\n              dataKey=\"total[weekly]\"\r\n              stroke={theme.palette.red.main}\r\n              strokeWidth={2}\r\n              name=\"دما\"\r\n              onMouseOver={() => (tooltip = \"tablet\")}\r\n              dot={{\r\n                stroke: theme.palette.red.dark,\r\n                strokeWidth: 2,\r\n                fill: theme.palette.red.main,\r\n              }}\r\n            />\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n\r\n        <Grid item xs={12} className={classes.mainChartHeaderLabels}>\r\n          <div className={classes.mainChartHeaderLabel}>\r\n            <Dot color=\"blue\" className={classes.dot} />\r\n\r\n            <Typography className={classes.mainChartLegentElement}>\r\n              رطوبت\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.mainChartHeaderLabel}>\r\n            <Dot color=\"green\" className={classes.dot} />\r\n            <Typography className={classes.mainChartLegentElement}>\r\n              وزن\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.mainChartHeaderLabel}>\r\n            <Dot color=\"red\" className={classes.dot} />\r\n            <Typography className={classes.mainChartLegentElement}>\r\n              دما\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} style={{ borderRadius: \"8px\", marginTop: \"16px\" }}>\r\n          <TableDiagram />\r\n        </Grid>\r\n\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Diagram;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\webHiveSubmit.js",["1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198"],"import { Button, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, MobileStepper, TextField, Typography } from '@material-ui/core'\r\nimport { Close, KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport React, { useState } from 'react'\r\nimport Widget from '../../../components/Widget/Widget'\r\nimport useStyles from \"./Style\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\nfunction WebHiveSubmit(props) {\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] =useState(0);\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm();\r\n  const onSubmit = data => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n  };\r\n  const steps = [\r\n    {\r\n      id: \"1\",\r\n      title: \"مشاهده تخم روز\",\r\n      firstOption: \"بله\",\r\n      secondOption: \"خیر\",\r\n    \r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"مشاهده ملکه\",\r\n      firstOption: \"بله\",\r\n      secondOption: \"خیر\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"طرز تخم گذاری\",\r\n      firstOption: \"منظم\",\r\n      secondOption: \"نامنظم\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      title: \"مشاهده شاخون\",\r\n      firstOption: \"بله\",\r\n      secondOption: \"خیر\",\r\n    },\r\n    {\r\n      id: \"5\",\r\n      title: \"تعداد قاب زنبور\",\r\n    },\r\n    {\r\n      id: \"6\",\r\n      title: \"تعداد قاب و تخم شیره\",\r\n    },\r\n    {\r\n      id: \"7\",\r\n      title: \"تعداد قاب عسل\",\r\n    },\r\n    {\r\n      id: \"8\",\r\n      options: [\r\n        \"آرام بدون دود\",\r\n        \"آرام با دود\",\r\n        \"خشن بدون دود\",\r\n        \"خشن با دود\",\r\n      ],\r\n      title: \"رفتار زنبور\",\r\n    },\r\n    {\r\n      id: \"9\",\r\n      title: \"مشکوک به بیماری\",\r\n      firstOption: \"بله\",\r\n      secondOption: \"خیر\",\r\n    },\r\n    {\r\n      id: \"10\",\r\n      options: [\r\n        \"خیلی ضعیف\",\r\n        \"ضعیف\",\r\n        \"متوسط\",\r\n        \"قوی\",\r\n        \"خیلی قوی\",\r\n      ],\r\n      title: \"قدرت کندو\",\r\n    },\r\n\r\n  ]\r\n  const maxSteps = steps.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n    console.log(\"props\",props)\r\n    const classes = useStyles();\r\n  return (\r\n      <div className={classes.DialogBox}>\r\n    <DialogTitle style={{textAlign:\"center\",fontWeight:600}}>{\"بازدید عمومی\"}</DialogTitle>\r\n    <DialogContent>\r\n      <Grid  container style={{display:\"flex\",alignItems:\"flex-start\" ,justifyContent:\"space-between\",boxShadow:\"0px 3px 6px 0px rgba( 0, 0 ,0, 0.16)\",padding:\"16px 8px 32px\"}} >\r\n                <Grid item   style={{display:\"flex\",flexDirection:\"column\" }}>\r\n                    <Typography variant='p'>نکات: دقت به احتمال بچه دهی</Typography>\r\n                    <Typography variant='p'>عملیات: باز کردن کندو , بازدید قاب به قاب</Typography>\r\n                </Grid>\r\n                <Grid item onClick={props.onClose} ><Close color='secondary'/></Grid>\r\n      </Grid>\r\n    </DialogContent >\r\n   <Grid item  xs={12} style={{display:\"flex\", alignItems:\"center\",justifyContent:\"center\",fontWeight:600,marginTop:\"24px\"}}> <Typography variant='p'> {steps[activeStep].title}</Typography></Grid>\r\n\r\n    <DialogActions className={classes.DialogActions}>\r\n      <TextField \r\n        // onClick={handleNext} \r\n        className={steps[activeStep].id == 5  ? classes.ButtonHiveSubmitNo : classes.hideElement}>\r\n        اضافه \r\n      </TextField>  \r\n      <Button onClick={steps[activeStep].id == steps.length ? props.onClose : handleNext}\r\n        className={steps[activeStep].id == steps.length ? classes.ButtonHiveSubmitFinish : classes.ButtonHiveSubmitYes}\r\n         >\r\n        {steps[activeStep].id == steps.length  ? 'ثبت تمام پاسخ ها' : 'بله'}\r\n      </Button>\r\n      <Button \r\n        onClick={handleNext} \r\n        className={steps[activeStep].id == steps.length  ? classes.ButtonHiveSubmitNoFinish : classes.ButtonHiveSubmitNo}>\r\n        خیر \r\n      </Button>\r\n    </DialogActions>\r\n\r\n    <MobileStepper\r\n      variant=\"dots\"\r\n      style={{}}\r\n      steps={maxSteps}\r\n      position=\"static\"\r\n      activeStep={activeStep}\r\n      sx={{ maxWidth: 400, flexGrow: 1 }}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={handleNext}  disabled={activeStep === maxSteps - 1}>\r\n      \r\n          {theme.direction === 'rtl' ? (\r\n            <KeyboardArrowLeft />\r\n          ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n          {theme.direction === 'rtl' ? (\r\n            <KeyboardArrowRight />\r\n          ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n   \r\n        </Button>\r\n      }\r\n    />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WebHiveSubmit","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\LeftCard.js",["1199"],"import { Avatar, Grid, Typography } from \"@material-ui/core\";\r\nimport { MoreVertOutlined } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from \"./Style\";\r\nfunction LeftCard() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item  xs={12} className={classes.LeftCard_Container}  style={{ height: \"250px\" }}>\r\n\r\n        {/* top */}\r\n        <Grid\r\n          item\r\n          style={{ display: \"flex\" }}\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Grid\r\n            item\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n            style={{ display: \"flex\" }}\r\n          >\r\n            <Avatar\r\n              alt=\"Remy Sharp\"\r\n              src=\"/assets/Group 252.svg\"\r\n              className={classes.logoHives}\r\n            />\r\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <Typography\r\n                variant=\"p\"\r\n                weight=\"Bold\"\r\n                noWrap\r\n                style={{ fontWeight: 600 }}\r\n              >\r\n                کندوی 1-1165793391\r\n              </Typography>\r\n              <Typography\r\n                variant=\"p\"\r\n                weight=\"Bold\"\r\n                noWrap\r\n                className={classes.cardSubtitleLeft}\r\n                style={{ fontWeight: 600, color: \"rgb(173 173 173)\" }}\r\n              >\r\n                تهران - خیابان ازادی\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <MoreVertOutlined variant=\"contained\"  style={{cursor:\"pointer\"}}/>\r\n        </Grid>\r\n\r\n        {/* bottom */}\r\n        \r\n        <Grid\r\n          container\r\n          item\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          style={{ marginTop: \"30px\" }}\r\n        >\r\n          <Grid item className={classes.cardBottomPart}>\r\n            <Typography\r\n              variant=\"p\"\r\n              weight=\"Bold\"\r\n              noWrap\r\n              className={classes.cardTitleLeftBottom}\r\n            >\r\n              زنبورستان\r\n            </Typography>\r\n            <Typography\r\n              variant=\"p\"\r\n              weight=\"Bold\"\r\n              noWrap\r\n              className={classes.cardSubtitleLeftBottom}\r\n            >\r\n              زنبورستان 1\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <div\r\n            style={{\r\n              borderLeft: \"2px solid rgb( 173 173 173)\",\r\n              height: \"50px\",\r\n            }}\r\n          ></div>\r\n\r\n          <Grid item className={classes.cardBottomPart}>\r\n            <Typography\r\n              variant=\"p\"\r\n              weight=\"Bold\"\r\n              noWrap\r\n              className={classes.cardTitleLeftBottom}\r\n            >\r\n              تاریخ ایجاد\r\n            </Typography>\r\n            <Typography\r\n              variant=\"p\"\r\n              weight=\"Bold\"\r\n              noWrap\r\n              className={classes.cardSubtitleLeftBottom}\r\n            >\r\n              1400/01/01\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <div\r\n            style={{\r\n              borderLeft: \"2px solid rgb( 173 173 173)\",\r\n              height: \"50px\",\r\n            }}\r\n          ></div>\r\n\r\n          <Grid item className={classes.cardBottomPart}>\r\n            <Typography\r\n              variant=\"p\"\r\n              weight=\"Bold\"\r\n              noWrap\r\n              className={classes.cardTitleLeftBottom}\r\n            >\r\n              نژاد ملکه\r\n            </Typography>\r\n            <Typography\r\n              variant=\"p\"\r\n              weight=\"Bold\"\r\n              noWrap\r\n              className={classes.cardSubtitleLeftBottom}\r\n            >\r\n              نژاد\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <div\r\n            style={{\r\n              borderLeft: \"2px solid rgb( 173 173 173)\",\r\n              height: \"50px\",\r\n            }}\r\n          ></div>\r\n\r\n          <Grid item className={classes.cardBottomPart}>\r\n            <Typography\r\n              variant=\"p\"\r\n              weight=\"Bold\"\r\n              noWrap\r\n              className={classes.cardTitleLeftBottom}\r\n            >\r\n              نوع کندو\r\n            </Typography>\r\n            <Typography\r\n              variant=\"p\"\r\n              weight=\"Bold\"\r\n              noWrap\r\n              className={classes.cardSubtitleLeftBottom}\r\n            >\r\n              کندو\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default LeftCard;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\styles.js",["1200"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  Loading:{\r\n    height:\"90%\",\r\n    display:\"flex\",\r\n    alignItems:\"center\"  ,\r\n    justifyContent:\"center\"\r\n},\r\n  container:{\r\n    padding: \"32px \",\r\n  },\r\n    inputSelect: {\r\n        width: \"250px\",\r\n        display:\"flex\",\r\n        height:\"40px\",\r\n        borderRadius: \"8px\",\r\n        border: \"none\",\r\n        // height: \"40px\",\r\n        fontFamily: \"Shabnam\",\r\n        \"&\t.MuiSelect-outlined\":{\r\n        \r\n          borderRadius: \"8px\",\r\n        },\r\n        \"&\t.MuiSelect-outlined\":{\r\n        \r\n          borderRadius: \"8px\",\r\n        },\r\n    \r\n     \r\n      },\r\n    \r\n    \r\n    \r\n      select: {\r\n        backgroundColor: \"rgb( 244, 244 ,244)\",\r\n        borderRadius: \"10px\",\r\n        \"&:before\": {\r\n          border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n          borderRadius: \"10px\",\r\n        },\r\n        \"&:hover\": {\r\n          border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n          borderRadius: \"10px\",\r\n        },\r\n        \"&:after\": {\r\n          border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n        },\r\n        \"&:not(.Mui-disabled):hover::before\": {\r\n          border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n        },\r\n      },\r\n}));\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\addTicket.js",["1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212"],"import {\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  TextareaAutosize,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport useStyles from \"./Style\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport AuthContext from \"../../context/AuthProvider\";\r\n\r\nfunction AddTicket({input,handleClose,newTicket,setNewTicket,title,style, setShow}) {\r\n  {\r\n    console.log(input);\r\n  }\r\n  const validationSchema = yup.object().shape({\r\n    // name: yup\r\n    //   .string()\r\n    //   .required(\"لطفا تعداد QRCODE درخواستی را وارد نمایید.\"),\r\n\r\n    category: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    text: yup\r\n      .string()\r\n      .required(\"لطفا درخواست خود را وارد نمایید.\"),\r\n\r\n      });\r\n\r\n\r\n\r\n\r\n  const bardia = localStorage.getItem(\"id_token\")\r\n  console.log(\"bardia\",bardia);\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const options = [\r\n    { label: \"درمان\"       ,           value: \"cure\"          },\r\n    { label: \"تغذیه\"       ,           value: \"nurture\"          },\r\n    { label: \"بازدید\"       ,          value: \"visit\"         },\r\n    { label: \"برداشت عسل\"       ,      value: \"pickHoney\"     },\r\n    { label: \"زنبورستان\"       ,       value: \"apiary\"      },\r\n    { label: \"کندو\"         ,          value: \"hive\"           },\r\n    { label: \"محصولات\"         ,        value: \"products\"         },\r\n    { label: \"ملکه\"       ,            value: \"queen\"           },\r\n    { label: \"رفتار زنبورعسل\"       ,  value: \"honeyBehaviour\" },\r\n    { label: \"ارتباط با برد\"       ,   value: \"boardConnection\"  },\r\n    { label: \"دسترسی ها\"       ,       value: \"accesses\"      },\r\n    { label: \"حساب کاربری\"       ,     value: \"profile\"    },\r\n    { label: \"انتقال\"       ,          value: \"moveHive\"         },\r\n    { label: \"QRCODE\"       ,          value: \"qrCode\"         },\r\n    { label: \"سایر\"       ,            value: \"other\"           },\r\n\r\n\r\n\r\n  ];\r\n  \r\n  const onSubmit = async(data) => {\r\n    // console.log(JSON.stringify(data, null, 2));\r\n    // alert(JSON.stringify(data, null, 2));\r\n     \r\n    const response = await axios.post(\"http://185.202.113.165:3000/api/ticket\", data , {\r\n      headers: {\r\n        'token': `${bardia}` \r\n      }\r\n    }).then((res)=>{\r\n      console.log(\"response1\", res.data.data);\r\n      setNewTicket([res.data.data  , ...newTicket])\r\n      setShow(true)\r\n    })\r\n    console.log(\"response ro see kon to addticket\",response);\r\n    reset({\r\n      text: \"\",\r\n      category:\"\"\r\n    })\r\n    \r\n    // setData({ data: [...data, data] });\r\n    // localStorage.setItem(\"AddTicket\",response.data.data)\r\n    handleClose()\r\n\r\n  };\r\n\r\n  \r\n  const [data, setData] = useState();\r\n  const classes = useStyles();\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"24px 0px\",\r\n\r\n      }}\r\n    >\r\n      <div\r\n      className={classes.titleBox}\r\n\r\n      >\r\n        {title}\r\n      </div>\r\n      <Divider\r\n        style={{ backgroundColor: \"rgb( 244 ,244 ,244)\", marginTop: \"32px\" }}\r\n      />\r\n      <div\r\n      className={classes.box}\r\n\r\n      >\r\n       \r\n          <div\r\n             className={classes.topMain}>\r\n    \r\n            {/* <h2\r\n              style={{\r\n                fontSize: \"0.8rem\",\r\n                fontWeight: 600,\r\n                fontFamily: \"Shabnam\",\r\n              }}\r\n            >\r\n              {title}\r\n            </h2> */}\r\n\r\n            <div>\r\n                 <Grid item xs={12} sm={12} className={classes.Select} >\r\n\r\n                <div className={classes.inputTitle}>\r\n                <label className={classes.label}>  موضوع تیکت  </label>\r\n\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    name=\"category\"\r\n                    {...register(\"category\")}\r\n                    error={errors.category ? true : false}\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem  key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.category && <p>{errors.category.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.category?.message}\r\n                </Typography>\r\n                 </Grid>\r\n                 {/* <Grid item xs={12} sm={12} className={classes.inputText} >\r\n            <div className={classes.inputTitle} >\r\n              <label className={classes.label}>عنوان</label>\r\n              <TextField\r\n                className={classes.TextField}\r\n                required\r\n                id=\"title\"\r\n                name=\"title\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                {...register(\"title\")}\r\n                error={errors.title ? true : false}\r\n              />\r\n            </div>\r\n            <Typography\r\n              variant=\"inherit\"\r\n              color=\"textSecondary\"\r\n              className={classes.errorTitle}\r\n            >\r\n              {errors.title?.message}\r\n            </Typography>\r\n                 </Grid> */}\r\n            </div>\r\n          </div>\r\n        \r\n\r\n        <DialogContent style={{ overflow: \"hidden\", padding: \"0\" }}>\r\n          <div style={{ marginTop: \"32px\" }}>شرح درخواست</div>\r\n          <TextareaAutosize\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              style={{\r\n                backgroundColor: \"rgb( 244, 244, 244)\",\r\n                width: \"100%\",\r\n                borderRadius: \"8px\",\r\n                border: \"none\",\r\n                height:\"130px\",\r\n                marginTop:\"16px\"\r\n              }}\r\n              {...register(\"text\")}\r\n              error={errors.text ? true : false}\r\n            />\r\n              <Typography\r\n                  variant=\"inherit\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.text?.message}\r\n              </Typography>\r\n          {/* <textarea\r\n            id=\"w3review\"\r\n            name=\"w3review\"\r\n            rows=\"4\"\r\n            cols=\"50\"\r\n            style={{\r\n              backgroundColor: \"rgb( 244, 244, 244)\",\r\n              border: \"none\",\r\n              width: \"100%\",\r\n              marginTop: \"8px\",\r\n              height: \"150px\",\r\n              borderRadius: \"12px\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n\r\n          </textarea> */}\r\n        </DialogContent>\r\n      </div>\r\n      <Divider\r\n        style={{ marginTop: \"40px\", backgroundColor: \"rgb( 244 ,244 ,244)\" }}\r\n      />\r\n      <DialogActions className={classes.actionButton}>\r\n        <Button onClick={handleClose} className={classes.cancelButton}>\r\n          انصراف\r\n        </Button>\r\n        <Button  onClick={handleSubmit(onSubmit)} className={classes.addButton}>\r\n          افزودن\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTicket;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Support\\Style.js",["1213"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    body:{\r\nfontFamily: \"Shabnam\"\r\n    },\r\n    \r\ncontainer:{\r\n  padding:\"32px 40px\",\r\n  [theme.breakpoints.down('xs')]: {\r\n\r\n    padding:0,\r\n\r\n},\r\n},\r\n\r\n  Titles: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down('xs')]: {\r\n      display:\"flex\",\r\n      flexDirection:\"column\",\r\n      justifyContent:\"flex-start\",\r\n      alignItems:\"flex-start\"\r\n     },\r\n  },\r\n  Title: {\r\n    fontWeight: 600,\r\n    fontSize: \"1rem\",\r\n\r\n  },\r\n  box:{\r\n    width: \"50vw\",\r\n    padding: \"0 48px\",\r\n    overflowX: \"hidden\",\r\n    overflowY: \"auto\",\r\n    [theme.breakpoints.down('sm')]: {\r\n      width:\"80vw\",\r\n           },\r\n  },\r\n  titleBox:{\r\n    textAlign: \"center\",\r\n    color: \"rgb( 227 ,156, 0)\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: 600,\r\n    fontFamily: \"Shabnam\",\r\n  },\r\n  Time: {\r\n    color: \"rgb( 112 112 112)\",\r\n    fontSize: \"0.8rem\",\r\n    marginLeft: \"8px\",\r\n  },\r\n\r\n  Date: {\r\n    color: \"rgb( 112 112 112)\",\r\n    fontSize: \"0.8rem\",\r\n    marginLeft: \"8px\",\r\n  },\r\n\r\n  Duration: {\r\n    color: \" rgb( 173 173 173)\",\r\n    fontSize: \"0.8rem\",\r\n    [theme.breakpoints.down('xs')]: {\r\n\r\n      marginRight: 0,\r\n  \r\n  },\r\n  },\r\n\r\n  openTicket: {\r\n    marginTop: \"16px\",\r\n    backgroundColor:\"rgb( 190, 215 ,249)\",\r\n    borderRadius:\"8px\",\r\n    width:\"80px\",\r\n    padding:\"4px 0px\",\r\n    textAlign:\"center\",\r\n    color:\"rgb( 26 115 233)\",\r\n    fontWeight:\"bold\"\r\n\r\n  },\r\n  closeTicket:{\r\n    marginTop: \"16px\",\r\n    backgroundColor:\"rgb( 219 219 219)\",\r\n    borderRadius:\"8px\",\r\n    width:\"80px\",\r\n    padding:\"4px 0px\",\r\n    textAlign:\"center\",\r\n    color:\"rgb( 102 103 104)\",\r\n    fontWeight:\"bold\"\r\n  },\r\n  closeTicketAdmin:{\r\n    marginTop: \"16px\",\r\n    backgroundColor:\"rgb( 219 219 219)\",\r\n    borderRadius:\"8px\",\r\n    width:\"80px\",\r\n    padding:\"4px 0px\",\r\n    textAlign:\"center\",\r\n    color:\"rgb( 102 103 104)\",\r\n    fontWeight:\"bold\"\r\n  },\r\n  waitTicket:{\r\n    marginTop: \"16px\",\r\n    backgroundColor:\"rgb( 255 242 212)\",\r\n    borderRadius:\"8px\",\r\n    width:\"80px\",\r\n    padding:\"4px 0px\",\r\n    textAlign:\"center\",\r\n    color:\"rgb( 227 156 0)\",\r\n    fontWeight:\"bold\"\r\n  },\r\n  Button: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: \"48px\",\r\n    [theme.breakpoints.down('xs')]: {\r\n\r\n      display:\"flex\",\r\n      flexDirection:\"column\"\r\n  },\r\n  },\r\n\r\n  button1: {\r\n    background: \"rgb( 255 176 4)\",\r\n    padding: \"8px 16px\",\r\n    color: \"#000\",\r\n    borderRadius: \"8px\",\r\n    fontWeight: 600,\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 3px 6px rgba( 0, 0, 0, 0.2 )\",\r\n    \"&:hover\": {\r\n      background: \"rgb( 255 176 4)\",\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n\r\nwidth:\"100%\"  },\r\n  },\r\n\r\n  button2: {\r\n    background: \"rgb( 255 176 4)\",\r\n    padding: \"8px 16px\",\r\n    color: \"#000\",\r\n    borderRadius: \"8px\",\r\n    fontWeight: 600,\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 3px 6px rgba( 0, 0, 0, 0.2 )\",\r\n    \"&:hover\": {\r\n      background: \"rgb( 255 176 4)\",\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n\r\n      width:\"100%\",marginTop:\"16px\"  },\r\n  },\r\n\r\n  addButton: {\r\n    backgroundColor: \"rgb( 26, 115 ,233)\",\r\n    fontFamily: \"Shabnam\",\r\n    padding: \"8px 24px\",\r\n    boxShadow: \"0px 3px 6px 0px rgba( 0 ,0, 0, 0.16)\",\r\n    color: \"#fff\",\r\n    fontWeight: 600,\r\n    fontSize: \"1rem\",\r\n    borderRadius: \"16px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n        background: \"rgb( 26, 115 ,200)\",\r\n      },\r\n\r\n  },\r\n  cancelButton: {\r\n    backgroundColor: \"#fff\",\r\n    fontFamily: \"Shabnam\",\r\n    padding: \"8px 24px\",\r\n    boxShadow: \"0px 3px 6px 0px rgba( 0 ,0, 0, 0.16)\",\r\n    color: \"#000\",\r\n    fontWeight: 600,\r\n    fontSize: \"1rem\",\r\n    borderRadius: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n\r\n  actionButton: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding:\"32px 48px\"\r\n  },\r\n  input:{\r\n    width: \"200px\",\r\n  },\r\n  Select:{\r\n    width:\"100%\",\r\n    \r\n  },\r\n\r\n  inputSelect: {\r\n    width: \"180px\",\r\n    height:\"40px\",\r\n    marginLeft:\"40px\",\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: \"100%\",\r\n      // marginLeft: \"0px\"\r\n       },\r\n  },\r\n  inputTitle:{\r\n    display:\"flex\",\r\n    flexDirection:\"culomn\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\"\r\n  },\r\n\r\n  errorTitle:{ \r\n    color: \"red\"\r\n  },\r\n  topMain:{\r\n    display: \"flex\", alignItems: \"center\", marginTop: \"16px\" ,\r\n    [theme.breakpoints.down('sm')]: {\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n         width:\"100%\"\r\n          },\r\n  },\r\n  inputQrCode:{\r\n    backgroundColor: \"rgb( 244, 244, 244)\",\r\n    width: \"200px\",\r\n    borderRadius: \"8px\",\r\n    border: \"none\",\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  input:{\r\n    display:\"flex\",flexDirection:\"column\",marginLeft: \"32px\",\r\n    [theme.breakpoints.down('sm')]: {\r\n       width:\"100%\",\r\n       marginLeft: \"0px\"\r\n        },\r\n  },\r\n  Loading:{\r\n    height:\"90%\",\r\n    display:\"flex\",\r\n    alignItems:\"center\"  ,\r\n    justifyContent:\"center\"\r\n},\r\nLoadingMain:{\r\n  height:\"90%\",\r\n  display:\"flex\",\r\n  alignItems:\"center\"  ,\r\n  justifyContent:\"center\",\r\n  marginTop:\"132px\"\r\n}\r\n\r\n}));\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Chart\\Chart.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\RightTopCard.js",["1214","1215","1216","1217","1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from \"./Style\";\r\n\r\nfunction RightTopCard({onClickOpen}) {\r\n  const classes = useStyles();\r\n  const [cards,setCards]=useState([\r\n    {\r\n    title:\"تاریخ بازدید\",\r\n    icon:\"\"\r\n  },\r\n  \r\n\r\n ]\r\n  )\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n<>\r\n\r\n  <Grid\r\n      item\r\n      xs={12}\r\n      className={classes.rightTopCard_Container}\r\n    >\r\n  \r\n\r\n\r\n        <Grid\r\n          item\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          className={classes.greenHeader}\r\n          onClick={onClickOpen}\r\n          \r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"p\"\r\n              weight=\"Bold\"\r\n              noWrap\r\n              style={{ fontWeight: 600 }}\r\n            >\r\n              بازدید فعلی\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n              مهلت تا سه روز آینده\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            marginTop: \"50px\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            \r\n            gap:\"25px\",\r\n\r\n          }}\r\n        >\r\n\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n          \r\n\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                تاریخ بازدید\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                فعالیت کندو\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/web-app.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                قدرت کندو\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/power-svgrepo-com.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            marginTop: \"32px\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            gap:\"25px\",\r\n\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                تعداد قاب\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/production.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                سن کندو\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/arrow-growth-svgrepo-com.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                نوع کندو\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/hive-svgrepo-com (2).svg\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            marginTop: \"32px\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            gap:\"25px\",\r\n\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                تغذیه\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/opening-aperture-svgrepo-com.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                بیماری\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/sickness-svgrepo-com.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                درمان فعلی\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/medicine-svgrepo-com.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            marginTop: \"32px\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            gap:\"25px\",\r\n\r\n            \r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                نوع ملکه\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/Component 24 – 53.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n          \r\n\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                تاریخ بازدید\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            sm={4}\r\n            xs={12}\r\n            color=\"secondary\"\r\n            className={classes.cards}\r\n            style={{\r\n              fontWeight: 600,\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              alignItems: \"flex-start\",\r\n            }}\r\n          >\r\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\r\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                سلامت کندو\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              //   className={classes}\r\n            >\r\n              <img src=\"/assets/Group 11026.svg\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        \r\n</>\r\n\r\n\r\n\r\n      \r\n  </Grid>\r\n\r\n</>\r\n  );\r\n}\r\n\r\nexport default RightTopCard;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\typography\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\mock.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\hooks\\useRefresh.js",["1229"],"import React from 'react'\r\nimport axios from \"../api/axios\"\r\nimport useAuth from './useAuth'\r\nfunction useRefresh() {\r\n\r\n  const { setAuth } = useAuth()\r\n\r\n  const refresh = async()=>{\r\n       const response = await axios.get(\"\",{\r\n           withCredentials:true\r\n\r\n       });\r\n       setAuth(prev => {\r\n           console.log(JSON.stringify(prev));\r\n           console.log(response.data.Token);\r\n           return {\r\n             ...prev , \r\n             Token:response.data.Token\r\n            }\r\n       });\r\n       return response.data.Token\r\n  }\r\n\r\n\r\n  return refresh\r\n}\r\n\r\nexport default useRefresh","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Header\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\hooks\\useAuth.js",["1230"],"import { useContext,  } from \"react\";\r\nimport AuthContext from \"../context/AuthProvider\";\r\n\r\nconst useAuth = () => {\r\n    const { auth } = useContext(AuthContext);\r\n    // useDebugValue(auth, auth => auth?.user ? \"Logged In\" : \"Logged Out\")\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport default useAuth;","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\BigStat2.js",["1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244"],"import React, { useState } from \"react\";\r\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar } from \"recharts\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../../components/Widget\";\r\nimport { Typography } from \"../../../../components/Wrappers\";\r\n\r\nexport default function BigStat2(props) {\r\n  const { product, total, color, registrations, bounce ,icon} = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  // local\r\n  const [value, setValue] = useState(\"daily\");\r\n\r\n  return (\r\n\r\n  \r\n          <Grid container   alignItems=\"center\" justifyContent=\"space-between\" className={classes.container}>\r\n     <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>  \r\n         <img src={icon}/>\r\n      <div style={{marginRight:\"32px\"}}>\r\n        \r\n          <Typography variant=\"h6\">{product}</Typography>\r\n          <div style={{marginTop:\"12px\" ,color:\"rgb( 102, 103, 104)\"}} >\r\n      </div> \r\n          <Typography variant=\"p\"   colorBrightness=\"secondary\" style={{color:\"slateGrey\"}}>\r\n           {registrations[value].value}\r\n          </Typography></div>\r\n    </div>     \r\n    <div style={{display:\"flex\"}\r\n    }>\r\n    <Typography variant=\"p\" style={{color:\"#fff\"}}  className={registrations[value].profit?classes.profitArrow:classes.profitArrowDanger}>{registrations[value].title2}</Typography>\r\n\r\n    \r\n    </div>\r\n          </Grid>\r\n\r\n \r\n  \r\n   \r\n\r\n\r\n\r\n\r\n      \r\n  \r\n  );\r\n}\r\n\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",["1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258"],"import React, { useState } from \"react\";\r\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar } from \"recharts\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../../components/Widget\";\r\nimport { Typography } from \"../../../../components/Wrappers\";\r\nimport Bardia from \"../../../../components/Form/CategoryForm/Bardiaadd\";\r\n\r\nexport default function BigStat(props) {\r\n  const { product, total, color, registrations, bounce } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  // local\r\n  const [value, setValue] = useState(\"daily\");\r\n  return (\r\n\r\n  \r\n          <Grid container   alignItems=\"center\" justifyContent=\"space-between\" className={classes.container}>\r\n   <div>  \r\n          <Typography variant=\"h6\">{product}</Typography>\r\n          <div style={{marginTop:\"12px\" ,color:\"rgb( 102, 103, 104)\"}} >\r\n           <Typography variant=\"p\"   colorBrightness=\"secondary\" style={{color:\"slateGrey\"}}>\r\n           {registrations[value].value}\r\n          </Typography></div>\r\n   </div>     \r\n    <div style={{display:\"flex\"}\r\n    }>\r\n    <Typography variant=\"p\" style={{fontWeight:\"bold\"}}  className={registrations[value].profit?classes.profitArrowGreen:classes.profitArrowDangerRed}>{registrations[value].title2}</Typography>\r\n      \r\n            {/* <Typography variant=\"h6\" className={classnames(classes.profitArrow, {\r\n                [!registrations[value].profit]: classes.profitArrowDanger,\r\n              })}>{console.log(registrations[value].profit)}ss</Typography> */}\r\n    \r\n    </div>\r\n          </Grid>\r\n\r\n  \r\n\r\n\r\n\r\n\r\n      \r\n  \r\n  );\r\n}\r\n\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Calender\\Calender.js",["1259","1260","1261","1262"],"import React, { useState, useEffect } from \"react\";\r\nimport moment from \"jalali-moment\";\r\nimport useStyles from \"./styles\";\r\nimport buildCalender from \"./buildCalender\";\r\nimport \"./Calender.css\";\r\nimport CalenderHeader from \"./CalenderHeader\";\r\nimport dayStyles from \"./dayStyle\";\r\nimport { Divider } from \"@material-ui/core\";\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport 'swiper/swiper-bundle.min.css'\r\nimport 'swiper/swiper.min.css'\r\nimport { ArrowBackIosRounded, ArrowForwardIosRounded } from \"@material-ui/icons\";\r\n\r\nfunction Calender() {\r\n  const classes = useStyles();\r\n  const [calender, setCalender] = useState([]);\r\n  const [value, setValue] = useState(moment());\r\n  console.log(\"value\", value);\r\n\r\n  useEffect(() => {\r\n    setCalender(buildCalender(value));\r\n  }, [value]);\r\n  function prevDay() {\r\n    return value.clone().subtract(1, \"days\");\r\n  }\r\n  function nextDay() {\r\n    return value.clone().add(1, \"days\");\r\n  }\r\n\r\n  //   console.log(\"startDay\", startDay);\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.header}>\r\n        <CalenderHeader value={value} setValue={setValue} />\r\n      </div>\r\n      <Divider />\r\n      <div className={classes.body}>\r\n      {/* <ArrowForwardIosRounded onClick={() => setValue(prevDay())}/> */}\r\n\r\n      <Swiper\r\n   \r\n      spaceBetween={20}\r\n      slidesPerView={7}\r\n      onSlideChange={() => console.log('slide change')}\r\n      onSwiper={(swiper) => console.log(swiper)}\r\n      // scrollbar={{ draggable: true }}\r\n    >\r\n      {  console.log(\"calender\",calender)}\r\n      <div style={{border:\"2px solid red\"}}>\r\n        {calender.map((week) => (\r\n        \r\n          <div className={classes.day} >\r\n            {week.map((day) => (\r\n                <SwiperSlide >\r\n                <div\r\n                className={classes.dayBox}\r\n\r\n                  onClick={() => setValue(day)}\r\n                >\r\n              \r\n                  {/* <div className={classes.day}>{day.format(\"MMMM\").toString()}</div> */}\r\n\r\n                  <div className={classes.day}>\r\n                    {day.format(\"dddd\").toString()}\r\n                  </div>\r\n                  <div\r\n                    className={dayStyles(day, value)}\r\n                    //   className={\r\n                    //     value.isSame(day, \"day\") ? classes.daySelected : classes.day\r\n                    //   }\r\n                  >\r\n                    {day.format(\"D\").toString()}\r\n                  </div>\r\n                </div>\r\n                </SwiperSlide>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        </div>\r\n      </Swiper>\r\n        {/* <ArrowBackIosRounded  onClick={() => setValue(nextDay())}/> */}\r\n\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calender;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\Sidebar\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Questionnaire\\Style.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Widget\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",["1263"],"import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Dot from \"../Dot\";\r\n\r\nexport default function SidebarLink({\r\n  link,\r\n  icon,\r\n  label,\r\n  children,\r\n  location,\r\n  isSidebarOpened,\r\n  nested,\r\n  type,\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [isOpen, setIsOpen] = useState(false);\r\n  var isLinkActive =\r\n    link &&\r\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\r\n\r\n    if (type === \"title\")\r\n    return (\r\n      <div style={{position:\"absolute\",bottom:\"0px\",width:\"100%\",    background:\"rgb( 53 53 53)\"}}>\r\n      \r\n      <ListItem\r\n      button\r\n      component={link && Link}\r\n      to={link}\r\n      className={classes.link}\r\n      classes={{\r\n        root: classnames(classes.linkRoot, {\r\n          [classes.linkActive]: isLinkActive && !nested,\r\n          [classes.linkNested]: nested,\r\n        }),\r\n      }}\r\n      disableRipple\r\n    >\r\n      <ListItemIcon\r\n        className={classnames(classes.linkIcon, {\r\n          [classes.linkIconActive]: isLinkActive,\r\n        })}\r\n      >\r\n        {nested ? <Dot color={isLinkActive && \"#000\"} /> : icon}\r\n     \r\n\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        classes={{\r\n          primary: classnames(classes.linkText, {\r\n            [classes.linkTextActive]: isLinkActive,\r\n            [classes.linkTextHidden]: !isSidebarOpened,\r\n          }),\r\n        }}\r\n        primary={label}\r\n      />\r\n    </ListItem>\r\n      </div>\r\n\r\n      // <Typography\r\n      //   className={classnames(classes.linkText, classes.sectionTitle, {\r\n      //     [classes.linkTextHidden]: !isSidebarOpened,\r\n      //   })}\r\n      // >\r\n      //   {label}\r\n      // </Typography>\r\n    );\r\n    if (type === \"title2\")\r\n    return (\r\n      <div style={{position:\"absolute\",bottom:\"45px\",width:\"100%\" ,   background:\"rgb( 53 53 53)\"}}>\r\n      \r\n      <ListItem\r\n      button\r\n      component={link && Link}\r\n      to={link}\r\n      className={classes.link}\r\n      classes={{\r\n        root: classnames(classes.linkRoot, {\r\n          [classes.linkActive]: isLinkActive && !nested,\r\n          [classes.linkNested]: nested,\r\n        }),\r\n      }}\r\n      disableRipple\r\n    >\r\n      <ListItemIcon\r\n        className={classnames(classes.linkIcon, {\r\n          [classes.linkIconActive]: isLinkActive,\r\n        })}\r\n      >\r\n        {nested ? <Dot color={isLinkActive && \"#000\"} /> : icon}\r\n     \r\n\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        classes={{\r\n          primary: classnames(classes.linkText, {\r\n            [classes.linkTextActive]: isLinkActive,\r\n            [classes.linkTextHidden]: !isSidebarOpened,\r\n          }),\r\n        }}\r\n        primary={label}\r\n      />\r\n    </ListItem>\r\n      </div>\r\n\r\n      // <Typography\r\n      //   className={classnames(classes.linkText, classes.sectionTitle, {\r\n      //     [classes.linkTextHidden]: !isSidebarOpened,\r\n      //   })}\r\n      // >\r\n      //   {label}\r\n      // </Typography>\r\n    );\r\n\r\n  if (type === \"divider\") return <Divider className={classes.divider} />;\r\n\r\n  if (link && link.includes('http')) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <a className={classes.externalLink} href={link}>\r\n\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"secondary\"} /> : icon}\r\n        </ListItemIcon>\r\n\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n        </a>\r\n      </ListItem>\r\n    )\r\n  }\r\n\r\n  \r\n  if (!children)\r\n    return (\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        to={link}\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n\r\n        >\r\n          {/* {nested ? <Dot color={isLinkActive && \"#000\"} /> : icon} */}\r\n          {icon}\r\n\r\n\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        onClick={toggleCollapse}\r\n        className={classes.link}\r\n        to={link}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {icon ? icon : <InboxIcon />}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n      {children && (\r\n        <Collapse\r\n          in={isOpen && isSidebarOpened}\r\n          timeout=\"auto\"\r\n          unmountOnExit\r\n          className={classes.nestedList}\r\n        > \r\n\r\n          <List className={classes.bardia} component=\"div\" disablePadding style={{borderRight:\"2px solid rgb( 227 156 0)\", transform:\"translateX(-50px)\"}}>\r\n\r\n            {children.map(childrenLink => (\r\n              <SidebarLink\r\n                key={childrenLink && childrenLink.link}\r\n                location={location}\r\n                isSidebarOpened={isSidebarOpened}\r\n                classes={classes}\r\n                nested\r\n                {...childrenLink}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\tableDiagram.js",["1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285"],"import MaterialTable from \"material-table\";\r\nimport React from \"react\";\r\nimport { DoneRounded, MinimizeRounded, VisibilityRounded } from \"@material-ui/icons\";\r\nfunction TableDiagram() {\r\n  const rowBackgroundColors = {\r\n    0: \"yellow\", // just for example, remove it if you don't need\r\n    1: \"rgb( 255 ,242, 212)\",\r\n  };\r\n  return (\r\n    <MaterialTable\r\n      columns={[\r\n        {\r\n          title: (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                transform:\"translateX(-12px)\"\r\n              }}\r\n            >\r\n              <p style={{ padding: \"0\" }}>تاریخ</p>\r\n            </div>\r\n          ),\r\n          field: \"date\",\r\n          headerStyle: {\r\n            backgroundColor: \"rgb( 255 ,242, 212)\",\r\n            color: \"#000\",\r\n            fontSize:\"0.6rem\",\r\n            fontWeight:\"600\",\r\n            textAlign:\"center !important\"\r\n          },\r\n          cellStyle: {\r\n            textAlign: \"center\",\r\n            fontSize:\"0.6rem\",\r\n            \r\n        },\r\n        },\r\n        {\r\n          title: (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                transform:\"translateX(-12px)\"\r\n                            }}\r\n            >\r\n              <p style={{ padding: \"0\", margin: \"0\" }}>بازدید</p>\r\n              <div>\r\n                <img src=\"/assets/view-svgrepo-com.svg\" width=\"20px\" />\r\n              </div>\r\n            </div>\r\n          ),\r\n          field: \"visit\",\r\n          // cellStyle: {\r\n          //   backgroundColor: \"red\",\r\n          //   color: \"#FFF\",\r\n          // },\r\n\r\n          headerStyle: {\r\n            backgroundColor: \"rgb( 255 ,242, 212)\",\r\n            color: \"#000\",\r\n            fontSize:\"0.6rem\",\r\n            fontWeight:\"600\",\r\n            textAlign:\"center !important\", \r\n            \r\n          },\r\n          cellStyle: {\r\n            textAlign: \"center\",\r\n            \r\n        },\r\n          render: (row) => (\r\n            <div >\r\n              {row.visit ?<img src=\"/assets/check-svgrepo-com (2).svg\" width=\"16px\" style={{margin: \"0 10px\"}}/>:<img src=\"/assets/minus-svgrepo-com.svg\" width=\"16px\" style={{margin: \"0 10px\"}}/>}\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          title: (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                transform:\"translateX(-12px)\"\r\n              }}\r\n            >\r\n              <p style={{ padding: \"0\", margin: \"0\" }}>تغذیه</p>\r\n              <div>\r\n                <img src=\"/assets/flower-svgrepo-com.svg\" />\r\n              </div>\r\n            </div>\r\n          ),\r\n          field: \"Nutrition\",\r\n          // cellStyle: {\r\n          //   backgroundColor: \"red\",\r\n          //   color: \"#FFF\",\r\n          // },\r\n\r\n          headerStyle: {\r\n            backgroundColor: \"rgb( 255 ,242, 212)\",\r\n            color: \"#000\",\r\n            fontSize:\"0.6rem\",\r\n            fontWeight:\"600\"\r\n          },\r\n          render: (row) => (\r\n            <div>\r\n              {row.Nutrition ?<img src=\"/assets/check-svgrepo-com (2).svg\" width=\"16px\"/>:<img src=\"/assets/minus-svgrepo-com.svg\" width=\"16px\" style={{margin: \"0 10px\"}}/>}\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          title: (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                whiteSpace: \"nowrap\",\r\n                transform:\"translateX(-12px)\"\r\n              }}\r\n            >\r\n              <p style={{ padding: \"0\", margin: \"0\" }}>صدای کندو</p>\r\n              <div>\r\n                <img src=\"/assets/flower-svgrepo-com.svg\" />\r\n              </div>\r\n            </div>\r\n          ),\r\n          field: \" soundOfHive\",\r\n          // cellStyle: {\r\n          //   backgroundColor: \"red\",\r\n          //   color: \"#FFF\",\r\n          // },\r\n\r\n          headerStyle: {\r\n            backgroundColor: \"rgb( 255 ,242, 212)\",\r\n            color: \"#000\",\r\n            fontSize:\"0.6rem\",\r\n            fontWeight:\"600\"\r\n          },\r\n          render: (row) => (\r\n            <div >\r\n              {row.soundOfHive ?<img src=\"/assets/Group 11029.svg\" />:<img src=\"/assets/minus-svgrepo-com.svg\" width=\"16px\" style={{margin: \"0 20px\"}}/>}\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          title: (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\", whiteSpace: \"nowrap\",  transform:\"translateX(-12px)\"\r\n              }}\r\n            >\r\n              <p style={{ padding: \"0\", margin: \"0\" }}>درب</p>\r\n              <div>\r\n                <img src=\"/assets/flower-svgrepo-com.svg\" />\r\n              </div>\r\n            </div>\r\n          ),\r\n          field: \"door\",\r\n          // cellStyle: {\r\n          //   backgroundColor: \"red\",\r\n          //   color: \"#FFF\",\r\n          // },\r\n\r\n          headerStyle: {\r\n            backgroundColor: \"rgb( 255 ,242, 212)\",\r\n            color: \"#000\",\r\n            fontSize:\"0.6rem\",\r\n            fontWeight:\"600\"\r\n          },\r\n          render: (row) => (\r\n            <div >\r\n              {row.door ?<img src=\"/assets/check-svgrepo-com (2).svg\" width=\"16px\"/>:<img src=\"/assets/minus-svgrepo-com.svg\" width=\"16px\" style={{margin: \"0 10px\"}} />}\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          title: (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\", whiteSpace: \"nowrap\",\r\n                transform:\"translateX(-12px)\"\r\n              }}\r\n            >\r\n              <p style={{ padding: \"0\", margin: \"0\" }}>تصویر</p>\r\n              <div>\r\n                <img src=\"/assets/picture-svgrepo-com (1).svg\" width=\"16px\"/>\r\n              </div>\r\n            </div>\r\n          ),\r\n          field: \"picture\",\r\n          // cellStyle: {\r\n          //   backgroundColor: \"red\",\r\n          //   color: \"#FFF\",\r\n          // },\r\n\r\n          headerStyle: {\r\n            backgroundColor: \"rgb( 255 ,242, 212)\",\r\n            color: \"#000\",\r\n            fontSize:\"0.6rem\",\r\n            fontWeight:\"600\"\r\n          },\r\n          render: (row) => (\r\n            <div >\r\n              {row.picture ?<img src=\"/assets/Group 11030.svg\" />:<img src=\"/assets/minus-svgrepo-com.svg\" width=\"16px\" style={{margin: \"0 10px\"}}  />}\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          title: (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                transform:\"translateX(-12px)\"\r\n              }}\r\n            >\r\n              <p style={{ padding: \"0\", margin: \"0\" }}>یادداشت صوتی</p>\r\n\r\n            </div>\r\n          ),\r\n          field: \"voiceNotes\",\r\n          cellStyle: {\r\n            // backgroundColor: \"red\",\r\n            // color: \"#FFF\",\r\n          },\r\n\r\n          headerStyle: {\r\n            backgroundColor: \"rgb( 255 ,242, 212)\",\r\n            color: \"#000\",\r\n            fontSize:\"0.6rem\",\r\n            fontWeight:\"600\"\r\n          },\r\n          render: (row) => (\r\n            <div >\r\n              {row.voiceNotes ?<img src=\"/assets/Group 11029.svg\" />:<img src=\"/assets/check-svgrepo-com (2).svg\" width=\"16px\" style={{margin: \"0 10px\"}}/>}\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          title: (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                transform:\"translateX(-12px)\"\r\n              }}\r\n            >\r\n              <p style={{ padding: \"0\", margin: \"0\" }}>یادداشت متنی</p>\r\n\r\n            </div>\r\n          ),\r\n          field: \"textNotes\",\r\n          // cellStyle: {\r\n          //   backgroundColor: \"red\",\r\n          //   color: \"#FFF\",\r\n          // },\r\n\r\n          headerStyle: {\r\n            backgroundColor: \"rgb( 255 ,242, 212)\",\r\n            color: \"#000\",\r\n            fontSize:\"0.6rem\",\r\n            fontWeight:\"600\"\r\n          },\r\n          render: (row) => (\r\n            <div >\r\n              {row.textNotes ?<img src=\"/assets/note-svgrepo-com.svg\" />:<img src=\"/assets/check-svgrepo-com (2).svg\" width=\"16px\" style={{margin: \"0 10px\"}}/>}\r\n            </div>\r\n          ),\r\n        },\r\n      ]}\r\n      data={[\r\n        {\r\n          date: \"1400/01/11\",\r\n          visit: 1,\r\n          Nutrition: 0,\r\n          soundOfHive: 0,\r\n          door: 1,\r\n          picture: 0,\r\n          voiceNotes: 1,\r\n          textNotes: 1,\r\n          \r\n        },\r\n        {\r\n          date: \"1400/01/12\",\r\n          visit: 0,\r\n          Nutrition: 0,\r\n          soundOfHive: 0,\r\n          door: 1,\r\n          picture: 1,\r\n          voiceNotes: 0,\r\n          textNotes: 0,\r\n          priority: 1,\r\n        },\r\n      ]}\r\n      options={{\r\n        headerStyle: {\r\n          backgroundColor: \"#01579b\",\r\n          color: \"#FFF\",\r\n          fontSize:\"0.6rem\",\r\n          fontWeight:\"600\"\r\n        },\r\n        toolbar: false,\r\n        paging: false,\r\n        rowStyle: (rowData) => {\r\n          console.log(rowData);\r\n          return {\r\n            fontFamily: \"Mulish-Regular\",\r\n            backgroundColor: rowBackgroundColors[rowData.priority] ?? \"#fff\",\r\n          };\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default TableDiagram;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Calender\\buildCalender.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Calender\\dayStyle.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Form\\CategoryForm\\Bardiaadd.js",["1286","1287","1288"],"import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Formik, useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  Button: {\r\n    marginTop: \"8px\",\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\nconst FILE_SIZE = 10000*10000;\r\n    const SUPPORTED_FORMATS = [\r\n      \"image/jpg\",\r\n      \"image/jpeg\",\r\n      \"image/gif\",\r\n      \"image/png\"\r\n    ];\r\n    const validationSchema = yup.object({\r\n  name:yup\r\n  .string('Enter your name')\r\n  .min(2, 'name should be of minimum 2 characters length')\r\n  .required('name is required'),\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n  videoFile: yup\r\n    .mixed()\r\n    .required(\"لطفا یک فایل انتخاب کنید\")\r\n    .test(\r\n      \"fileFormat\",\r\n      \"این فرمت از فایل پشتیبانی نمیشود\",\r\n      value => value && SUPPORTED_FORMATS.includes(value?.type)\r\n    )\r\n\r\n    .test(\r\n      \"fileSize\",\r\n      \"قایل انتخابی حجم زیادی دارد\",\r\n      (value) => {\r\n        console.log(\"vlaue\",value?.size)\r\n        return value && value?.size <= FILE_SIZE\r\n      }\r\n    )\r\n    \r\n});\r\n\r\nconst Bardia = () => {\r\n  const[upload,setUpload]=useState()\r\n\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      // id:\"\",\r\n      name:\"\",\r\n      email: 'foobar@example.com',\r\n      password: 'foobar',\r\n      videoFile:null,\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit:async (values) => {\r\n      let formData=new FormData();\r\n      formData.append(\"name\",values.name)\r\n      formData.append(\"email\",values.email)\r\n      formData.append(\"password\",values.password)\r\n      formData.append(\"videoFile\",values.videoFile.name)\r\n      formData.append(\"formData\",formData)\r\n      // const res=await axios.post(\"url\",{body:formData})\r\n      console.log(\"1\",formData.get(\"name\"))\r\n      console.log(\"2\",formData.get(\"email\"))\r\n      console.log(\"3\",formData.get(\"password\"))\r\n      console.log(\"4\",formData.get(\"videoFile\"))\r\n      console.log(\"5\",...formData)\r\n      console.log(\"submit\",values)\r\n         alert(JSON.stringify(values, null, 2));   alert(\"from submitted!\")\r\n    },\r\n  });\r\n  const fileSelectedHandler=(e)=>{\r\n    setUpload(e.target.files[0])\r\n    formik.values.videoFile=upload\r\n  }\r\n  const fileUploadHandler=()=>{\r\n    const fd=new FormData();\r\n\r\n    // console.log(upload)\r\n    fd.append(\"image\",upload,upload.name)\r\n    console.log(...fd)\r\n    console.log(formik.values)\r\n    formik.values.videoFile=upload\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        {console.log(\"formik\",formik)}\r\n     \r\n      <TextField\r\n          fullWidth\r\n          id=\"name\"\r\n          variant=\"outlined\"\r\n          name=\"name\"\r\n          label=\"نام زیر صنعت\"\r\n          type=\"text\"\r\n          value={formik.values.name}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.name && Boolean(formik.errors.name)}\r\n          helperText={formik.touched.name && formik.errors.name}\r\n        />\r\n         <TextField\r\n       \r\n          variant=\"outlined\"\r\n          fullWidth\r\n          id=\"videoFile\"\r\n          type=\"file\"\r\n          name=\"videoFile\"\r\n          label=\"عکس\"\r\n          placeholder=\"asdasdasd\"\r\n          // onChange={fileSelectedHandler}\r\n     \r\n          onChange={(e)=>fileSelectedHandler(e)}\r\n          margin=\"dense\"\r\n          inputProps={{ style: { fontSize: 16 } }} // font size of input text\r\n          InputLabelProps={{\r\n            style: { fontSize: \"1rem\", fontFamily: \"Shabnam\" },\r\n          }} \r\n          error={formik.touched.videoFile && Boolean(formik.errors.videoFile)}\r\n          helperText={formik.touched.videoFile && formik.errors.videoFile}\r\n        />\r\n         <Button\r\n          className={classes.Button}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          type=\"button\"\r\n          onClick={fileUploadHandler}\r\n          disabled={formik.values.videoFile===null}\r\n        >\r\n          upload\r\n        </Button>\r\n        <TextField\r\n          fullWidth\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        \r\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bardia;","D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Calender\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\pages\\candoProject\\Calender\\CalenderHeader.js",["1289"],"import { ArrowBackIosRounded, ArrowForwardIosRounded, ArrowRightTwoTone } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction CalenderHeader({ value, setValue }) {\r\n    function currMnthName() {\r\n        return value.format(\"MMMM\");\r\n      }\r\n      function currYear() {\r\n        return value.format(\"YYYY\");\r\n      }\r\n      function prevDay() {\r\n        return value.clone().subtract(1, \"days\");\r\n      }\r\n      function nextDay() {\r\n        return value.clone().add(1, \"days\");\r\n      }\r\n      const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.Header}>\r\n      <div className={classes.arrow} onClick={() => setValue(prevDay())}>\r\n        <ArrowForwardIosRounded/>\r\n      </div>\r\n      <div style={{fontWeight:\"600\"}}>\r\n        {currMnthName()}\r\n        {currYear()}\r\n      </div>\r\n      <div className={classes.arrow} onClick={() => setValue(nextDay())}>\r\n      <ArrowBackIosRounded/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalenderHeader;\r\n","D:\\kanoo main panell\\CandoProject-master\\src\\components\\UserAvatar\\styles.js",[],"D:\\kanoo main panell\\CandoProject-master\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],{"ruleId":"1290","replacedBy":"1291"},{"ruleId":"1292","replacedBy":"1293"},{"ruleId":"1294","severity":1,"message":"1295","line":2,"column":47,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":53},{"ruleId":"1294","severity":1,"message":"1298","line":16,"column":10,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":24},{"ruleId":"1294","severity":1,"message":"1299","line":18,"column":8,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1300","line":26,"column":17,"nodeType":"1296","messageId":"1297","endLine":26,"endColumn":24},{"ruleId":"1294","severity":1,"message":"1301","line":28,"column":9,"nodeType":"1296","messageId":"1297","endLine":28,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1302","line":4,"column":10,"nodeType":"1296","messageId":"1297","endLine":4,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1303","line":1,"column":29,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":38},{"ruleId":"1294","severity":1,"message":"1304","line":3,"column":3,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1305","line":7,"column":3,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1306","line":8,"column":3,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":6},{"ruleId":"1294","severity":1,"message":"1307","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1308","line":13,"column":8,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1309","line":19,"column":8,"nodeType":"1296","messageId":"1297","endLine":19,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1310","line":20,"column":8,"nodeType":"1296","messageId":"1297","endLine":20,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1311","line":21,"column":10,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1312","line":23,"column":27,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":36},{"ruleId":"1294","severity":1,"message":"1313","line":24,"column":19,"nodeType":"1296","messageId":"1297","endLine":24,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1314","line":32,"column":9,"nodeType":"1296","messageId":"1297","endLine":32,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1315","line":55,"column":5,"nodeType":"1296","messageId":"1297","endLine":55,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1316","line":70,"column":13,"nodeType":"1296","messageId":"1297","endLine":70,"endColumn":21},{"ruleId":"1317","severity":1,"message":"1318","line":135,"column":11,"nodeType":"1319","messageId":"1320","endLine":135,"endColumn":28},{"ruleId":"1317","severity":1,"message":"1318","line":157,"column":11,"nodeType":"1319","messageId":"1320","endLine":157,"endColumn":28},{"ruleId":"1317","severity":1,"message":"1318","line":179,"column":11,"nodeType":"1319","messageId":"1320","endLine":179,"endColumn":28},{"ruleId":"1294","severity":1,"message":"1303","line":1,"column":29,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":38},{"ruleId":"1294","severity":1,"message":"1304","line":3,"column":3,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1305","line":7,"column":3,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1306","line":8,"column":3,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":6},{"ruleId":"1294","severity":1,"message":"1307","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1308","line":13,"column":8,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1311","line":21,"column":10,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1312","line":23,"column":27,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":36},{"ruleId":"1294","severity":1,"message":"1313","line":24,"column":19,"nodeType":"1296","messageId":"1297","endLine":24,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1321","line":27,"column":10,"nodeType":"1296","messageId":"1297","endLine":27,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1322","line":27,"column":15,"nodeType":"1296","messageId":"1297","endLine":27,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1323","line":35,"column":10,"nodeType":"1296","messageId":"1297","endLine":35,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1324","line":36,"column":21,"nodeType":"1296","messageId":"1297","endLine":36,"endColumn":33},{"ruleId":"1294","severity":1,"message":"1325","line":43,"column":9,"nodeType":"1296","messageId":"1297","endLine":43,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1315","line":51,"column":5,"nodeType":"1296","messageId":"1297","endLine":51,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1326","line":57,"column":10,"nodeType":"1296","messageId":"1297","endLine":57,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1327","line":57,"column":13,"nodeType":"1296","messageId":"1297","endLine":57,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1328","line":57,"column":27,"nodeType":"1296","messageId":"1297","endLine":57,"endColumn":42},{"ruleId":"1294","severity":1,"message":"1329","line":22,"column":8,"nodeType":"1296","messageId":"1297","endLine":22,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1330","line":26,"column":8,"nodeType":"1296","messageId":"1297","endLine":26,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1331","line":27,"column":8,"nodeType":"1296","messageId":"1297","endLine":27,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1332","line":29,"column":8,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1333","line":32,"column":8,"nodeType":"1296","messageId":"1297","endLine":32,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1334","line":33,"column":8,"nodeType":"1296","messageId":"1297","endLine":33,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1335","line":1,"column":35,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":45},{"ruleId":"1294","severity":1,"message":"1304","line":3,"column":3,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1336","line":4,"column":3,"nodeType":"1296","messageId":"1297","endLine":4,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1305","line":7,"column":3,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1306","line":8,"column":3,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":6},{"ruleId":"1294","severity":1,"message":"1307","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1337","line":12,"column":3,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1338","line":13,"column":3,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1339","line":14,"column":3,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1340","line":15,"column":3,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1311","line":18,"column":10,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1312","line":19,"column":27,"nodeType":"1296","messageId":"1297","endLine":19,"endColumn":36},{"ruleId":"1294","severity":1,"message":"1313","line":20,"column":19,"nodeType":"1296","messageId":"1297","endLine":20,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1341","line":24,"column":9,"nodeType":"1296","messageId":"1297","endLine":24,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1342","line":40,"column":7,"nodeType":"1296","messageId":"1297","endLine":40,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1315","line":56,"column":5,"nodeType":"1296","messageId":"1297","endLine":56,"endColumn":12},{"ruleId":"1343","severity":1,"message":"1344","line":165,"column":9,"nodeType":"1345","messageId":"1346","endLine":165,"endColumn":18},{"ruleId":"1343","severity":1,"message":"1347","line":183,"column":7,"nodeType":"1345","messageId":"1346","endLine":183,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1348","line":2,"column":8,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1349","line":2,"column":10,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":23},{"ruleId":"1350","severity":1,"message":"1351","line":7,"column":110,"nodeType":"1352","endLine":7,"endColumn":268},{"ruleId":"1294","severity":1,"message":"1353","line":2,"column":3,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1354","line":3,"column":3,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1355","line":4,"column":3,"nodeType":"1296","messageId":"1297","endLine":4,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1356","line":5,"column":3,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1357","line":6,"column":3,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1358","line":7,"column":3,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1295","line":13,"column":20,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1359","line":16,"column":3,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1311","line":18,"column":3,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1360","line":21,"column":8,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":14},{"ruleId":"1361","severity":1,"message":"1362","line":62,"column":50,"nodeType":"1363","messageId":"1364","endLine":62,"endColumn":51},{"ruleId":"1365","severity":1,"message":"1366","line":71,"column":10,"nodeType":"1367","endLine":71,"endColumn":12,"suggestions":"1368"},{"ruleId":"1294","severity":1,"message":"1369","line":76,"column":9,"nodeType":"1296","messageId":"1297","endLine":76,"endColumn":30},{"ruleId":"1294","severity":1,"message":"1370","line":21,"column":24,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":34},{"ruleId":"1294","severity":1,"message":"1353","line":9,"column":5,"nodeType":"1296","messageId":"1297","endLine":9,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1307","line":11,"column":5,"nodeType":"1296","messageId":"1297","endLine":11,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1304","line":12,"column":5,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1340","line":13,"column":5,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1371","line":17,"column":5,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1372","line":19,"column":5,"nodeType":"1296","messageId":"1297","endLine":19,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1373","line":21,"column":19,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":27},{"ruleId":"1294","severity":1,"message":"1374","line":22,"column":10,"nodeType":"1296","messageId":"1297","endLine":22,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1299","line":23,"column":10,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1375","line":24,"column":12,"nodeType":"1296","messageId":"1297","endLine":24,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1376","line":27,"column":12,"nodeType":"1296","messageId":"1297","endLine":27,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1377","line":27,"column":34,"nodeType":"1296","messageId":"1297","endLine":27,"endColumn":42},{"ruleId":"1294","severity":1,"message":"1378","line":29,"column":27,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":40},{"ruleId":"1294","severity":1,"message":"1379","line":30,"column":10,"nodeType":"1296","messageId":"1297","endLine":30,"endColumn":24},{"ruleId":"1294","severity":1,"message":"1380","line":31,"column":10,"nodeType":"1296","messageId":"1297","endLine":31,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1381","line":36,"column":10,"nodeType":"1296","messageId":"1297","endLine":36,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1382","line":37,"column":10,"nodeType":"1296","messageId":"1297","endLine":37,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1383","line":38,"column":10,"nodeType":"1296","messageId":"1297","endLine":38,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":41,"column":22,"nodeType":"1296","messageId":"1297","endLine":41,"endColumn":28},{"ruleId":"1294","severity":1,"message":"1384","line":43,"column":5,"nodeType":"1296","messageId":"1297","endLine":43,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1385","line":44,"column":5,"nodeType":"1296","messageId":"1297","endLine":44,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1386","line":54,"column":12,"nodeType":"1296","messageId":"1297","endLine":54,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1387","line":74,"column":11,"nodeType":"1296","messageId":"1297","endLine":74,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1388","line":77,"column":11,"nodeType":"1296","messageId":"1297","endLine":77,"endColumn":25},{"ruleId":"1389","severity":1,"message":"1390","line":240,"column":17,"nodeType":"1352","endLine":240,"endColumn":64},{"ruleId":"1389","severity":1,"message":"1390","line":242,"column":17,"nodeType":"1352","endLine":242,"endColumn":54},{"ruleId":"1389","severity":1,"message":"1390","line":330,"column":31,"nodeType":"1352","endLine":330,"endColumn":107},{"ruleId":"1389","severity":1,"message":"1390","line":350,"column":31,"nodeType":"1352","endLine":350,"endColumn":111},{"ruleId":"1294","severity":1,"message":"1391","line":377,"column":11,"nodeType":"1296","messageId":"1297","endLine":377,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1392","line":396,"column":11,"nodeType":"1296","messageId":"1297","endLine":396,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1393","line":422,"column":11,"nodeType":"1296","messageId":"1297","endLine":422,"endColumn":14},{"ruleId":"1317","severity":1,"message":"1318","line":441,"column":11,"nodeType":"1319","messageId":"1320","endLine":469,"endColumn":13},{"ruleId":"1343","severity":1,"message":"1394","line":463,"column":13,"nodeType":"1345","messageId":"1346","endLine":463,"endColumn":17},{"ruleId":"1317","severity":1,"message":"1318","line":598,"column":18,"nodeType":"1319","messageId":"1320","endLine":598,"endColumn":49},{"ruleId":"1317","severity":1,"message":"1318","line":617,"column":18,"nodeType":"1319","messageId":"1320","endLine":617,"endColumn":49},{"ruleId":"1317","severity":1,"message":"1318","line":636,"column":18,"nodeType":"1319","messageId":"1320","endLine":636,"endColumn":49},{"ruleId":"1389","severity":1,"message":"1390","line":723,"column":31,"nodeType":"1352","endLine":723,"endColumn":107},{"ruleId":"1389","severity":1,"message":"1390","line":743,"column":31,"nodeType":"1352","endLine":743,"endColumn":111},{"ruleId":"1389","severity":1,"message":"1390","line":761,"column":19,"nodeType":"1352","endLine":773,"endColumn":21},{"ruleId":"1389","severity":1,"message":"1390","line":797,"column":19,"nodeType":"1352","endLine":800,"endColumn":21},{"ruleId":"1389","severity":1,"message":"1390","line":845,"column":71,"nodeType":"1352","endLine":845,"endColumn":113},{"ruleId":"1389","severity":1,"message":"1390","line":846,"column":67,"nodeType":"1352","endLine":846,"endColumn":111},{"ruleId":"1294","severity":1,"message":"1395","line":2,"column":55,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":64},{"ruleId":"1294","severity":1,"message":"1396","line":26,"column":11,"nodeType":"1296","messageId":"1297","endLine":26,"endColumn":16},{"ruleId":"1365","severity":1,"message":"1397","line":64,"column":8,"nodeType":"1367","endLine":64,"endColumn":10,"suggestions":"1398"},{"ruleId":"1294","severity":1,"message":"1316","line":73,"column":24,"nodeType":"1296","messageId":"1297","endLine":73,"endColumn":32},{"ruleId":"1365","severity":1,"message":"1397","line":84,"column":8,"nodeType":"1367","endLine":84,"endColumn":10,"suggestions":"1399"},{"ruleId":"1294","severity":1,"message":"1316","line":128,"column":13,"nodeType":"1296","messageId":"1297","endLine":128,"endColumn":21},{"ruleId":"1400","severity":1,"message":"1401","line":410,"column":21,"nodeType":"1402","messageId":"1403","endLine":410,"endColumn":23},{"ruleId":"1400","severity":1,"message":"1401","line":410,"column":48,"nodeType":"1402","messageId":"1403","endLine":410,"endColumn":50},{"ruleId":"1404","severity":1,"message":"1405","line":410,"column":59,"nodeType":"1363","messageId":"1346","endLine":410,"endColumn":61},{"ruleId":"1406","severity":1,"message":"1407","line":535,"column":35,"nodeType":"1408","messageId":"1409","endLine":535,"endColumn":37},{"ruleId":"1410","severity":1,"message":"1411","line":536,"column":11,"nodeType":"1412","messageId":"1413","endLine":591,"endColumn":12},{"ruleId":"1404","severity":1,"message":"1405","line":552,"column":20,"nodeType":"1363","messageId":"1346","endLine":552,"endColumn":22},{"ruleId":"1414","severity":1,"message":"1415","line":553,"column":1,"nodeType":"1352","messageId":"1416","endLine":553,"endColumn":166,"fix":"1417"},{"ruleId":"1404","severity":1,"message":"1405","line":579,"column":16,"nodeType":"1363","messageId":"1346","endLine":579,"endColumn":18},{"ruleId":"1414","severity":1,"message":"1415","line":580,"column":1,"nodeType":"1352","messageId":"1416","endLine":580,"endColumn":165,"fix":"1418"},{"ruleId":"1350","severity":1,"message":"1351","line":7,"column":14,"nodeType":"1352","endLine":7,"endColumn":93},{"ruleId":"1294","severity":1,"message":"1419","line":8,"column":8,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1420","line":3,"column":8,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":17},{"ruleId":"1343","severity":1,"message":"1421","line":27,"column":5,"nodeType":"1345","messageId":"1346","endLine":27,"endColumn":10},{"ruleId":"1343","severity":1,"message":"1422","line":52,"column":3,"nodeType":"1345","messageId":"1346","endLine":52,"endColumn":26},{"ruleId":"1423","severity":1,"message":"1424","line":1,"column":1,"nodeType":"1425","messageId":"1346","fix":"1426"},{"ruleId":"1294","severity":1,"message":"1427","line":3,"column":3,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":6},{"ruleId":"1294","severity":1,"message":"1428","line":5,"column":3,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1429","line":6,"column":3,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1337","line":13,"column":3,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1430","line":15,"column":3,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1431","line":16,"column":3,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1295","line":23,"column":20,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1359","line":24,"column":3,"nodeType":"1296","messageId":"1297","endLine":24,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1432","line":29,"column":3,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1433","line":33,"column":3,"nodeType":"1296","messageId":"1297","endLine":33,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1434","line":35,"column":10,"nodeType":"1296","messageId":"1297","endLine":35,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1435","line":37,"column":10,"nodeType":"1296","messageId":"1297","endLine":37,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1436","line":70,"column":10,"nodeType":"1296","messageId":"1297","endLine":70,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1437","line":70,"column":17,"nodeType":"1296","messageId":"1297","endLine":70,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1438","line":71,"column":10,"nodeType":"1296","messageId":"1297","endLine":71,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1439","line":71,"column":24,"nodeType":"1296","messageId":"1297","endLine":71,"endColumn":40},{"ruleId":"1361","severity":1,"message":"1362","line":137,"column":48,"nodeType":"1363","messageId":"1364","endLine":137,"endColumn":49},{"ruleId":"1365","severity":1,"message":"1366","line":146,"column":6,"nodeType":"1367","endLine":146,"endColumn":8,"suggestions":"1440"},{"ruleId":"1294","severity":1,"message":"1441","line":159,"column":11,"nodeType":"1296","messageId":"1297","endLine":159,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1442","line":184,"column":9,"nodeType":"1296","messageId":"1297","endLine":184,"endColumn":13},{"ruleId":"1389","severity":1,"message":"1390","line":425,"column":33,"nodeType":"1352","endLine":425,"endColumn":80},{"ruleId":"1389","severity":1,"message":"1390","line":500,"column":33,"nodeType":"1352","endLine":500,"endColumn":80},{"ruleId":"1294","severity":1,"message":"1313","line":2,"column":19,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1295","line":17,"column":20,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1359","line":18,"column":3,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1443","line":27,"column":9,"nodeType":"1296","messageId":"1297","endLine":27,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1315","line":55,"column":5,"nodeType":"1296","messageId":"1297","endLine":55,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1444","line":62,"column":7,"nodeType":"1296","messageId":"1297","endLine":62,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1445","line":72,"column":9,"nodeType":"1296","messageId":"1297","endLine":72,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1442","line":74,"column":9,"nodeType":"1296","messageId":"1297","endLine":74,"endColumn":13},{"ruleId":"1389","severity":1,"message":"1390","line":261,"column":16,"nodeType":"1352","endLine":261,"endColumn":83},{"ruleId":"1294","severity":1,"message":"1446","line":7,"column":3,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1447","line":8,"column":3,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1313","line":17,"column":19,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1314","line":28,"column":9,"nodeType":"1296","messageId":"1297","endLine":28,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1448","line":32,"column":10,"nodeType":"1296","messageId":"1297","endLine":32,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1449","line":32,"column":23,"nodeType":"1296","messageId":"1297","endLine":32,"endColumn":36},{"ruleId":"1294","severity":1,"message":"1450","line":33,"column":10,"nodeType":"1296","messageId":"1297","endLine":33,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1451","line":33,"column":16,"nodeType":"1296","messageId":"1297","endLine":33,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1315","line":61,"column":5,"nodeType":"1296","messageId":"1297","endLine":61,"endColumn":12},{"ruleId":"1452","severity":1,"message":"1453","line":86,"column":34,"nodeType":"1454","messageId":"1455","endLine":86,"endColumn":69,"fix":"1456"},{"ruleId":"1365","severity":1,"message":"1457","line":105,"column":7,"nodeType":"1367","endLine":105,"endColumn":14,"suggestions":"1458"},{"ruleId":"1294","severity":1,"message":"1459","line":121,"column":12,"nodeType":"1296","messageId":"1297","endLine":121,"endColumn":14},{"ruleId":"1317","severity":1,"message":"1318","line":210,"column":13,"nodeType":"1319","messageId":"1320","endLine":210,"endColumn":30},{"ruleId":"1294","severity":1,"message":"1460","line":2,"column":3,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":8},{"ruleId":"1294","severity":1,"message":"1446","line":7,"column":3,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1447","line":8,"column":3,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1461","line":15,"column":17,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1302","line":15,"column":27,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":35},{"ruleId":"1294","severity":1,"message":"1313","line":16,"column":19,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1462","line":21,"column":8,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1315","line":48,"column":5,"nodeType":"1296","messageId":"1297","endLine":48,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1316","line":57,"column":11,"nodeType":"1296","messageId":"1297","endLine":57,"endColumn":19},{"ruleId":"1343","severity":1,"message":"1463","line":135,"column":9,"nodeType":"1345","messageId":"1346","endLine":135,"endColumn":15},{"ruleId":"1343","severity":1,"message":"1422","line":203,"column":5,"nodeType":"1345","messageId":"1346","endLine":203,"endColumn":28},{"ruleId":"1343","severity":1,"message":"1422","line":222,"column":5,"nodeType":"1345","messageId":"1346","endLine":222,"endColumn":28},{"ruleId":"1343","severity":1,"message":"1422","line":325,"column":5,"nodeType":"1345","messageId":"1346","endLine":325,"endColumn":28},{"ruleId":"1343","severity":1,"message":"1463","line":231,"column":9,"nodeType":"1345","messageId":"1346","endLine":231,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1464","line":3,"column":8,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1465","line":4,"column":8,"nodeType":"1296","messageId":"1297","endLine":4,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1466","line":14,"column":9,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1467","line":23,"column":10,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1353","line":3,"column":3,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1468","line":4,"column":3,"nodeType":"1296","messageId":"1297","endLine":4,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1307","line":6,"column":3,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1340","line":7,"column":3,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1371","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1373","line":12,"column":17,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1375","line":13,"column":10,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1376","line":17,"column":3,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1377","line":19,"column":11,"nodeType":"1296","messageId":"1297","endLine":19,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1469","line":20,"column":3,"nodeType":"1296","messageId":"1297","endLine":20,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1470","line":24,"column":3,"nodeType":"1296","messageId":"1297","endLine":24,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1471","line":25,"column":3,"nodeType":"1296","messageId":"1297","endLine":25,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1378","line":28,"column":25,"nodeType":"1296","messageId":"1297","endLine":28,"endColumn":38},{"ruleId":"1294","severity":1,"message":"1321","line":35,"column":10,"nodeType":"1296","messageId":"1297","endLine":35,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1472","line":35,"column":15,"nodeType":"1296","messageId":"1297","endLine":35,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1473","line":36,"column":10,"nodeType":"1296","messageId":"1297","endLine":36,"endColumn":24},{"ruleId":"1294","severity":1,"message":"1474","line":36,"column":26,"nodeType":"1296","messageId":"1297","endLine":36,"endColumn":31},{"ruleId":"1294","severity":1,"message":"1475","line":39,"column":10,"nodeType":"1296","messageId":"1297","endLine":39,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1386","line":49,"column":10,"nodeType":"1296","messageId":"1297","endLine":49,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1450","line":52,"column":10,"nodeType":"1296","messageId":"1297","endLine":52,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1451","line":52,"column":17,"nodeType":"1296","messageId":"1297","endLine":52,"endColumn":27},{"ruleId":"1294","severity":1,"message":"1476","line":70,"column":9,"nodeType":"1296","messageId":"1297","endLine":70,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1387","line":74,"column":9,"nodeType":"1296","messageId":"1297","endLine":74,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1388","line":77,"column":9,"nodeType":"1296","messageId":"1297","endLine":77,"endColumn":23},{"ruleId":"1343","severity":1,"message":"1477","line":143,"column":7,"nodeType":"1345","messageId":"1346","endLine":143,"endColumn":18},{"ruleId":"1343","severity":1,"message":"1477","line":157,"column":7,"nodeType":"1345","messageId":"1346","endLine":157,"endColumn":18},{"ruleId":"1343","severity":1,"message":"1477","line":171,"column":7,"nodeType":"1345","messageId":"1346","endLine":171,"endColumn":18},{"ruleId":"1343","severity":1,"message":"1477","line":185,"column":7,"nodeType":"1345","messageId":"1346","endLine":185,"endColumn":18},{"ruleId":"1343","severity":1,"message":"1477","line":199,"column":7,"nodeType":"1345","messageId":"1346","endLine":199,"endColumn":18},{"ruleId":"1361","severity":1,"message":"1362","line":237,"column":82,"nodeType":"1363","messageId":"1364","endLine":237,"endColumn":83},{"ruleId":"1361","severity":1,"message":"1362","line":240,"column":80,"nodeType":"1363","messageId":"1364","endLine":240,"endColumn":81},{"ruleId":"1365","severity":1,"message":"1478","line":248,"column":6,"nodeType":"1367","endLine":248,"endColumn":8,"suggestions":"1479"},{"ruleId":"1389","severity":1,"message":"1390","line":609,"column":27,"nodeType":"1352","endLine":612,"endColumn":29},{"ruleId":"1389","severity":1,"message":"1390","line":633,"column":27,"nodeType":"1352","endLine":636,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1480","line":655,"column":9,"nodeType":"1296","messageId":"1297","endLine":655,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1391","line":666,"column":9,"nodeType":"1296","messageId":"1297","endLine":666,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1392","line":686,"column":9,"nodeType":"1296","messageId":"1297","endLine":686,"endColumn":21},{"ruleId":"1317","severity":1,"message":"1318","line":797,"column":13,"nodeType":"1319","messageId":"1320","endLine":825,"endColumn":15},{"ruleId":"1343","severity":1,"message":"1394","line":821,"column":15,"nodeType":"1345","messageId":"1346","endLine":821,"endColumn":19},{"ruleId":"1389","severity":1,"message":"1390","line":913,"column":33,"nodeType":"1352","endLine":916,"endColumn":35},{"ruleId":"1389","severity":1,"message":"1390","line":956,"column":21,"nodeType":"1352","endLine":970,"endColumn":23},{"ruleId":"1389","severity":1,"message":"1390","line":998,"column":21,"nodeType":"1352","endLine":1001,"endColumn":23},{"ruleId":"1389","severity":1,"message":"1390","line":1101,"column":15,"nodeType":"1352","endLine":1101,"endColumn":88},{"ruleId":"1389","severity":1,"message":"1390","line":1104,"column":17,"nodeType":"1352","endLine":1104,"endColumn":89},{"ruleId":"1294","severity":1,"message":"1430","line":6,"column":3,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1431","line":7,"column":3,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1481","line":25,"column":8,"nodeType":"1296","messageId":"1297","endLine":25,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1300","line":37,"column":17,"nodeType":"1296","messageId":"1297","endLine":37,"endColumn":24},{"ruleId":"1294","severity":1,"message":"1482","line":44,"column":9,"nodeType":"1296","messageId":"1297","endLine":44,"endColumn":22},{"ruleId":"1404","severity":1,"message":"1483","line":65,"column":20,"nodeType":"1363","messageId":"1346","endLine":65,"endColumn":22},{"ruleId":"1361","severity":1,"message":"1362","line":73,"column":82,"nodeType":"1363","messageId":"1364","endLine":73,"endColumn":83},{"ruleId":"1361","severity":1,"message":"1362","line":76,"column":80,"nodeType":"1363","messageId":"1364","endLine":76,"endColumn":81},{"ruleId":"1365","severity":1,"message":"1484","line":83,"column":6,"nodeType":"1367","endLine":83,"endColumn":8,"suggestions":"1485"},{"ruleId":"1294","severity":1,"message":"1486","line":101,"column":10,"nodeType":"1296","messageId":"1297","endLine":101,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1487","line":101,"column":16,"nodeType":"1296","messageId":"1297","endLine":101,"endColumn":23},{"ruleId":"1404","severity":1,"message":"1405","line":352,"column":67,"nodeType":"1363","messageId":"1346","endLine":352,"endColumn":69},{"ruleId":"1404","severity":1,"message":"1405","line":382,"column":67,"nodeType":"1363","messageId":"1346","endLine":382,"endColumn":69},{"ruleId":"1488","severity":1,"message":"1489","line":385,"column":17,"nodeType":"1490","messageId":"1491","endLine":385,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1396","line":26,"column":11,"nodeType":"1296","messageId":"1297","endLine":26,"endColumn":16},{"ruleId":"1365","severity":1,"message":"1397","line":64,"column":8,"nodeType":"1367","endLine":64,"endColumn":10,"suggestions":"1492"},{"ruleId":"1294","severity":1,"message":"1316","line":73,"column":24,"nodeType":"1296","messageId":"1297","endLine":73,"endColumn":32},{"ruleId":"1365","severity":1,"message":"1397","line":84,"column":8,"nodeType":"1367","endLine":84,"endColumn":10,"suggestions":"1493"},{"ruleId":"1294","severity":1,"message":"1316","line":128,"column":13,"nodeType":"1296","messageId":"1297","endLine":128,"endColumn":21},{"ruleId":"1400","severity":1,"message":"1401","line":391,"column":21,"nodeType":"1402","messageId":"1403","endLine":391,"endColumn":23},{"ruleId":"1400","severity":1,"message":"1401","line":391,"column":48,"nodeType":"1402","messageId":"1403","endLine":391,"endColumn":50},{"ruleId":"1404","severity":1,"message":"1405","line":391,"column":59,"nodeType":"1363","messageId":"1346","endLine":391,"endColumn":61},{"ruleId":"1406","severity":1,"message":"1407","line":516,"column":35,"nodeType":"1408","messageId":"1409","endLine":516,"endColumn":37},{"ruleId":"1410","severity":1,"message":"1411","line":517,"column":11,"nodeType":"1412","messageId":"1413","endLine":571,"endColumn":12},{"ruleId":"1404","severity":1,"message":"1405","line":533,"column":20,"nodeType":"1363","messageId":"1346","endLine":533,"endColumn":22},{"ruleId":"1414","severity":1,"message":"1415","line":534,"column":1,"nodeType":"1352","messageId":"1416","endLine":534,"endColumn":166,"fix":"1494"},{"ruleId":"1404","severity":1,"message":"1405","line":559,"column":20,"nodeType":"1363","messageId":"1346","endLine":559,"endColumn":22},{"ruleId":"1414","severity":1,"message":"1415","line":560,"column":1,"nodeType":"1352","messageId":"1416","endLine":560,"endColumn":165,"fix":"1495"},{"ruleId":"1294","severity":1,"message":"1496","line":172,"column":10,"nodeType":"1296","messageId":"1297","endLine":172,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1497","line":172,"column":21,"nodeType":"1296","messageId":"1297","endLine":172,"endColumn":36},{"ruleId":"1294","severity":1,"message":"1498","line":173,"column":10,"nodeType":"1296","messageId":"1297","endLine":173,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1311","line":178,"column":3,"nodeType":"1296","messageId":"1297","endLine":178,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1499","line":178,"column":13,"nodeType":"1296","messageId":"1297","endLine":178,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1500","line":184,"column":10,"nodeType":"1296","messageId":"1297","endLine":184,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1501","line":184,"column":23,"nodeType":"1296","messageId":"1297","endLine":184,"endColumn":38},{"ruleId":"1294","severity":1,"message":"1486","line":194,"column":9,"nodeType":"1296","messageId":"1297","endLine":194,"endColumn":13},{"ruleId":"1361","severity":1,"message":"1362","line":199,"column":14,"nodeType":"1363","messageId":"1364","endLine":199,"endColumn":15},{"ruleId":"1361","severity":1,"message":"1362","line":199,"column":21,"nodeType":"1363","messageId":"1364","endLine":199,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1502","line":251,"column":9,"nodeType":"1296","messageId":"1297","endLine":251,"endColumn":20},{"ruleId":"1317","severity":1,"message":"1318","line":288,"column":9,"nodeType":"1319","messageId":"1320","endLine":288,"endColumn":91},{"ruleId":"1294","severity":1,"message":"1311","line":9,"column":3,"nodeType":"1296","messageId":"1297","endLine":9,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1499","line":9,"column":13,"nodeType":"1296","messageId":"1297","endLine":9,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1503","line":22,"column":10,"nodeType":"1296","messageId":"1297","endLine":22,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1504","line":23,"column":9,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1505","line":25,"column":10,"nodeType":"1296","messageId":"1297","endLine":25,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1487","line":26,"column":16,"nodeType":"1296","messageId":"1297","endLine":26,"endColumn":23},{"ruleId":"1365","severity":1,"message":"1366","line":74,"column":6,"nodeType":"1367","endLine":74,"endColumn":8,"suggestions":"1506"},{"ruleId":"1404","severity":1,"message":"1405","line":181,"column":55,"nodeType":"1363","messageId":"1346","endLine":181,"endColumn":57},{"ruleId":"1294","severity":1,"message":"1507","line":1,"column":10,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1508","line":3,"column":8,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":14},{"ruleId":"1389","severity":1,"message":"1390","line":110,"column":15,"nodeType":"1352","endLine":110,"endColumn":80},{"ruleId":"1389","severity":1,"message":"1390","line":140,"column":15,"nodeType":"1352","endLine":140,"endColumn":74},{"ruleId":"1389","severity":1,"message":"1390","line":170,"column":15,"nodeType":"1352","endLine":170,"endColumn":76},{"ruleId":"1389","severity":1,"message":"1390","line":200,"column":15,"nodeType":"1352","endLine":200,"endColumn":65},{"ruleId":"1294","severity":1,"message":"1509","line":1,"column":23,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":30},{"ruleId":"1294","severity":1,"message":"1510","line":1,"column":50,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":59},{"ruleId":"1294","severity":1,"message":"1511","line":1,"column":74,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":80},{"ruleId":"1294","severity":1,"message":"1372","line":1,"column":93,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":103},{"ruleId":"1294","severity":1,"message":"1295","line":7,"column":22,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":28},{"ruleId":"1294","severity":1,"message":"1359","line":9,"column":5,"nodeType":"1296","messageId":"1297","endLine":9,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1384","line":9,"column":10,"nodeType":"1296","messageId":"1297","endLine":9,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1383","line":13,"column":8,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1512","line":15,"column":8,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1360","line":16,"column":8,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1513","line":18,"column":10,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1487","line":58,"column":18,"nodeType":"1296","messageId":"1297","endLine":58,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1315","line":93,"column":9,"nodeType":"1296","messageId":"1297","endLine":93,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1514","line":94,"column":9,"nodeType":"1296","messageId":"1297","endLine":94,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1515","line":100,"column":13,"nodeType":"1296","messageId":"1297","endLine":100,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1442","line":106,"column":13,"nodeType":"1296","messageId":"1297","endLine":106,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1516","line":106,"column":19,"nodeType":"1296","messageId":"1297","endLine":106,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1353","line":5,"column":3,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1307","line":7,"column":3,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1340","line":8,"column":3,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1371","line":12,"column":3,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1372","line":14,"column":3,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1373","line":16,"column":17,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1374","line":17,"column":8,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1299","line":18,"column":8,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1375","line":19,"column":10,"nodeType":"1296","messageId":"1297","endLine":19,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1376","line":23,"column":3,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1377","line":25,"column":11,"nodeType":"1296","messageId":"1297","endLine":25,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1295","line":30,"column":20,"nodeType":"1296","messageId":"1297","endLine":30,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1511","line":31,"column":3,"nodeType":"1296","messageId":"1297","endLine":31,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1517","line":32,"column":3,"nodeType":"1296","messageId":"1297","endLine":32,"endColumn":8},{"ruleId":"1294","severity":1,"message":"1384","line":33,"column":8,"nodeType":"1296","messageId":"1297","endLine":33,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1311","line":34,"column":3,"nodeType":"1296","messageId":"1297","endLine":34,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1378","line":36,"column":25,"nodeType":"1296","messageId":"1297","endLine":36,"endColumn":38},{"ruleId":"1294","severity":1,"message":"1379","line":37,"column":8,"nodeType":"1296","messageId":"1297","endLine":37,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1380","line":38,"column":8,"nodeType":"1296","messageId":"1297","endLine":38,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1381","line":43,"column":8,"nodeType":"1296","messageId":"1297","endLine":43,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1382","line":44,"column":8,"nodeType":"1296","messageId":"1297","endLine":44,"endColumn":24},{"ruleId":"1294","severity":1,"message":"1386","line":57,"column":10,"nodeType":"1296","messageId":"1297","endLine":57,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1442","line":59,"column":9,"nodeType":"1296","messageId":"1297","endLine":59,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1516","line":59,"column":15,"nodeType":"1296","messageId":"1297","endLine":59,"endColumn":18},{"ruleId":"1389","severity":1,"message":"1390","line":274,"column":25,"nodeType":"1352","endLine":277,"endColumn":27},{"ruleId":"1389","severity":1,"message":"1390","line":296,"column":25,"nodeType":"1352","endLine":299,"endColumn":27},{"ruleId":"1294","severity":1,"message":"1391","line":326,"column":9,"nodeType":"1296","messageId":"1297","endLine":326,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1392","line":345,"column":9,"nodeType":"1296","messageId":"1297","endLine":345,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1393","line":371,"column":9,"nodeType":"1296","messageId":"1297","endLine":371,"endColumn":12},{"ruleId":"1317","severity":1,"message":"1318","line":388,"column":9,"nodeType":"1319","messageId":"1320","endLine":416,"endColumn":11},{"ruleId":"1343","severity":1,"message":"1394","line":410,"column":11,"nodeType":"1345","messageId":"1346","endLine":410,"endColumn":15},{"ruleId":"1317","severity":1,"message":"1318","line":540,"column":16,"nodeType":"1319","messageId":"1320","endLine":540,"endColumn":47},{"ruleId":"1389","severity":1,"message":"1390","line":622,"column":29,"nodeType":"1352","endLine":625,"endColumn":31},{"ruleId":"1389","severity":1,"message":"1390","line":644,"column":29,"nodeType":"1352","endLine":647,"endColumn":31},{"ruleId":"1389","severity":1,"message":"1390","line":664,"column":17,"nodeType":"1352","endLine":676,"endColumn":19},{"ruleId":"1389","severity":1,"message":"1390","line":702,"column":17,"nodeType":"1352","endLine":705,"endColumn":19},{"ruleId":"1389","severity":1,"message":"1390","line":770,"column":15,"nodeType":"1352","endLine":770,"endColumn":58},{"ruleId":"1389","severity":1,"message":"1390","line":773,"column":15,"nodeType":"1352","endLine":773,"endColumn":60},{"ruleId":"1294","severity":1,"message":"1375","line":2,"column":10,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1507","line":3,"column":10,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1353","line":3,"column":31,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":37},{"ruleId":"1294","severity":1,"message":"1372","line":3,"column":60,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":70},{"ruleId":"1294","severity":1,"message":"1374","line":4,"column":8,"nodeType":"1296","messageId":"1297","endLine":4,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1508","line":5,"column":8,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1518","line":7,"column":8,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1519","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1520","line":11,"column":3,"nodeType":"1296","messageId":"1297","endLine":11,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1521","line":12,"column":3,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1522","line":13,"column":3,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1523","line":14,"column":3,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1524","line":15,"column":3,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1525","line":16,"column":3,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1526","line":17,"column":3,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":6},{"ruleId":"1294","severity":1,"message":"1527","line":18,"column":3,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1528","line":19,"column":3,"nodeType":"1296","messageId":"1297","endLine":19,"endColumn":8},{"ruleId":"1294","severity":1,"message":"1529","line":20,"column":3,"nodeType":"1296","messageId":"1297","endLine":20,"endColumn":8},{"ruleId":"1294","severity":1,"message":"1295","line":23,"column":20,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1530","line":33,"column":8,"nodeType":"1296","messageId":"1297","endLine":33,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1531","line":35,"column":8,"nodeType":"1296","messageId":"1297","endLine":35,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1532","line":39,"column":3,"nodeType":"1296","messageId":"1297","endLine":39,"endColumn":8},{"ruleId":"1294","severity":1,"message":"1533","line":40,"column":3,"nodeType":"1296","messageId":"1297","endLine":40,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1534","line":42,"column":3,"nodeType":"1296","messageId":"1297","endLine":42,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1535","line":43,"column":3,"nodeType":"1296","messageId":"1297","endLine":43,"endColumn":8},{"ruleId":"1294","severity":1,"message":"1314","line":55,"column":9,"nodeType":"1296","messageId":"1297","endLine":55,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1353","line":5,"column":3,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1307","line":7,"column":3,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1340","line":8,"column":3,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1371","line":12,"column":3,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1372","line":15,"column":3,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1373","line":17,"column":17,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1374","line":18,"column":8,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1533","line":23,"column":18,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1377","line":23,"column":32,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":40},{"ruleId":"1294","severity":1,"message":"1378","line":25,"column":25,"nodeType":"1296","messageId":"1297","endLine":25,"endColumn":38},{"ruleId":"1294","severity":1,"message":"1379","line":26,"column":8,"nodeType":"1296","messageId":"1297","endLine":26,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1380","line":27,"column":8,"nodeType":"1296","messageId":"1297","endLine":27,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1381","line":32,"column":8,"nodeType":"1296","messageId":"1297","endLine":32,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1375","line":33,"column":10,"nodeType":"1296","messageId":"1297","endLine":33,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1531","line":34,"column":8,"nodeType":"1296","messageId":"1297","endLine":34,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1314","line":48,"column":9,"nodeType":"1296","messageId":"1297","endLine":48,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1536","line":50,"column":9,"nodeType":"1296","messageId":"1297","endLine":50,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1386","line":64,"column":10,"nodeType":"1296","messageId":"1297","endLine":64,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1387","line":84,"column":9,"nodeType":"1296","messageId":"1297","endLine":84,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1537","line":115,"column":19,"nodeType":"1296","messageId":"1297","endLine":115,"endColumn":29},{"ruleId":"1361","severity":1,"message":"1362","line":174,"column":80,"nodeType":"1363","messageId":"1364","endLine":174,"endColumn":81},{"ruleId":"1361","severity":1,"message":"1362","line":177,"column":78,"nodeType":"1363","messageId":"1364","endLine":177,"endColumn":79},{"ruleId":"1365","severity":1,"message":"1397","line":185,"column":4,"nodeType":"1367","endLine":185,"endColumn":6,"suggestions":"1538"},{"ruleId":"1361","severity":1,"message":"1362","line":211,"column":82,"nodeType":"1363","messageId":"1364","endLine":211,"endColumn":83},{"ruleId":"1361","severity":1,"message":"1362","line":214,"column":80,"nodeType":"1363","messageId":"1364","endLine":214,"endColumn":81},{"ruleId":"1365","severity":1,"message":"1366","line":222,"column":6,"nodeType":"1367","endLine":222,"endColumn":8,"suggestions":"1539"},{"ruleId":"1389","severity":1,"message":"1390","line":374,"column":15,"nodeType":"1352","endLine":374,"endColumn":64},{"ruleId":"1389","severity":1,"message":"1390","line":376,"column":15,"nodeType":"1352","endLine":376,"endColumn":62},{"ruleId":"1389","severity":1,"message":"1390","line":404,"column":15,"nodeType":"1352","endLine":404,"endColumn":63},{"ruleId":"1389","severity":1,"message":"1390","line":406,"column":15,"nodeType":"1352","endLine":406,"endColumn":63},{"ruleId":"1389","severity":1,"message":"1390","line":434,"column":15,"nodeType":"1352","endLine":434,"endColumn":57},{"ruleId":"1389","severity":1,"message":"1390","line":436,"column":15,"nodeType":"1352","endLine":436,"endColumn":57},{"ruleId":"1389","severity":1,"message":"1390","line":497,"column":23,"nodeType":"1352","endLine":497,"endColumn":103},{"ruleId":"1389","severity":1,"message":"1390","line":517,"column":23,"nodeType":"1352","endLine":517,"endColumn":101},{"ruleId":"1389","severity":1,"message":"1390","line":537,"column":23,"nodeType":"1352","endLine":537,"endColumn":100},{"ruleId":"1389","severity":1,"message":"1390","line":556,"column":23,"nodeType":"1352","endLine":556,"endColumn":99},{"ruleId":"1389","severity":1,"message":"1390","line":575,"column":23,"nodeType":"1352","endLine":575,"endColumn":105},{"ruleId":"1389","severity":1,"message":"1390","line":613,"column":23,"nodeType":"1352","endLine":613,"endColumn":99},{"ruleId":"1389","severity":1,"message":"1390","line":633,"column":23,"nodeType":"1352","endLine":633,"endColumn":103},{"ruleId":"1294","severity":1,"message":"1391","line":706,"column":9,"nodeType":"1296","messageId":"1297","endLine":706,"endColumn":12},{"ruleId":"1361","severity":1,"message":"1362","line":734,"column":78,"nodeType":"1363","messageId":"1364","endLine":734,"endColumn":79},{"ruleId":"1361","severity":1,"message":"1362","line":737,"column":76,"nodeType":"1363","messageId":"1364","endLine":737,"endColumn":77},{"ruleId":"1294","severity":1,"message":"1392","line":756,"column":9,"nodeType":"1296","messageId":"1297","endLine":756,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1540","line":769,"column":9,"nodeType":"1296","messageId":"1297","endLine":769,"endColumn":20},{"ruleId":"1317","severity":1,"message":"1318","line":834,"column":9,"nodeType":"1319","messageId":"1320","endLine":860,"endColumn":11},{"ruleId":"1343","severity":1,"message":"1394","line":854,"column":11,"nodeType":"1345","messageId":"1346","endLine":854,"endColumn":15},{"ruleId":"1389","severity":1,"message":"1390","line":962,"column":27,"nodeType":"1352","endLine":962,"endColumn":107},{"ruleId":"1389","severity":1,"message":"1390","line":982,"column":27,"nodeType":"1352","endLine":982,"endColumn":105},{"ruleId":"1389","severity":1,"message":"1390","line":1002,"column":27,"nodeType":"1352","endLine":1002,"endColumn":104},{"ruleId":"1389","severity":1,"message":"1390","line":1021,"column":27,"nodeType":"1352","endLine":1021,"endColumn":103},{"ruleId":"1389","severity":1,"message":"1390","line":1040,"column":27,"nodeType":"1352","endLine":1040,"endColumn":109},{"ruleId":"1389","severity":1,"message":"1390","line":1078,"column":27,"nodeType":"1352","endLine":1078,"endColumn":103},{"ruleId":"1389","severity":1,"message":"1390","line":1098,"column":27,"nodeType":"1352","endLine":1098,"endColumn":107},{"ruleId":"1389","severity":1,"message":"1390","line":1115,"column":17,"nodeType":"1352","endLine":1129,"endColumn":19},{"ruleId":"1389","severity":1,"message":"1390","line":1155,"column":17,"nodeType":"1352","endLine":1158,"endColumn":19},{"ruleId":"1389","severity":1,"message":"1390","line":1262,"column":15,"nodeType":"1352","endLine":1262,"endColumn":88},{"ruleId":"1389","severity":1,"message":"1390","line":1265,"column":15,"nodeType":"1352","endLine":1265,"endColumn":87},{"ruleId":"1294","severity":1,"message":"1541","line":4,"column":10,"nodeType":"1296","messageId":"1297","endLine":4,"endColumn":18},{"ruleId":"1389","severity":1,"message":"1390","line":40,"column":18,"nodeType":"1352","endLine":40,"endColumn":48},{"ruleId":"1294","severity":1,"message":"1302","line":1,"column":27,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":35},{"ruleId":"1294","severity":1,"message":"1542","line":2,"column":10,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1460","line":2,"column":21,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1498","line":3,"column":10,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1543","line":3,"column":18,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1374","line":11,"column":8,"nodeType":"1296","messageId":"1297","endLine":11,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1544","line":13,"column":8,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1545","line":14,"column":8,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1546","line":16,"column":8,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1472","line":21,"column":10,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1321","line":21,"column":20,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1547","line":523,"column":10,"nodeType":"1296","messageId":"1297","endLine":523,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1507","line":1,"column":10,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1542","line":1,"column":18,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1509","line":1,"column":23,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":30},{"ruleId":"1294","severity":1,"message":"1446","line":1,"column":32,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":48},{"ruleId":"1294","severity":1,"message":"1510","line":1,"column":50,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":59},{"ruleId":"1294","severity":1,"message":"1304","line":1,"column":61,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":65},{"ruleId":"1294","severity":1,"message":"1548","line":1,"column":67,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":72},{"ruleId":"1294","severity":1,"message":"1395","line":1,"column":82,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":91},{"ruleId":"1294","severity":1,"message":"1372","line":1,"column":93,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":103},{"ruleId":"1294","severity":1,"message":"1302","line":2,"column":17,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1336","line":1,"column":18,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":34},{"ruleId":"1294","severity":1,"message":"1323","line":12,"column":10,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1549","line":13,"column":10,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1324","line":13,"column":21,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":33},{"ruleId":"1294","severity":1,"message":"1450","line":14,"column":8,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1550","line":14,"column":15,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1342","line":17,"column":9,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1551","line":19,"column":9,"nodeType":"1296","messageId":"1297","endLine":19,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1315","line":28,"column":5,"nodeType":"1296","messageId":"1297","endLine":28,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1514","line":29,"column":5,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1515","line":34,"column":9,"nodeType":"1296","messageId":"1297","endLine":34,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1313","line":2,"column":19,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1295","line":17,"column":20,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1359","line":18,"column":3,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1443","line":27,"column":9,"nodeType":"1296","messageId":"1297","endLine":27,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1487","line":52,"column":13,"nodeType":"1296","messageId":"1297","endLine":52,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1315","line":60,"column":5,"nodeType":"1296","messageId":"1297","endLine":60,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1444","line":68,"column":7,"nodeType":"1296","messageId":"1297","endLine":68,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1445","line":78,"column":9,"nodeType":"1296","messageId":"1297","endLine":78,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1442","line":80,"column":9,"nodeType":"1296","messageId":"1297","endLine":80,"endColumn":13},{"ruleId":"1389","severity":1,"message":"1390","line":262,"column":16,"nodeType":"1352","endLine":262,"endColumn":83},{"ruleId":"1343","severity":1,"message":"1422","line":16,"column":9,"nodeType":"1345","messageId":"1346","endLine":16,"endColumn":32},{"ruleId":"1294","severity":1,"message":"1356","line":4,"column":5,"nodeType":"1296","messageId":"1297","endLine":4,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1357","line":5,"column":5,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1358","line":6,"column":5,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1304","line":8,"column":5,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1430","line":9,"column":5,"nodeType":"1296","messageId":"1297","endLine":9,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1339","line":10,"column":5,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1431","line":11,"column":5,"nodeType":"1296","messageId":"1297","endLine":11,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1552","line":12,"column":5,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1335","line":16,"column":19,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1303","line":16,"column":31,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":40},{"ruleId":"1294","severity":1,"message":"1313","line":18,"column":21,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":31},{"ruleId":"1294","severity":1,"message":"1341","line":22,"column":10,"nodeType":"1296","messageId":"1297","endLine":22,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1315","line":41,"column":13,"nodeType":"1296","messageId":"1297","endLine":41,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1486","line":72,"column":18,"nodeType":"1296","messageId":"1297","endLine":72,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1487","line":72,"column":24,"nodeType":"1296","messageId":"1297","endLine":72,"endColumn":31},{"ruleId":"1343","severity":1,"message":"1553","line":147,"column":5,"nodeType":"1345","messageId":"1346","endLine":147,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1554","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1375","line":21,"column":10,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1555","line":28,"column":10,"nodeType":"1296","messageId":"1297","endLine":28,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1556","line":29,"column":10,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1557","line":36,"column":7,"nodeType":"1296","messageId":"1297","endLine":36,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1558","line":117,"column":20,"nodeType":"1296","messageId":"1297","endLine":117,"endColumn":28},{"ruleId":"1294","severity":1,"message":"1558","line":162,"column":20,"nodeType":"1296","messageId":"1297","endLine":162,"endColumn":28},{"ruleId":"1294","severity":1,"message":"1315","line":381,"column":13,"nodeType":"1296","messageId":"1297","endLine":381,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1558","line":416,"column":20,"nodeType":"1296","messageId":"1297","endLine":416,"endColumn":28},{"ruleId":"1294","severity":1,"message":"1558","line":489,"column":20,"nodeType":"1296","messageId":"1297","endLine":489,"endColumn":28},{"ruleId":"1294","severity":1,"message":"1559","line":489,"column":43,"nodeType":"1296","messageId":"1297","endLine":489,"endColumn":49},{"ruleId":"1294","severity":1,"message":"1560","line":570,"column":9,"nodeType":"1296","messageId":"1297","endLine":570,"endColumn":23},{"ruleId":"1404","severity":1,"message":"1405","line":580,"column":20,"nodeType":"1363","messageId":"1346","endLine":580,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1561","line":599,"column":9,"nodeType":"1296","messageId":"1297","endLine":599,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1562","line":4,"column":11,"nodeType":"1296","messageId":"1297","endLine":4,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1563","line":6,"column":17,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":31},{"ruleId":"1294","severity":1,"message":"1564","line":7,"column":17,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":31},{"ruleId":"1294","severity":1,"message":"1565","line":8,"column":16,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1566","line":9,"column":21,"nodeType":"1296","messageId":"1297","endLine":9,"endColumn":32},{"ruleId":"1294","severity":1,"message":"1567","line":10,"column":19,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":30},{"ruleId":"1294","severity":1,"message":"1568","line":11,"column":18,"nodeType":"1296","messageId":"1297","endLine":11,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1569","line":12,"column":16,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1570","line":13,"column":11,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1571","line":14,"column":3,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1572","line":15,"column":3,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1573","line":16,"column":3,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1333","line":42,"column":8,"nodeType":"1296","messageId":"1297","endLine":42,"endColumn":23},{"ruleId":"1389","severity":1,"message":"1390","line":45,"column":56,"nodeType":"1352","endLine":45,"endColumn":86},{"ruleId":"1389","severity":1,"message":"1390","line":48,"column":63,"nodeType":"1352","endLine":48,"endColumn":108},{"ruleId":"1389","severity":1,"message":"1390","line":50,"column":59,"nodeType":"1352","endLine":50,"endColumn":121},{"ruleId":"1389","severity":1,"message":"1390","line":61,"column":10,"nodeType":"1352","endLine":61,"endColumn":56},{"ruleId":"1389","severity":1,"message":"1390","line":67,"column":10,"nodeType":"1352","endLine":67,"endColumn":70},{"ruleId":"1294","severity":1,"message":"1574","line":110,"column":7,"nodeType":"1296","messageId":"1297","endLine":110,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1430","line":8,"column":3,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1575","line":9,"column":3,"nodeType":"1296","messageId":"1297","endLine":9,"endColumn":6},{"ruleId":"1294","severity":1,"message":"1359","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1576","line":15,"column":18,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":26},{"ruleId":"1294","severity":1,"message":"1577","line":16,"column":24,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":41},{"ruleId":"1294","severity":1,"message":"1578","line":18,"column":13,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1579","line":19,"column":11,"nodeType":"1296","messageId":"1297","endLine":19,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1580","line":29,"column":10,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1353","line":29,"column":29,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":35},{"ruleId":"1294","severity":1,"message":"1581","line":30,"column":8,"nodeType":"1296","messageId":"1297","endLine":30,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1299","line":39,"column":8,"nodeType":"1296","messageId":"1297","endLine":39,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1582","line":41,"column":7,"nodeType":"1296","messageId":"1297","endLine":41,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1583","line":72,"column":7,"nodeType":"1296","messageId":"1297","endLine":72,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1336","line":1,"column":18,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":34},{"ruleId":"1294","severity":1,"message":"1323","line":22,"column":10,"nodeType":"1296","messageId":"1297","endLine":22,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1549","line":23,"column":10,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1324","line":23,"column":21,"nodeType":"1296","messageId":"1297","endLine":23,"endColumn":33},{"ruleId":"1294","severity":1,"message":"1450","line":24,"column":8,"nodeType":"1296","messageId":"1297","endLine":24,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1550","line":24,"column":15,"nodeType":"1296","messageId":"1297","endLine":24,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1584","line":26,"column":9,"nodeType":"1296","messageId":"1297","endLine":26,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1342","line":29,"column":9,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1551","line":31,"column":9,"nodeType":"1296","messageId":"1297","endLine":31,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1315","line":44,"column":5,"nodeType":"1296","messageId":"1297","endLine":44,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1514","line":45,"column":5,"nodeType":"1296","messageId":"1297","endLine":45,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1405","line":73,"column":37,"nodeType":"1363","messageId":"1346","endLine":73,"endColumn":39},{"ruleId":"1317","severity":1,"message":"1318","line":75,"column":7,"nodeType":"1319","messageId":"1320","endLine":75,"endColumn":36},{"ruleId":"1404","severity":1,"message":"1405","line":76,"column":35,"nodeType":"1363","messageId":"1346","endLine":76,"endColumn":37},{"ruleId":"1404","severity":1,"message":"1405","line":94,"column":43,"nodeType":"1363","messageId":"1346","endLine":94,"endColumn":45},{"ruleId":"1404","severity":1,"message":"1405","line":94,"column":197,"nodeType":"1363","messageId":"1346","endLine":94,"endColumn":199},{"ruleId":"1343","severity":1,"message":"1463","line":156,"column":9,"nodeType":"1345","messageId":"1346","endLine":156,"endColumn":15},{"ruleId":"1343","severity":1,"message":"1422","line":175,"column":5,"nodeType":"1345","messageId":"1346","endLine":175,"endColumn":28},{"ruleId":"1294","severity":1,"message":"1585","line":1,"column":10,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":27},{"ruleId":"1294","severity":1,"message":"1586","line":2,"column":8,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1587","line":6,"column":8,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1588","line":12,"column":11,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1589","line":31,"column":23,"nodeType":"1296","messageId":"1297","endLine":31,"endColumn":34},{"ruleId":"1365","severity":1,"message":"1590","line":52,"column":7,"nodeType":"1367","endLine":52,"endColumn":13,"suggestions":"1591"},{"ruleId":"1294","severity":1,"message":"1554","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1592","line":11,"column":3,"nodeType":"1296","messageId":"1297","endLine":11,"endColumn":8},{"ruleId":"1294","severity":1,"message":"1593","line":12,"column":3,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1446","line":13,"column":3,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1594","line":17,"column":3,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1542","line":18,"column":3,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":6},{"ruleId":"1294","severity":1,"message":"1375","line":21,"column":10,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1555","line":28,"column":10,"nodeType":"1296","messageId":"1297","endLine":28,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1556","line":29,"column":10,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1557","line":36,"column":7,"nodeType":"1296","messageId":"1297","endLine":36,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1315","line":72,"column":15,"nodeType":"1296","messageId":"1297","endLine":72,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1560","line":180,"column":9,"nodeType":"1296","messageId":"1297","endLine":180,"endColumn":23},{"ruleId":"1404","severity":1,"message":"1405","line":190,"column":20,"nodeType":"1363","messageId":"1346","endLine":190,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1561","line":209,"column":9,"nodeType":"1296","messageId":"1297","endLine":209,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1554","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1592","line":11,"column":3,"nodeType":"1296","messageId":"1297","endLine":11,"endColumn":8},{"ruleId":"1294","severity":1,"message":"1593","line":12,"column":3,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1446","line":13,"column":3,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1430","line":15,"column":3,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1431","line":16,"column":3,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1594","line":17,"column":3,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1542","line":18,"column":3,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":6},{"ruleId":"1294","severity":1,"message":"1375","line":21,"column":10,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1555","line":28,"column":10,"nodeType":"1296","messageId":"1297","endLine":28,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1556","line":29,"column":10,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1557","line":36,"column":7,"nodeType":"1296","messageId":"1297","endLine":36,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1560","line":206,"column":9,"nodeType":"1296","messageId":"1297","endLine":206,"endColumn":23},{"ruleId":"1404","severity":1,"message":"1405","line":216,"column":20,"nodeType":"1363","messageId":"1346","endLine":216,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1561","line":235,"column":9,"nodeType":"1296","messageId":"1297","endLine":235,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1554","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1592","line":11,"column":3,"nodeType":"1296","messageId":"1297","endLine":11,"endColumn":8},{"ruleId":"1294","severity":1,"message":"1593","line":12,"column":3,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1446","line":13,"column":3,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1430","line":15,"column":3,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1431","line":16,"column":3,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1594","line":17,"column":3,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":9},{"ruleId":"1294","severity":1,"message":"1542","line":18,"column":3,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":6},{"ruleId":"1294","severity":1,"message":"1375","line":21,"column":10,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1555","line":28,"column":10,"nodeType":"1296","messageId":"1297","endLine":28,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1556","line":29,"column":10,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1557","line":36,"column":7,"nodeType":"1296","messageId":"1297","endLine":36,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1560","line":172,"column":9,"nodeType":"1296","messageId":"1297","endLine":172,"endColumn":23},{"ruleId":"1404","severity":1,"message":"1405","line":182,"column":20,"nodeType":"1363","messageId":"1346","endLine":182,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1561","line":201,"column":9,"nodeType":"1296","messageId":"1297","endLine":201,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1595","line":22,"column":5,"nodeType":"1296","messageId":"1297","endLine":22,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1596","line":28,"column":9,"nodeType":"1296","messageId":"1297","endLine":28,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1597","line":29,"column":9,"nodeType":"1296","messageId":"1297","endLine":29,"endColumn":11},{"ruleId":"1294","severity":1,"message":"1302","line":1,"column":17,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1598","line":6,"column":22,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":30},{"ruleId":"1389","severity":1,"message":"1390","line":52,"column":25,"nodeType":"1352","endLine":52,"endColumn":66},{"ruleId":"1294","severity":1,"message":"1599","line":9,"column":8,"nodeType":"1296","messageId":"1297","endLine":9,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1524","line":12,"column":3,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":7},{"ruleId":"1294","severity":1,"message":"1508","line":21,"column":8,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1600","line":144,"column":16,"nodeType":"1296","messageId":"1297","endLine":144,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1601","line":183,"column":9,"nodeType":"1296","messageId":"1297","endLine":183,"endColumn":26},{"ruleId":"1389","severity":1,"message":"1390","line":277,"column":17,"nodeType":"1352","endLine":280,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1357","line":1,"column":48,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":65},{"ruleId":"1294","severity":1,"message":"1508","line":5,"column":8,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1313","line":7,"column":19,"nodeType":"1296","messageId":"1297","endLine":7,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1558","line":13,"column":5,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1315","line":14,"column":5,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1514","line":15,"column":5,"nodeType":"1296","messageId":"1297","endLine":15,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1559","line":16,"column":18,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":24},{"ruleId":"1294","severity":1,"message":"1515","line":18,"column":9,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":17},{"ruleId":"1404","severity":1,"message":"1405","line":117,"column":41,"nodeType":"1363","messageId":"1346","endLine":117,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":120,"column":45,"nodeType":"1363","messageId":"1346","endLine":120,"endColumn":47},{"ruleId":"1404","severity":1,"message":"1405","line":121,"column":41,"nodeType":"1363","messageId":"1346","endLine":121,"endColumn":43},{"ruleId":"1404","severity":1,"message":"1405","line":123,"column":31,"nodeType":"1363","messageId":"1346","endLine":123,"endColumn":33},{"ruleId":"1404","severity":1,"message":"1405","line":127,"column":41,"nodeType":"1363","messageId":"1346","endLine":127,"endColumn":43},{"ruleId":"1294","severity":1,"message":"1508","line":4,"column":8,"nodeType":"1296","messageId":"1297","endLine":4,"endColumn":14},{"ruleId":"1343","severity":1,"message":"1422","line":25,"column":9,"nodeType":"1345","messageId":"1346","endLine":25,"endColumn":32},{"ruleId":"1294","severity":1,"message":"1357","line":5,"column":3,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":20},{"ruleId":"1294","severity":1,"message":"1358","line":6,"column":3,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1339","line":10,"column":3,"nodeType":"1296","messageId":"1297","endLine":10,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1395","line":13,"column":3,"nodeType":"1296","messageId":"1297","endLine":13,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1335","line":16,"column":17,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":27},{"ruleId":"1294","severity":1,"message":"1303","line":16,"column":29,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":38},{"ruleId":"1294","severity":1,"message":"1313","line":18,"column":19,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1341","line":22,"column":8,"nodeType":"1296","messageId":"1297","endLine":22,"endColumn":19},{"ruleId":"1602","severity":1,"message":"1603","line":25,"column":3,"nodeType":"1604","messageId":"1605","endLine":27,"endColumn":4},{"ruleId":"1294","severity":1,"message":"1315","line":55,"column":5,"nodeType":"1296","messageId":"1297","endLine":55,"endColumn":12},{"ruleId":"1294","severity":1,"message":"1486","line":110,"column":10,"nodeType":"1296","messageId":"1297","endLine":110,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1487","line":110,"column":16,"nodeType":"1296","messageId":"1297","endLine":110,"endColumn":23},{"ruleId":"1343","severity":1,"message":"1606","line":232,"column":3,"nodeType":"1345","messageId":"1346","endLine":232,"endColumn":8},{"ruleId":"1294","severity":1,"message":"1508","line":3,"column":8,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1607","line":8,"column":10,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":15},{"ruleId":"1294","severity":1,"message":"1608","line":8,"column":16,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":24},{"ruleId":"1389","severity":1,"message":"1390","line":106,"column":15,"nodeType":"1352","endLine":106,"endColumn":62},{"ruleId":"1389","severity":1,"message":"1390","line":146,"column":15,"nodeType":"1352","endLine":146,"endColumn":48},{"ruleId":"1389","severity":1,"message":"1390","line":174,"column":15,"nodeType":"1352","endLine":174,"endColumn":58},{"ruleId":"1389","severity":1,"message":"1390","line":217,"column":15,"nodeType":"1352","endLine":217,"endColumn":51},{"ruleId":"1389","severity":1,"message":"1390","line":245,"column":15,"nodeType":"1352","endLine":245,"endColumn":65},{"ruleId":"1389","severity":1,"message":"1390","line":273,"column":15,"nodeType":"1352","endLine":273,"endColumn":61},{"ruleId":"1389","severity":1,"message":"1390","line":315,"column":15,"nodeType":"1352","endLine":315,"endColumn":69},{"ruleId":"1389","severity":1,"message":"1390","line":343,"column":15,"nodeType":"1352","endLine":343,"endColumn":61},{"ruleId":"1389","severity":1,"message":"1390","line":371,"column":15,"nodeType":"1352","endLine":371,"endColumn":61},{"ruleId":"1389","severity":1,"message":"1390","line":414,"column":15,"nodeType":"1352","endLine":414,"endColumn":58},{"ruleId":"1389","severity":1,"message":"1390","line":445,"column":15,"nodeType":"1352","endLine":445,"endColumn":62},{"ruleId":"1389","severity":1,"message":"1390","line":473,"column":15,"nodeType":"1352","endLine":473,"endColumn":52},{"ruleId":"1294","severity":1,"message":"1586","line":1,"column":8,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1609","line":5,"column":13,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1431","line":2,"column":16,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1430","line":2,"column":24,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":32},{"ruleId":"1294","severity":1,"message":"1610","line":2,"column":34,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":39},{"ruleId":"1294","severity":1,"message":"1611","line":3,"column":26,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":42},{"ruleId":"1294","severity":1,"message":"1612","line":5,"column":10,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1613","line":5,"column":20,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1308","line":6,"column":8,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1508","line":12,"column":8,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1614","line":16,"column":20,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1615","line":16,"column":27,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":32},{"ruleId":"1294","severity":1,"message":"1616","line":16,"column":49,"nodeType":"1296","messageId":"1297","endLine":16,"endColumn":55},{"ruleId":"1294","severity":1,"message":"1617","line":18,"column":9,"nodeType":"1296","messageId":"1297","endLine":18,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1618","line":21,"column":17,"nodeType":"1296","messageId":"1297","endLine":21,"endColumn":25},{"ruleId":"1389","severity":1,"message":"1390","line":28,"column":10,"nodeType":"1352","endLine":28,"endColumn":27},{"ruleId":"1294","severity":1,"message":"1431","line":2,"column":16,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":22},{"ruleId":"1294","severity":1,"message":"1430","line":2,"column":24,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":32},{"ruleId":"1294","severity":1,"message":"1610","line":2,"column":34,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":39},{"ruleId":"1294","severity":1,"message":"1611","line":3,"column":26,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":42},{"ruleId":"1294","severity":1,"message":"1612","line":5,"column":10,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1613","line":5,"column":20,"nodeType":"1296","messageId":"1297","endLine":5,"endColumn":23},{"ruleId":"1294","severity":1,"message":"1308","line":6,"column":8,"nodeType":"1296","messageId":"1297","endLine":6,"endColumn":18},{"ruleId":"1294","severity":1,"message":"1508","line":12,"column":8,"nodeType":"1296","messageId":"1297","endLine":12,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1619","line":14,"column":8,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1614","line":17,"column":20,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1615","line":17,"column":27,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":32},{"ruleId":"1294","severity":1,"message":"1616","line":17,"column":49,"nodeType":"1296","messageId":"1297","endLine":17,"endColumn":55},{"ruleId":"1294","severity":1,"message":"1617","line":19,"column":9,"nodeType":"1296","messageId":"1297","endLine":19,"endColumn":14},{"ruleId":"1294","severity":1,"message":"1618","line":22,"column":17,"nodeType":"1296","messageId":"1297","endLine":22,"endColumn":25},{"ruleId":"1294","severity":1,"message":"1620","line":14,"column":10,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":29},{"ruleId":"1294","severity":1,"message":"1621","line":14,"column":31,"nodeType":"1296","messageId":"1297","endLine":14,"endColumn":53},{"ruleId":"1294","severity":1,"message":"1622","line":25,"column":12,"nodeType":"1296","messageId":"1297","endLine":25,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1623","line":28,"column":12,"nodeType":"1296","messageId":"1297","endLine":28,"endColumn":19},{"ruleId":"1294","severity":1,"message":"1372","line":9,"column":3,"nodeType":"1296","messageId":"1297","endLine":9,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1624","line":3,"column":10,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":21},{"ruleId":"1294","severity":1,"message":"1625","line":3,"column":23,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":38},{"ruleId":"1294","severity":1,"message":"1626","line":3,"column":40,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":57},{"ruleId":"1389","severity":1,"message":"1390","line":53,"column":17,"nodeType":"1352","endLine":53,"endColumn":72},{"ruleId":"1389","severity":1,"message":"1390","line":77,"column":27,"nodeType":"1352","endLine":77,"endColumn":113},{"ruleId":"1389","severity":1,"message":"1390","line":77,"column":114,"nodeType":"1352","endLine":77,"endColumn":196},{"ruleId":"1389","severity":1,"message":"1390","line":94,"column":17,"nodeType":"1352","endLine":94,"endColumn":61},{"ruleId":"1389","severity":1,"message":"1390","line":112,"column":31,"nodeType":"1352","endLine":112,"endColumn":90},{"ruleId":"1389","severity":1,"message":"1390","line":112,"column":91,"nodeType":"1352","endLine":112,"endColumn":173},{"ruleId":"1389","severity":1,"message":"1390","line":130,"column":17,"nodeType":"1352","endLine":130,"endColumn":61},{"ruleId":"1389","severity":1,"message":"1390","line":148,"column":33,"nodeType":"1352","endLine":148,"endColumn":70},{"ruleId":"1389","severity":1,"message":"1390","line":148,"column":71,"nodeType":"1352","endLine":148,"endColumn":153},{"ruleId":"1389","severity":1,"message":"1390","line":164,"column":17,"nodeType":"1352","endLine":164,"endColumn":61},{"ruleId":"1389","severity":1,"message":"1390","line":182,"column":26,"nodeType":"1352","endLine":182,"endColumn":85},{"ruleId":"1389","severity":1,"message":"1390","line":182,"column":86,"nodeType":"1352","endLine":182,"endColumn":169},{"ruleId":"1389","severity":1,"message":"1390","line":199,"column":17,"nodeType":"1352","endLine":199,"endColumn":78},{"ruleId":"1389","severity":1,"message":"1390","line":217,"column":29,"nodeType":"1352","endLine":217,"endColumn":66},{"ruleId":"1389","severity":1,"message":"1390","line":217,"column":67,"nodeType":"1352","endLine":217,"endColumn":151},{"ruleId":"1389","severity":1,"message":"1390","line":250,"column":32,"nodeType":"1352","endLine":250,"endColumn":69},{"ruleId":"1389","severity":1,"message":"1390","line":250,"column":70,"nodeType":"1352","endLine":250,"endColumn":156},{"ruleId":"1389","severity":1,"message":"1390","line":283,"column":31,"nodeType":"1352","endLine":283,"endColumn":73},{"ruleId":"1389","severity":1,"message":"1390","line":283,"column":74,"nodeType":"1352","endLine":283,"endColumn":160},{"ruleId":"1294","severity":1,"message":"1627","line":2,"column":8,"nodeType":"1296","messageId":"1297","endLine":2,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1628","line":3,"column":10,"nodeType":"1296","messageId":"1297","endLine":3,"endColumn":16},{"ruleId":"1294","severity":1,"message":"1299","line":8,"column":8,"nodeType":"1296","messageId":"1297","endLine":8,"endColumn":13},{"ruleId":"1294","severity":1,"message":"1629","line":1,"column":55,"nodeType":"1296","messageId":"1297","endLine":1,"endColumn":72},"no-native-reassign",["1630"],"no-negated-in-lhs",["1631"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'ApolloProvider' is defined but never used.","'axios' is defined but never used.","'setAuth' is assigned a value but never used.","'apolloClient' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Fade' is defined but never used.","'classnames' is defined but never used.","'logo' is defined but never used.","'google' is defined but never used.","'useParams' is defined but never used.","'loginUser' is defined but never used.","'Controller' is defined but never used.","'history' is assigned a value but never used.","'control' is assigned a value but never used.","'response' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'gql' is defined but never used.","'useMutation' is defined but never used.","'loginValue' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'mobileRegExp' is assigned a value but never used.","'_' is assigned a value but never used.","'setAuthToken' is assigned a value but never used.","'removeAuthtoken' is assigned a value but never used.","'Audio' is defined but never used.","'Login' is defined but never used.","'LoginWithPhone' is defined but never used.","'SmsVerification' is defined but never used.","'CalenderProject' is defined but never used.","'JobCalender' is defined but never used.","'useContext' is defined but never used.","'CircularProgress' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'OutlinedInput' is defined but never used.","'IconButton' is defined but never used.","'AuthContext' is defined but never used.","'userDispatch' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","unexpected","Duplicate key 'alignLeft'.","'Image' is defined but never used.","'ThemeProvider' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Button' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Link' is defined but never used.","'AddJob' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["1632"],"'descriptionElementRef' is assigned a value but never used.","'formatDate' is defined but never used.","'Popper' is defined but never used.","'Typography' is defined but never used.","'Children' is defined but never used.","'PageTitle' is defined but never used.","'makeStyles' is defined but never used.","'Delete' is defined but never used.","'EditIcon' is defined but never used.","'MTableToolbar' is defined but never used.","'CompanyAddList' is defined but never used.","'SearchBar' is defined but never used.","'ApiaryAddList' is defined but never used.","'ApiaryUpdateList' is defined but never used.","'Adduser' is defined but never used.","'NavLink' is defined but never used.","'useRouteMatch' is defined but never used.","'toolbar' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleEditOpen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'buf' is assigned a value but never used.","'cancelSearch' is assigned a value but never used.","'add' is assigned a value but never used.","Duplicate key 'body'.","'TextField' is defined but never used.","'image' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["1633"],["1634"],"no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1635","text":"1636"},{"range":"1637","text":"1636"},"'LinearProgress' is defined but never used.","'useStyles' is defined but never used.","Duplicate key 'color'.","Duplicate key '&\t.MuiSelect-outlined'.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"1638","text":"1639"},"'Add' is defined but never used.","'ExpandMore' is defined but never used.","'Minimize' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'DatePicker' is defined but never used.","'TimePicker' is defined but never used.","'date' is defined but never used.","'Person' is defined but never used.","'start' is assigned a value but never used.","'setStart' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.",["1640"],"'reza' is assigned a value but never used.","'path' is assigned a value but never used.","'FILE_SIZE' is assigned a value but never used.","'fileRef' is assigned a value but never used.","'fileUploadHandler' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'error' is assigned a value but never used.","'setIserror' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property hivesWithBadCondition.","MemberExpression","unexpectedWhitespace",{"range":"1641","text":"1642"},"React Hook useEffect has missing dependencies: 'edit_id' and 'token'. Either include them or remove the dependency array.",["1643"],"'id' is assigned a value but never used.","'Paper' is defined but never used.","'Fragment' is defined but never used.","'ApiaryList' is defined but never used.","Duplicate key 'border'.","'PinBar' is defined but never used.","'ControlPanel' is defined but never used.","'initialViewState' is assigned a value but never used.","'events' is assigned a value but never used.","'createTheme' is defined but never used.","'Info' is defined but never used.","'TrainRounded' is defined but never used.","'TramRounded' is defined but never used.","'useQuery' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'getNamedType' is defined but never used.","'handleDeleteOpen' is assigned a value but never used.","Duplicate key 'apiaryUsage'.","React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["1644"],"'downloadExcel' is assigned a value but never used.","'Youtube' is defined but never used.","'axiosInstance' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'auth', 'history', and 'token'. Either include them or remove the dependency array.",["1645"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["1646"],["1647"],{"range":"1648","text":"1636"},{"range":"1649","text":"1636"},"'ArrowLeft' is defined but never used.","'CallMissedSharp' is defined but never used.","'styled' is defined but never used.","'useHistory' is defined but never used.","'borderColor' is assigned a value but never used.","'setborderColort' is assigned a value but never used.","'changeColor' is assigned a value but never used.","'newTicket' is assigned a value but never used.","'loading' is assigned a value but never used.","'show' is assigned a value but never used.",["1650"],"'Avatar' is defined but never used.","'Widget' is defined but never used.","'Divider' is defined but never used.","'FormGroup' is defined but never used.","'Switch' is defined but never used.","'AddSubmitCode' is defined but never used.","'withStyles' is defined but never used.","'handleSubmit' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'url' is assigned a value but never used.","'Route' is defined but never used.","'Chart' is defined but never used.","'ResponsiveContainer' is defined but never used.","'ComposedChart' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'YAxis' is defined but never used.","'XAxis' is defined but never used.","'WebHiveSubmit' is defined but never used.","'Title' is defined but never used.","'Close' is defined but never used.","'Edit' is defined but never used.","'MoreVertOutlined' is defined but never used.","'Share' is defined but never used.","'location' is assigned a value but never used.","'setCompany' is assigned a value but never used.",["1651"],["1652"],"'onRowDelete' is assigned a value but never used.","'register' is defined but never used.","'Box' is defined but never used.","'useTheme' is defined but never used.","'Dot' is defined but never used.","'Table' is defined but never used.","'ApexLineChart' is defined but never used.","'getMainChartData' is defined but never used.","'Modal' is defined but never used.","'isLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'phoneRegExp' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","Duplicate key 'fontWeight'.","'ButtonGroup' is defined but never used.","'ChangeHistory' is defined but never used.","'yupResolver' is defined but never used.","'validationSchema' is assigned a value but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'isStepOptional' is assigned a value but never used.","'handleSkip' is assigned a value but never used.","'HomeIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'ArrowBackIcon' is defined but never used.","'MenuIcon' is defined but never used.","'LocationCity' is defined but never used.","'TableChart' is defined but never used.","'Accessibility' is defined but never used.","'layoutState' is assigned a value but never used.","'Fab' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'UserAvatar' is defined but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'maxSteps' is assigned a value but never used.","'SpeakerPhoneSharp' is defined but never used.","'React' is defined but never used.","'useAuth' is defined but never used.","'refresh' is assigned a value but never used.","'prevRequest' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userDispatch'. Either include it or remove the dependency array.",["1653"],"'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'Slider' is defined but never used.","'payload' is assigned a value but never used.","'sx' is assigned a value but never used.","'sy' is assigned a value but never used.","'MoreIcon' is defined but never used.","'MaterialTable' is defined but never used.","'setDate' is assigned a value but never used.","'CustomizedTooltip' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Duplicate key 'input'.","'cards' is assigned a value but never used.","'setCards' is assigned a value but never used.","'auth' is assigned a value but never used.","'Input' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'BarChart' is defined but never used.","'Bar' is defined but never used.","'total' is assigned a value but never used.","'color' is assigned a value but never used.","'bounce' is assigned a value but never used.","'theme' is assigned a value but never used.","'setValue' is assigned a value but never used.","'Bardia' is defined but never used.","'ArrowBackIosRounded' is defined but never used.","'ArrowForwardIosRounded' is defined but never used.","'prevDay' is defined but never used.","'nextDay' is defined but never used.","'DoneRounded' is defined but never used.","'MinimizeRounded' is defined but never used.","'VisibilityRounded' is defined but never used.","'ReactDOM' is defined but never used.","'Formik' is defined but never used.","'ArrowRightTwoTone' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1654","fix":"1655"},{"desc":"1656","fix":"1657"},{"desc":"1656","fix":"1658"},[16558,16558]," rel=\"noreferrer\"",[17614,17614],[-1,0],"",{"desc":"1654","fix":"1659"},[3124,3126],".",{"desc":"1660","fix":"1661"},{"desc":"1662","fix":"1663"},{"desc":"1664","fix":"1665"},{"desc":"1656","fix":"1666"},{"desc":"1656","fix":"1667"},[15867,15867],[16921,16921],{"desc":"1654","fix":"1668"},{"desc":"1656","fix":"1669"},{"desc":"1654","fix":"1670"},{"desc":"1671","fix":"1672"},"Update the dependencies array to be: [token]",{"range":"1673","text":"1674"},"Update the dependencies array to be: [id, token]",{"range":"1675","text":"1676"},{"range":"1677","text":"1676"},{"range":"1678","text":"1674"},"Update the dependencies array to be: [edit_id, reset, token]",{"range":"1679","text":"1680"},"Update the dependencies array to be: [history, token]",{"range":"1681","text":"1682"},"Update the dependencies array to be: [auth, history, token]",{"range":"1683","text":"1684"},{"range":"1685","text":"1676"},{"range":"1686","text":"1676"},{"range":"1687","text":"1674"},{"range":"1688","text":"1676"},{"range":"1689","text":"1674"},"Update the dependencies array to be: [auth, userDispatch]",{"range":"1690","text":"1691"},[2138,2140],"[token]",[2278,2280],"[id, token]",[2975,2977],[4238,4240],[3754,3761],"[edit_id, reset, token]",[6827,6829],"[history, token]",[2827,2829],"[auth, history, token]",[2267,2269],[2964,2966],[2047,2049],[5455,5457],[6633,6635],[1940,1946],"[auth, userDispatch]"]