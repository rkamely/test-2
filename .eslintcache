[{"D:\\پروژه کندو\\CandoProject-master\\src\\index.js":"1","D:\\پروژه کندو\\CandoProject-master\\src\\serviceWorker.js":"2","D:\\پروژه کندو\\CandoProject-master\\src\\context\\UserContext.js":"3","D:\\پروژه کندو\\CandoProject-master\\src\\context\\LayoutContext.js":"4","D:\\پروژه کندو\\CandoProject-master\\src\\components\\App.js":"5","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\context\\AuthProvider.js":"6","D:\\پروژه کندو\\CandoProject-master\\src\\components\\config\\apolloClient.js":"7","D:\\پروژه کندو\\CandoProject-master\\src\\themes\\index.js":"8","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\login\\CompleteInformation.js":"9","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\login\\SmsVerification.js":"10","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\error\\Error.js":"11","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\login\\Login.js":"12","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\login\\styles.js":"13","D:\\پروژه کندو\\CandoProject-master\\src\\components\\config\\auth.js":"14","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Layout\\Layout.js":"15","D:\\پروژه کندو\\CandoProject-master\\src\\themes\\default.js":"16","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\api\\axios.js":"17","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\AboutUsMain\\AboutUsMain.js":"18","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Login\\Login.js":"19","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportMessage\\SupportMessage.js":"20","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportPage\\SupportPage.js":"21","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\FrequentlyQuestions\\FrequentlyQuestions.js":"22","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\HiveStatus.js":"23","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Audio.js":"24","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\CalenderProject.js":"25","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\main.js":"26","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\Support.js":"27","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\JobCalender\\JobCalender.js":"28","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\Setting\\Edituser.js":"29","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\ApiaryList\\ApiaryList.js":"30","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Hive.js":"31","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\User\\TableofUser.js":"32","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Style.js":"33","D:\\پروژه کندو\\CandoProject-master\\src\\Iran-Sans-normal.js":"34","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\User\\styles.js":"35","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\Style.js":"36","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Typography\\Title\\Title.js":"37","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\User\\Adduser.js":"38","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\User\\EditUser.js":"39","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\ApiaryList\\ApiaryUpdateList.js":"40","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\User\\PreviewImage.js":"41","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\ApiaryList\\styles.js":"42","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\User\\styles.js":"43","D:\\پروژه کندو\\CandoProject-master\\src\\components\\MapBox\\MapBox.js":"44","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\ApiaryList\\ApiaryAddList.js":"45","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Hive\\styles.js":"46","D:\\پروژه کندو\\CandoProject-master\\src\\components\\PageTitle\\PageTitle.js":"47","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\Setting\\AddSubmitCode.js":"48","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\Setting\\EditPhoneNumber.js":"49","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\Setting\\styles.js":"50","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\style.js":"51","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\JobUser\\AddJob.js":"52","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\FilterCalender.js":"53","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\event-utils.js":"54","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\addTicket.js":"55","D:\\پروژه کندو\\CandoProject-master\\src\\components\\PageTitle\\styles.js":"56","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\webHiveSubmit.js":"57","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\LeftCard.js":"58","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\RightTopCard.js":"59","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\FrequentlyQuestions\\Styles.js":"60","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\charts\\components\\ApexLineChart.js":"61","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportPage\\Style.js":"62","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\charts\\PieCharts.js":"63","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Diagram.js":"64","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Widget\\Widget.js":"65","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Login\\Style.js":"66","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Chart\\Chart.js":"67","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportMessage\\Style.js":"68","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\AboutUsMain\\styles.js":"69","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\JobUser\\styles.js":"70","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\tableDiagram.js":"71","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Wrappers\\Wrappers.js":"72","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Sidebar\\components\\Dot.js":"73","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Widget\\styles.js":"74","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Layout\\styles.js":"75","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\error\\styles.js":"76","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Sidebar\\Sidebar.js":"77","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\typography\\Typography.js":"78","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Header\\Header.js":"79","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\Dashboard.js":"80","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Sidebar\\styles.js":"81","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"82","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\typography\\styles.js":"83","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Header\\styles.js":"84","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\mock.js":"85","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\styles.js":"86","D:\\پروژه کندو\\CandoProject-master\\src\\components\\UserAvatar\\UserAvatar.js":"87","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Calender\\Calender.js":"88","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\components\\Table\\Table.js":"89","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"90","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\BigStat2.js":"91","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"92","D:\\پروژه کندو\\CandoProject-master\\src\\components\\UserAvatar\\styles.js":"93","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"94","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Calender\\dayStyle.js":"95","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Calender\\buildCalender.js":"96","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Calender\\CalenderHeader.js":"97","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Calender\\styles.js":"98","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\CategoryForm\\Bardiaadd.js":"99"},{"size":1536,"mtime":1653370407157,"results":"100","hashOfConfig":"101"},{"size":4948,"mtime":1648869368000,"results":"102","hashOfConfig":"101"},{"size":2195,"mtime":1653377788563,"results":"103","hashOfConfig":"101"},{"size":1392,"mtime":1648869368000,"results":"104","hashOfConfig":"101"},{"size":2661,"mtime":1653395421728,"results":"105","hashOfConfig":"101"},{"size":356,"mtime":1653370407164,"results":"106","hashOfConfig":"101"},{"size":865,"mtime":1651899340369,"results":"107","hashOfConfig":"101"},{"size":558,"mtime":1648869368000,"results":"108","hashOfConfig":"101"},{"size":5707,"mtime":1653393862378,"results":"109","hashOfConfig":"101"},{"size":6871,"mtime":1653395315506,"results":"110","hashOfConfig":"101"},{"size":1651,"mtime":1652610893529,"results":"111","hashOfConfig":"101"},{"size":4586,"mtime":1653379860912,"results":"112","hashOfConfig":"101"},{"size":5841,"mtime":1653392732495,"results":"113","hashOfConfig":"101"},{"size":727,"mtime":1651899340369,"results":"114","hashOfConfig":"101"},{"size":3785,"mtime":1653391043387,"results":"115","hashOfConfig":"101"},{"size":4993,"mtime":1653370407168,"results":"116","hashOfConfig":"101"},{"size":257,"mtime":1653370407158,"results":"117","hashOfConfig":"101"},{"size":2582,"mtime":1649224512385,"results":"118","hashOfConfig":"101"},{"size":667,"mtime":1648869368000,"results":"119","hashOfConfig":"101"},{"size":4236,"mtime":1648869368000,"results":"120","hashOfConfig":"101"},{"size":7334,"mtime":1650085013486,"results":"121","hashOfConfig":"101"},{"size":10812,"mtime":1650085013485,"results":"122","hashOfConfig":"101"},{"size":3907,"mtime":1651294778009,"results":"123","hashOfConfig":"101"},{"size":6149,"mtime":1648869368000,"results":"124","hashOfConfig":"101"},{"size":6715,"mtime":1653370407159,"results":"125","hashOfConfig":"101"},{"size":3182,"mtime":1653370407161,"results":"126","hashOfConfig":"101"},{"size":4152,"mtime":1653370407162,"results":"127","hashOfConfig":"101"},{"size":29113,"mtime":1653370407160,"results":"128","hashOfConfig":"101"},{"size":7731,"mtime":1653370407155,"results":"129","hashOfConfig":"101"},{"size":29169,"mtime":1653370407159,"results":"130","hashOfConfig":"101"},{"size":26471,"mtime":1653370407161,"results":"131","hashOfConfig":"101"},{"size":49011,"mtime":1653370407164,"results":"132","hashOfConfig":"101"},{"size":3834,"mtime":1651039690521,"results":"133","hashOfConfig":"101"},{"size":167930,"mtime":1648869368000,"results":"134","hashOfConfig":"101"},{"size":1233,"mtime":1650085013489,"results":"135","hashOfConfig":"101"},{"size":2341,"mtime":1653370407162,"results":"136","hashOfConfig":"101"},{"size":274,"mtime":1650085013471,"results":"137","hashOfConfig":"101"},{"size":9582,"mtime":1653370407155,"results":"138","hashOfConfig":"101"},{"size":9774,"mtime":1653370407156,"results":"139","hashOfConfig":"101"},{"size":12848,"mtime":1653370407152,"results":"140","hashOfConfig":"101"},{"size":496,"mtime":1653370407156,"results":"141","hashOfConfig":"101"},{"size":4942,"mtime":1653370407153,"results":"142","hashOfConfig":"101"},{"size":5918,"mtime":1653370407156,"results":"143","hashOfConfig":"101"},{"size":819,"mtime":1650775936365,"results":"144","hashOfConfig":"101"},{"size":11136,"mtime":1653370407152,"results":"145","hashOfConfig":"101"},{"size":1233,"mtime":1650085013483,"results":"146","hashOfConfig":"101"},{"size":453,"mtime":1650775936366,"results":"147","hashOfConfig":"101"},{"size":2511,"mtime":1651994802935,"results":"148","hashOfConfig":"101"},{"size":3479,"mtime":1651994799703,"results":"149","hashOfConfig":"101"},{"size":6120,"mtime":1651994805571,"results":"150","hashOfConfig":"101"},{"size":1184,"mtime":1650085013481,"results":"151","hashOfConfig":"101"},{"size":21095,"mtime":1653370407154,"results":"152","hashOfConfig":"101"},{"size":4804,"mtime":1651986379700,"results":"153","hashOfConfig":"101"},{"size":398,"mtime":1649229215896,"results":"154","hashOfConfig":"101"},{"size":7711,"mtime":1653370407163,"results":"155","hashOfConfig":"101"},{"size":488,"mtime":1650775936366,"results":"156","hashOfConfig":"101"},{"size":3741,"mtime":1648869368000,"results":"157","hashOfConfig":"101"},{"size":4510,"mtime":1648869368000,"results":"158","hashOfConfig":"101"},{"size":9399,"mtime":1648869368000,"results":"159","hashOfConfig":"101"},{"size":1650,"mtime":1648869368000,"results":"160","hashOfConfig":"101"},{"size":1263,"mtime":1648869368000,"results":"161","hashOfConfig":"101"},{"size":300,"mtime":1648869368000,"results":"162","hashOfConfig":"101"},{"size":2631,"mtime":1648869368000,"results":"163","hashOfConfig":"101"},{"size":13041,"mtime":1651065071729,"results":"164","hashOfConfig":"101"},{"size":1730,"mtime":1650775936367,"results":"165","hashOfConfig":"101"},{"size":95,"mtime":1648869368000,"results":"166","hashOfConfig":"101"},{"size":656,"mtime":1648869368000,"results":"167","hashOfConfig":"101"},{"size":0,"mtime":1648869368000,"results":"168","hashOfConfig":"101"},{"size":218,"mtime":1649224510089,"results":"169","hashOfConfig":"101"},{"size":6765,"mtime":1653370407154,"results":"170","hashOfConfig":"101"},{"size":8647,"mtime":1648869368000,"results":"171","hashOfConfig":"101"},{"size":3790,"mtime":1648869368000,"results":"172","hashOfConfig":"101"},{"size":862,"mtime":1648869368000,"results":"173","hashOfConfig":"101"},{"size":1058,"mtime":1650775936368,"results":"174","hashOfConfig":"101"},{"size":680,"mtime":1653390887017,"results":"175","hashOfConfig":"101"},{"size":1336,"mtime":1652610919984,"results":"176","hashOfConfig":"101"},{"size":5879,"mtime":1652611316745,"results":"177","hashOfConfig":"101"},{"size":4516,"mtime":1648869368000,"results":"178","hashOfConfig":"101"},{"size":6285,"mtime":1650775936364,"results":"179","hashOfConfig":"101"},{"size":16050,"mtime":1651900089993,"results":"180","hashOfConfig":"101"},{"size":1709,"mtime":1648869368000,"results":"181","hashOfConfig":"101"},{"size":4716,"mtime":1650085013468,"results":"182","hashOfConfig":"101"},{"size":374,"mtime":1648869368000,"results":"183","hashOfConfig":"101"},{"size":4298,"mtime":1648869368000,"results":"184","hashOfConfig":"101"},{"size":9415,"mtime":1650085013493,"results":"185","hashOfConfig":"101"},{"size":1290,"mtime":1651036382011,"results":"186","hashOfConfig":"101"},{"size":593,"mtime":1648869368000,"results":"187","hashOfConfig":"101"},{"size":2292,"mtime":1650950822022,"results":"188","hashOfConfig":"101"},{"size":1274,"mtime":1648869368000,"results":"189","hashOfConfig":"101"},{"size":1808,"mtime":1650085013491,"results":"190","hashOfConfig":"101"},{"size":1645,"mtime":1650085013491,"results":"191","hashOfConfig":"101"},{"size":1579,"mtime":1650085013469,"results":"192","hashOfConfig":"101"},{"size":276,"mtime":1648869368000,"results":"193","hashOfConfig":"101"},{"size":1883,"mtime":1650085013492,"results":"194","hashOfConfig":"101"},{"size":448,"mtime":1650195837382,"results":"195","hashOfConfig":"101"},{"size":549,"mtime":1650948787995,"results":"196","hashOfConfig":"101"},{"size":999,"mtime":1650948787994,"results":"197","hashOfConfig":"101"},{"size":1016,"mtime":1650951169084,"results":"198","hashOfConfig":"101"},{"size":5228,"mtime":1651992955703,"results":"199","hashOfConfig":"101"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rxxhoj",{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"214"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"214"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"214"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"214"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"214"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"214"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"214"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"214"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"214"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"214"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"214"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"214"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"214"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"214"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"214"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"214"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"214"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"214"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"214"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"214"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"214"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"214"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"214"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"214"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"214"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"214"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"214"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"214"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"214"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"214"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"214"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"214"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"214"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"214"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"214"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"214"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"214"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"214"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"214"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"214"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"214"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"214"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"214"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"214"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"214"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"214"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"214"},"D:\\پروژه کندو\\CandoProject-master\\src\\index.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\serviceWorker.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\context\\UserContext.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\context\\LayoutContext.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\App.js",["445","446","447","448","449"],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\context\\AuthProvider.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\config\\apolloClient.js",[],["450","451"],"D:\\پروژه کندو\\CandoProject-master\\src\\themes\\index.js",["452"],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\login\\CompleteInformation.js",["453","454","455","456","457","458","459","460","461","462","463","464","465","466"],"import React, { useContext, useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\nimport \"./styles.css\";\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\nimport { useParams, useHistory } from \"react-router\";\n\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"../api/axios\";\nimport AuthContext from \"../context/AuthProvider\";\n\nfunction CompleteInformation(props) {\n  var classes = useStyles();\n  const history = useHistory();\n  const { auth , setAuth } = useContext(AuthContext);\nconsole.log(\"Auth\",auth);\nconsole.log(\"setAuth\",setAuth);\n  // global\n  var userDispatch = useUserDispatch();\n  // const phoneRegExp = /09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/\n  const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/;\n\n  const validationSchema = yup.object().shape({\n    Username: yup.string().required(\"لطفا نام کاربری خود را وارد کنید\"),\n    name: yup.string().required(\"لطفا نام خود را وارد کنید\"),\n    family: yup.string().required(\"لطفا نام خانوادگی خود را وارد کنید\"),\n    email: yup.string().email(\"لطفا ایمیل معتبر وارد کنید\"),\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n  const onSubmit = async (data) => {\n    console.log(JSON.stringify(data, null, 2));\n    alert(JSON.stringify(data, null, 2));\n    try {\n      setIsLoading(true);\n      // const response = await axios\n      //   .post(\n      //     \"http://188.121.121.225/api/auth/verify\",\n      //     {},\n      //     {\n      //       headers: { \"Content-Type\": \"application/json\" },\n      //       withCredentials: true,\n      //     },\n      //   )\n      //   .then((respons) => respons.data);\n      userDispatch({ type: \"LOGIN_SUCCESS\" });\n    \n    } catch (err) {\n      console.log(\"err.response\", err.response);\n    }\n  };\n  // local\n\n  return (\n    <div className=\"containerLogin\">\n      <div className=\"contact-form\">\n        {/* <img alt=\"\" className=\"avatar\" src=\"/assets/Untitled-1.svg\"/> */}\n        <h2>اطلاعات</h2>\n        <p>اطلاعات شخصی خود را وارد کنید</p>\n\n        <TextField\n          style={{ direction: \"ltr\" }}\n          className={classes.TextField}\n          label=\"نام کاربری\"\n          id=\"Username\"\n          name=\"Username\"\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          size=\"small\"\n          {...register(\"Username\")}\n          error={errors.phoneNumber ? true : false}\n        />\n        <Typography\n          variant=\"inherit\"\n          color=\"textSecondary\"\n          style={{ color: \"red\" }}\n        >\n          {errors.Username?.message}\n        </Typography>\n\n        <TextField\n          style={{ direction: \"ltr\" }}\n          className={classes.TextField}\n          label=\"نام\"\n          id=\"name\"\n          name=\"name\"\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          size=\"small\"\n          {...register(\"name\")}\n          error={errors.phoneNumber ? true : false}\n        />\n        <Typography\n          variant=\"inherit\"\n          color=\"textSecondary\"\n          style={{ color: \"red\" }}\n        >\n          {errors.name?.message}\n        </Typography>\n\n        <TextField\n          style={{ direction: \"ltr\" }}\n          className={classes.TextField}\n          label=\"نام خانوادگی\"\n          id=\"family\"\n          name=\"family\"\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          size=\"small\"\n          {...register(\"family\")}\n          error={errors.phoneNumber ? true : false}\n        />\n        <Typography\n          variant=\"inherit\"\n          color=\"textSecondary\"\n          style={{ color: \"red\" }}\n        >\n          {errors.family?.message}\n        </Typography>\n\n        <TextField\n          style={{ direction: \"ltr\" }}\n          className={classes.TextField}\n          label=\"ایمیل\"\n          id=\"email\"\n          name=\"email\"\n          variant=\"outlined\"\n          fullWidth\n          margin=\"normal\"\n          size=\"small\"\n          {...register(\"email\")}\n          error={errors.phoneNumber ? true : false}\n        />\n        <Typography\n          variant=\"inherit\"\n          color=\"textSecondary\"\n          style={{ color: \"red\" }}\n        >\n          {errors.email?.message}\n        </Typography>\n        <div className={classes.ButtonAndLoading}>\n          {isLoading ? (\n            <CircularProgress size={40} className={classes.loginLoader} />\n          ) : (\n            <Button\n              // disabled={\n              //   loginValue.length === 0\n\n              // }\n              variant=\"contained\"\n              className={classes.buttonLogin}\n              onClick={handleSubmit(onSubmit)}\n            >\n              ثبت اطلاعات\n            </Button>\n          )}\n        </div>\n\n        {/* <input placeholder=\"Enter Email\" type=\"email\"/>\n\t\t\t            <input placeholder=\"Enter Password\" type=\"password\"/> <input type=\"submit\" value=\"Sign in\"/>\n\t\t            \t<p><input type=\"checkbox\"/>Remember Me</p> */}\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(CompleteInformation);\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\login\\SmsVerification.js",["467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484"],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\error\\Error.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\login\\Login.js",["485","486","487","488","489","490","491","492","493","494","495"],"import React, { useRef, useState ,useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useParams ,useHistory} from \"react-router\";\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport axios from \"../api/axios\"\r\nimport  AuthContext from  \"../context/AuthProvider\"\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport \"./styles.css\";\r\n\r\n\r\n\r\n\r\nfunction Login(props) {\r\n\r\n  const { setAuth } = useContext(AuthContext)\r\n\r\n\r\n  var classes = useStyles();\r\n  const history = useHistory();\r\n  const errRef = useRef();\r\n  const[state,setState]=useState({mobile:\"\"})\r\n  const [errMsg, setErrMsg] = useState('');\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n  // const phoneRegExp = /09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/\r\n  const phoneRegExp = /09([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/;\r\n\r\n  const validationSchema = yup.object().shape({\r\n    mobile: yup\r\n      .string()\r\n      .matches(\r\n        phoneRegExp,\r\n        \"شماره موبایل را با حروف انگلیسی وارد کنید\",\r\n      ),\r\n  });\r\n  \r\n\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  \r\n\r\nconst handleChangenumber=(event)=>{\r\n  // setState(e.target.value)\r\n  const { name, value } = event.target;\r\n  setState((prevState) => ({\r\n    ...prevState,\r\n    [name]: value\r\n  }));\r\n\r\n}\r\n\r\n\r\n console.log(\"state\",state)\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // data.preventDefault();\r\n    try{\r\n           const response = axios.post(\"http://188.121.121.225/api/auth/login\",data,{\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n           })\r\n           console.log(response.data);\r\n           console.log(JSON.stringify(response))       \r\n\r\n           history.push(\r\n           { \r\n             pathname:  \"./login/smsVerification\",\r\n             state\r\n           }\r\n           );\r\n           localStorage.setItem(\"data\",data.mobile.toString())\r\n           console.log(\"phone\", data.mobile.toString());\r\n\r\n    }catch (err) {\r\n      if (!err?.response) {\r\n          setErrMsg(' پاسخی از سرور دریافت نشد لطفا از وصل بودن اینترنت خود اطمینان حاصل نمایید و مجدد تلاش کنید');\r\n      }  else {\r\n        setErrMsg('ارتباط با سرور برقرار نشد لطفا مجدد تلاش کنید')\r\n      }\r\n\r\n      errRef.current.focus();\r\n  }\r\n \r\n  };\r\n\r\n  return (\r\n    <div className=\"containerLogin\">\r\n      <div className=\"contact-form\">\r\n     {errMsg? <p ref={errRef} className=\"errmsg\" aria-live=\"assertive\">{errMsg}</p>:null}\r\n\r\n        {/* <img alt=\"\" className=\"avatar\" src=\"/assets/Untitled-1.svg\"/> */}\r\n        <h2>ورود</h2>\r\n        <p>\r\n          برای ورود به کندووان پلاس شماره تلفن همراه خود را وارد کنید تا کد\r\n          تایید برای شما پیامک شود\r\n        </p>\r\n\r\n        <TextField\r\n          style={{ direction: \"ltr\" }}\r\n          onChange={handleChangenumber}\r\n          className={classes.TextField}\r\n          label=\"شماره موبایل\"\r\n          placeholder=\"+98 | \"\r\n          id=\"mobile\"\r\n          name=\"mobile\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n          {...register(\"mobile\")}\r\n          error={errors.mobile ? true : false}\r\n        />\r\n        <Typography\r\n          variant=\"inherit\"\r\n          color=\"textSecondary\"\r\n          style={{ color: \"rgb( 227 156 0)\" }}\r\n        >\r\n          {errors.mobile?.message}\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          className={classes.buttonLogin}\r\n          onClick={handleSubmit(onSubmit)}\r\n        >\r\n          دریافت کد تایید\r\n        </Button>\r\n\r\n        {/* <input placeholder=\"Enter Email\" type=\"email\"/>\r\n\t\t\t            <input placeholder=\"Enter Password\" type=\"password\"/> <input type=\"submit\" value=\"Sign in\"/>\r\n\t\t            \t<p><input type=\"checkbox\"/>Remember Me</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\login\\styles.js",["496"],"import { makeStyles } from \"@material-ui/styles\";\nimport Image from \"./Untitled-1.png\"; // Import using relative path\n\nexport default makeStyles((theme) => ({\n  buttonLogin: {\n    padding: \"8px 0\",\n    backgroundColor: \"rgb( 227 156 0  ) \",\n    color: \"#fff\",\n    width: \"100%\",\n    marginTop: \"32px\",\n    borderRadius: \"8px\",\n    fontFamily: \"Shabnam\",\n    fontWeight: \"600\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: \"rgb( 227 156 0  ) \",\n    },\n  },\n  TextField: {\n    width: \"100%\",\n    background: \"rgb( 244 244 244)\",\n    border: \"none\",\n    borderRadius: \"10px\",\n    \"& label.Mui-focused\": {\n      color: \"rgb( 26 ,115, 233) !important\",\n      borderRadius: \"10px\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"red !important\",\n      borderRadius: \"10px\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        border: \"none\",\n        borderRadius: \"10px\",\n      },\n\n      \"&.Mui-focused fieldset\": {\n        border: \"2px solid rgb(255 ,176, 4) !important\",\n        borderRadius: \"10px\",\n      },\n    },\n  },\n  ButtonAndLoading: {\n\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  loginLoader: {\n marginTop:\"16px\",\n    color: \"red\",\n  },\n\n  //   /////////////////////////\n  //   container :{\n  //     // backgroundImage: `url(/Untitled-1.png)`,    backgroundPosition : \"center center\",\n  //     // border:\"5px solid red\",\n  //     background: \"red\",\n  //     // height:\"100vh\",\n  //     // width:\"100vw\",\n  //     '&::before':{\n  //     content: '',\n  //     position: \"fixed\",\n  //     width: \"100vw\",\n  //     height: \"100vh\",\n  //     background:\"red\",\n  //     border:\"10px solid red\",\n  //     backgroundImage: `url(${Image})`,\n  //     backgroundPosition : \"center center\",\n  //     backgroundRepeat: \"no-repeat\",\n  //     backgroundAttachment: \"fixed\",\n  // //  -webkit-background-size: \"cover\",\n  //     backgroundSize: \"cover\",\n  //     // -webkit-filter: blur(10px),\n  //     // -moz-filter: blur(10px),\n  //     filter: \"blur(10px)\",\n  //   }},\n\n  //   contactForm:{\n  //     position: \"absolute\",\n  //     top: \"50%\",\n  //     left: \"50%\",\n  //     transform: \"translate(-50%, -50%)\",\n  //     width: \"400px\",\n  //     height: \"350px\",\n  //     padding: \"80px 40px\",\n  //     background: \"rgba(0, 0, 0, 0.5)\",\n  //   },\n\n  ///////////////////////\n\n  // container: {\n  //   height: \"100vh\",\n  //   width: \"100vw\",\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  //   alignItems: \"center\",\n  //   position: \"absolute\",\n  //   top: 0,\n  //   left: 0,\n  // },\n  // logotypeContainer: {\n  //   backgroundColor: theme.palette.primary.main,\n  //   width: \"60%\",\n  //   height: \"100%\",\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  //   justifyContent: \"center\",\n  //   alignItems: \"center\",\n  //   [theme.breakpoints.down(\"md\")]: {\n  //     width: \"50%\",\n  //   },\n  //   [theme.breakpoints.down(\"md\")]: {\n  //     display: \"none\",\n  //   },\n  // },\n  // logotypeImage: {\n  //   width: 165,\n  //   marginBottom: theme.spacing(4),\n  // },\n  // logotypeText: {\n  //   color: \"white\",\n  //   fontWeight: 500,\n  //   fontSize: 84,\n  //   [theme.breakpoints.down(\"md\")]: {\n  //     fontSize: 48,\n  //   },\n  // },\n  // formContainer: {\n  //   width: \"40%\",\n  //   height: \"100%\",\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  //   justifyContent: \"center\",\n  //   alignItems: \"center\",\n  //   [theme.breakpoints.down(\"md\")]: {\n  //     width: \"50%\",\n  //   },\n  // },\n  // form: {\n  //   width: 320,\n  // },\n  // tab: {\n  //   fontWeight: 400,\n  //   fontSize: 18,\n  // },\n  // greeting: {\n  //   fontWeight: 500,\n  //   textAlign: \"center\",\n  //   marginTop: theme.spacing(4),\n  // },\n  // subGreeting: {\n  //   fontWeight: 500,\n  //   textAlign: \"center\",\n  //   marginTop: theme.spacing(2),\n  // },\n  // googleButton: {\n  //   marginTop: theme.spacing(6),\n  //   boxShadow: theme.customShadows.widget,\n  //   backgroundColor: \"white\",\n  //   width: \"100%\",\n  //   textTransform: \"none\",\n  // },\n  // googleButtonCreating: {\n  //   marginTop: 0,\n  // },\n  // googleIcon: {\n  //   width: 30,\n  //   marginRight: theme.spacing(2),\n  // },\n  // creatingButtonContainer: {\n  //   marginTop: theme.spacing(2.5),\n  //   height: 46,\n  //   display: \"flex\",\n  //   justifyContent: \"center\",\n  //   alignItems: \"center\",\n  // },\n  // createAccountButton: {\n  //   height: 46,\n  //   textTransform: \"none\",\n  // },\n  // formDividerContainer: {\n  //   marginTop: theme.spacing(4),\n  //   marginBottom: theme.spacing(4),\n  //   display: \"flex\",\n  //   alignItems: \"center\",\n  // },\n  // formDividerWord: {\n  //   paddingLeft: theme.spacing(2),\n  //   paddingRight: theme.spacing(2),\n  // },\n  // formDivider: {\n  //   flexGrow: 1,\n  //   height: 1,\n  //   backgroundColor: theme.palette.text.hint + \"40\",\n  // },\n  // errorMessage: {\n  //   textAlign: \"center\",\n  // },\n  // textFieldUnderline: {\n  //   \"&:before\": {\n  //     borderBottomColor: theme.palette.primary.light,\n  //   },\n  //   \"&:after\": {\n  //     borderBottomColor: theme.palette.primary.main,\n  //   },\n  //   \"&:hover:before\": {\n  //     borderBottomColor: `${theme.palette.primary.light} !important`,\n  //   },\n  // },\n  // textField: {\n  //   borderBottomColor: theme.palette.background.light,\n  // },\n  // formButtons: {\n  //   width: \"100%\",\n  //   marginTop: theme.spacing(4),\n  //   display: \"flex\",\n  //   justifyContent: \"space-between\",\n  //   alignItems: \"center\",\n  // },\n  // forgetButton: {\n  //   textTransform: \"none\",\n  //   fontWeight: 400,\n  // },\n  // loginLoader: {\n  //   marginLeft: theme.spacing(4),\n  // },\n  // copyright: {\n  //   marginTop: theme.spacing(4),\n  //   whiteSpace: \"nowrap\",\n  //   [theme.breakpoints.up(\"md\")]: {\n  //     position: \"absolute\",\n  //     bottom: theme.spacing(2),\n  //   },\n  // },\n}));\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\config\\auth.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Layout\\Layout.js",["497","498","499","500","501","502"],"import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\n// pages\r\nimport TableofUser from \"../../pages/candoProject/User/TableofUser\";\r\nimport Hive from \"../../pages/candoProject/Hive/Hive\";\r\nimport ApiaryList from \"../../pages/candoProject/ApiaryList/ApiaryList\";\r\nimport HiveStatus from \"../../pages/candoProject/HiveStatus/HiveStatus\";\r\nimport Audio from \"../../pages/candoProject/HiveStatus/Audio\";\r\nimport Support from \"../../pages/candoProject/Support/Support\";\r\nimport SupportPage from \"../../pages/candoProject/Support/SupportPage/SupportPage\";\r\nimport SupportMessage from \"../../pages/candoProject/Support/SupportMessage/SupportMessage\";\r\nimport Login from \"../../pages/login/Login\";\r\nimport LoginWithPhone from \"../../pages/candoProject/Login/Login\";\r\nimport FrequentlyQuestions from \"../../pages/candoProject/Support/FrequentlyQuestions/FrequentlyQuestions\";\r\nimport SmsVerification from \"../../pages/login/SmsVerification\";\r\nimport Edituser from \"../Form/Setting/Edituser\";\r\nimport AboutUsMain from \"../../pages/candoProject/AboutUsMain/AboutUsMain\";\r\nimport CalenderProject from \"../../pages/candoProject/CalenderProject/CalenderProject\";\r\nimport JobCalender from \"../../pages/candoProject/CalenderProject/JobCalender/JobCalender\";\r\nimport main from \"../../pages/candoProject/CalenderProject/main\";\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <div className={classes.headerSidebar}>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n        </div>\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            {/* <Route path=\"onent={Login} /> */}\r\n\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route\r\n              path=\"/app/ApiaryList/Beehive/Hive/:id\"\r\n              component={HiveStatus}\r\n            />\r\n            {/* <Route path=\"/app/Beehive/Hive/:id/:id\" component={Audio} /> */}\r\n\r\n            <Route path=\"/app/ApiaryList/Beehive/:id\" component={Hive} />\r\n            <Route path=\"/app/ApiaryList/\" component={ApiaryList} />\r\n            <Route path=\"/app/ApiaryList/:id\" component={ApiaryList} />\r\n\r\n            <Route path=\"/app/typography\" component={Typography} />\r\n            <Route path=\"/app/user\" component={TableofUser} />\r\n            <Route path=\"/app/JobCalender\" component={main} />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/app/ui\"\r\n              render={() => <Redirect to=\"/app/ui/icons\" />}\r\n            />\r\n\r\n            <Route path=\"/app/AboutUS\" component={AboutUsMain} />\r\n            <Route path=\"/app/user\" component={TableofUser} />\r\n            <Route path=\"/app/Support/:id\" component={SupportPage} />\r\n            <Route path=\"/app/SupportMessage\" component={SupportMessage} />\r\n            <Route\r\n              path=\"/app/FrequentlyQuestions\"\r\n              component={FrequentlyQuestions}\r\n            />\r\n            <Route path=\"/app/Support\" component={Support} />\r\n            <Route path=\"/app/setting\" component={Edituser} />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\themes\\default.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\api\\axios.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\AboutUsMain\\AboutUsMain.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Login\\Login.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportMessage\\SupportMessage.js",["503","504"],"import { Divider, Grid, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport useStyles from \"./Style\";\n// function SupportMessage() {\n\n//   return (\n//     <div>SupportMessage</div>\n//   )\n// }\n\n// export default SupportMessage\n\nfunction SupportMessage() {\n  //   const classes = useStyles();\n  const [data, setData] = useState([\n    {\n      id: 1,\n      titleQuestion:\n        \"باسلام زنبوردار عزیز از طریق لینک زیر اپلیکیشن کندووان پلاس را بروز رسانی کنید.\",\n      name: \"جعفر\",\n      Date: \"1400/01/01\",\n      Time: \"12:14\",\n    },\n    {\n      id: 1,\n      titleQuestion: \"ممنون از شما حتما رسیدگی خواهد شد.\",\n      name: \"رضا\",\n      Date: \"1400/01/01\",\n      Time: \"12:14\",\n    },\n  ]);\n\n  return (\n    <Grid\n      container\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: \"16px 32px\",\n        justifyContent: \"space-between\",\n        borderRadius: \"12px\",\n        width: \"100%\",\n        marginTop: \"24px\",\n      }}\n    >\n      {/* message */}\n      {data.map((element) => {\n        return (\n          <>\n            <Grid\n              item\n              xs={12}\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"flex-end\",\n                padding: \"16px 32px\",\n                justifyContent: \"space-between\",\n                borderRadius: \"12px\",\n                width: \"100%\",\n                marginTop: \"24px\",\n                alignSelf: \"flex-start\",\n                boxShadow: \"0px, 3px,6px, 0px ,rgba(0,0,0,0.16)\",\n              }}\n            >\n              <Grid\n                item\n                xs={12}\n                style={{\n                  fontSize: \"16px\",\n                  fontWeight: \"bold\",\n                  width: \"100%\",\n                  borderRadius: \"12px\",\n                  backgroundColor: \"rgb( 244 244 244)\",\n                  padding: \"16px 32px\",\n                  boxShadow: \"0px 3px  6px  0px rgba(0,0,0,0.16)\",\n                }}\n              >\n                {element.titleQuestion}\n              </Grid>\n              <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\n                {element.name}| {element.Date} {element.Time}\n              </Grid>\n            </Grid>\n          </>\n        );\n      })}\n\n      <Grid\n        style={{\n          marginTop: \"200px\",\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Divider\n          style={{ backgroundColor: \"rgb( 173 173 173)\", width: \"40%\" }}\n        />\n        <Typography style={{ color: \"rgb( 173 173 173)\" }}>\n          پیام جدید\n        </Typography>\n        <Divider\n          style={{ backgroundColor: \"rgb( 173 173 173)\", width: \"40%\" }}\n        />\n      </Grid>\n\n      {data.map((element) => {\n        return (\n          <Grid\n            item\n            xs={12}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-end\",\n              padding: \"16px 32px\",\n              justifyContent: \"space-between\",\n              borderRadius: \"12px\",\n              width: \"100%\",\n              marginTop: \"24px\",\n              alignSelf: \"flex-start\",\n              boxShadow: \"0px, 3px,6px, 0px ,rgba(0,0,0,0.16)\",\n            }}\n          >\n            <Grid\n              item\n              xs={12}\n              style={{\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n                width: \"100%\",\n                borderRadius: \"12px\",\n                backgroundColor: \"rgb( 255 242 212)\",\n                padding: \"16px 32px\",\n                boxShadow: \"0px 3px  6px  0px rgba(0,0,0,0.16)\",\n              }}\n            >\n              {element.titleQuestion}\n            </Grid>\n            <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\n              {element.name}| {element.Date} {element.Time}\n            </Grid>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n\nexport default SupportMessage;\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportPage\\SupportPage.js",["505","506","507"],"import { Button, Grid, TextareaAutosize, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport Widget from \"../../../../components/Widget/Widget\";\r\nimport useStyles from \"./Style\";\r\n\r\nfunction SupportPage() {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([\r\n    {\r\n      id: 1,\r\n      titleQuestion:\r\n        \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n      titleAnswer:\r\n        \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n      name: \"جعفر\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n    },\r\n    {\r\n      id: 1,\r\n      titleQuestion:\r\n        \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n      titleAnswer:\r\n        \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n      name: \"رضا\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n    },\r\n    {\r\n      id: 1,\r\n      titleQuestion:\r\n        \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n      titleAnswer:\r\n        \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n      name: \"جعفر\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n    },\r\n    {\r\n      id: 1,\r\n      titleQuestion:\r\n        \"سلام وقتتون بخیر برای برداشت عسل کندو های زنبورستانم نیاز به نیروی پشتیبانی دارم .باتشکر\",\r\n      titleAnswer:\r\n        \"سلام . وقتتون بخیر نام زنبورستان و تعداد کندوهایی که برای برداشت عسل آماده اند را ذکر کنید. نیروی پشتیبان ما با شما  .تماس میگیرد\",\r\n      name: \"رضا\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        height: \"100%\",\r\n        position:\"relative\",\r\n\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          padding: \"16px 32px\",\r\n          justifyContent: \"space-between\",\r\n          borderRadius: \"12px\",\r\n\r\n          marginTop: \"24px\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            backgroundColor: \"#fff\",\r\n            alignItems: \"center\",\r\n            padding: \"16px 32px\",\r\n            justifyContent: \"space-between\",\r\n            borderRadius: \"12px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <div style={{ fontSize: \"16px\", fontWeight: \"bold\" }}>موضوع تیکت</div>\r\n          <div>باز</div>\r\n        </Grid>\r\n\r\n        {/* message */}\r\n        {data.map((element) => {\r\n          return (\r\n            <>\r\n              <Grid\r\n                item\r\n                xs={6}\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"flex-start\",\r\n                  padding: \"16px 32px\",\r\n                  justifyContent: \"space-between\",\r\n                  borderRadius: \"12px\",\r\n                  width: \"50%\",\r\n                  marginTop: \"24px\",\r\n                  alignSelf: \"flex-start\",\r\n                  boxShadow: \"0px, 3px,6px, 0px ,rgba(0,0,0,0.16)\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"bold\",\r\n                    width: \"100%\",\r\n                    borderRadius: \"12px\",\r\n                    backgroundColor: \"rgb( 255 242 212)\",\r\n                    padding: \"16px 32px\",\r\n                    boxShadow: \"0px 3px  6px  0px rgba(0,0,0,0.16)\",\r\n                  }}\r\n                >\r\n                  {element.titleQuestion}\r\n                </Grid>\r\n                <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                  {element.name}| {element.Date} {element.Time}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"flex-end\",\r\n                  padding: \"16px 32px\",\r\n                  marginTop: \"124px\",\r\n                  justifyContent: \"space-between\",\r\n                  borderRadius: \"12px\",\r\n                  width: \"50%\",\r\n                  alignSelf: \"flex-end\",\r\n                }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    fontWeight: \"bold\",\r\n                    width: \"100%\",\r\n                    borderRadius: \"12px\",\r\n                    backgroundColor: \"rgb( 244 244 244)\",\r\n                    padding: \"16px 32px\",\r\n                    boxShadow: \"0px 3px  6px  0px rgba(0,0,0,0.16)\",\r\n                  }}\r\n                >\r\n                  {element.titleAnswer}\r\n                </Grid>\r\n                <Grid style={{ color: \"rgb(173 ,173 ,173)\", marginTop: \"8px\" }}>\r\n                  {element.name}| {element.Date} {element.Time}\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      {/* bottom Page */}\r\n      <Grid\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          padding: \"48px \",\r\n          borderRadius: \"12px\",\r\n          position: \"fixed\",\r\n          bottom:0,\r\n          left:20,\r\n          width:\"80%\",\r\n        }}\r\n      >\r\n        <TextareaAutosize\r\n          maxRows={4}\r\n          aria-label=\"maximum height\"\r\n          placeholder=\"Maximum 4 rows\"\r\n          defaultValue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\r\n            ut labore et dolore magna aliqua.\"\r\n          style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"rgb( 244 244 244)\",\r\n            border: \"none\",\r\n            padding: \"16px\",\r\n          }}\r\n        />\r\n\r\n        <Grid\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <div>بستن تیکت</div>\r\n          <Button className={classes.ButtonSubmitPage}>ثبت</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportPage;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\FrequentlyQuestions\\FrequentlyQuestions.js",["508","509","510","511"],"// import { Divider, Grid } from \"@material-ui/core\";\r\n// import { ArrowForwardIosRounded } from \"@material-ui/icons\";\r\n// import React, { useState } from \"react\";\r\n// // import useStyles from \"./Style\";\r\n// function FrequentlyQuestions() {\r\n//   const [open, setOpen] = useState(false);\r\n//   const openItem = () => {\r\n//     setOpen(!open);\r\n//   };\r\n//   return (\r\n//     <>\r\n//       {open ? (\r\n//         <Grid\r\n//           item\r\n//           xs={12}\r\n//           onClick={openItem}\r\n//           style={{\r\n//             display: \"flex\",\r\n//             backgroundColor: \"#fff\",\r\n//             alignItems: \"center\",\r\n//             padding: \"16px 32px\",\r\n//             justifyContent: \"space-between\",\r\n//             borderRadius: \"12px\",\r\n//             width: \"100%\",\r\n//           }}\r\n//         >\r\n//           <div style={{ fontSize: \"16px\", fontWeight: 300 }}>متن سوال</div>\r\n//           <div>\r\n//             <ArrowForwardIosRounded style={{ transform: \"rotate(90deg)\" }} />\r\n//           </div>\r\n//         </Grid>\r\n//       ) : (\r\n//         <Grid\r\n//           item\r\n//           xs={12}\r\n//           onClick={openItem}\r\n//           style={{\r\n//             display: \"flex\",\r\n//             backgroundColor: \"#fff\",\r\n//             alignItems: \"center\",\r\n//             padding: \"16px 32px\",\r\n//             justifyContent: \"space-between\",\r\n//             borderRadius: \"12px\",\r\n//             width: \"100%\",\r\n//           }}\r\n//         >\r\n//           <div style={{ fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n//             <div>متن سوال</div>\r\n\r\n//             <Divider style={{ width: \"100%\", marginTop: \"16px\" }} />\r\n//             <div\r\n//               style={{ width: \"100%\", marginTop: \"0.8rem\", fontWeight: 200 }}\r\n//             >\r\n//               جواب\r\n//             </div>\r\n//           </div>\r\n//           <div>\r\n//             <ArrowForwardIosRounded style={{ transform: \"rotate(-90deg)\" }} />\r\n//           </div>\r\n//         </Grid>\r\n//       )}\r\n//     </>\r\n//   );\r\n// }\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  FormControl,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { CallMissedSharp, ExpandMore } from \"@material-ui/icons\";\r\nimport { styled } from \"@material-ui/styles\";\r\nimport * as React from \"react\";\r\nimport useStyles from \"./Styles\";\r\n\r\nexport default function SimpleAccordion() {\r\n  const classes = useStyles();\r\n  const [borderColor, setborderColort] = React.useState(true);\r\n\r\n  const [value, setValue] = React.useState(\"همه\"); // selected option\r\n  const options = [\r\n    { label: \"همه\", value: \"همه\" },\r\n    { label: \"تغذیه زنبور\", value: \"تغذیه زنبور\" },\r\n    { label: \"برداشت عسل\", value: \"برداشت عسل\" },\r\n    { label: \"بیماری زنبور\", value: \"بیماری زنبور\" },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      id: \"1\",\r\n      Title: \"متن سوال 1\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      Title: \"متن سوال 2\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      Title: \"متن سوال 3\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      Title: \"متن سوال 4\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"5\",\r\n      Title: \"متن سوال 5\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"6\",\r\n      Title: \"متن سوال 6\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"7\",\r\n      Title: \"متن سوال 7\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"8\",\r\n      Title: \"متن سوال 8\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n    {\r\n      id: \"9\",\r\n      Title: \"متن سوال 9\",\r\n      paragraph:\r\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\",\r\n    },\r\n  ];\r\n  \r\n  const changeColor = (index) => {\r\n    console.log(index);\r\n  };\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  return (\r\n    <Grid container style={{ padding: \"80px\" }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n      >\r\n        <Typography style={{ marginLeft: \"16px\", whiteSpace: \"nowrap\" }}>\r\n          دسته بندی سوالات\r\n        </Typography>\r\n        <FormControl\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          className={classes.inputSelect}\r\n        >\r\n          <Select\r\n        \r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={value}\r\n            onChange={handleChange}\r\n\r\n            // inputProps={{ \"aria-label\": \"Without label\" }}\r\n          >\r\n            {options?.map((option) => {\r\n              return (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label ?? option.value}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      {/* item */}\r\n      <Grid style={{ width: \"100%\" }}>\r\n        {data.map((el, index) => {\r\n          return (\r\n            <Accordion\r\n              onClick={() => changeColor(el.id)}\r\n              className={classes.Accordion}\r\n              style={{ borderRadius: \"9px\", marginTop: \"16px\" }}\r\n            >\r\n              <AccordionSummary\r\n                className={classes.arrowStyle}\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography>{el.Title}</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>{el.paragraph}</Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n// import { AccordionDetails, Typography } from '@material-ui/core';\r\n// import { ArrowForwardIosSharp } from '@material-ui/icons';\r\n// import { styled } from '@material-ui/styles';\r\n// import * as React from 'react';\r\n\r\n// const Accordion = styled((props) => (\r\n//   <Accordion disableGutters elevation={1} square {...props} />\r\n// ))(({ theme }) => ({\r\n//   border: `1px solid ${theme.palette.divider}`,\r\n//   '&:not(:last-child)': {\r\n//     borderBottom: 0,\r\n//   },\r\n//   '&:before': {\r\n//     display: 'none',\r\n//   },\r\n// }));\r\n\r\n// const AccordionSummary = styled((props) => (\r\n//   <AccordionSummary\r\n//     expandIcon={<ArrowForwardIosSharp sx={{ fontSize: '1rem' }} />}\r\n//     {...props}\r\n//   />\r\n// ))(({ theme }) => ({\r\n//   backgroundColor:\r\n//     theme.palette.mode === 'dark'\r\n//       ? 'rgba(255, 255, 255, .05)'\r\n//       : 'rgba(0, 0, 0, .03)',\r\n//   flexDirection: 'row',\r\n//   border:'1px solid red',\r\n//   justifyContent:'space-between',\r\n//   '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\r\n//     transform: 'rotate(90deg)',color:'red'\r\n//   },\r\n//   '& .MuiAccordionSummary-content': {\r\n//     marginLeft: theme.spacing(1),\r\n//   },\r\n// }));\r\n\r\n// const AccordionDetailss = styled(AccordionDetails)(({ theme }) => ({\r\n//   padding: theme.spacing(2),\r\n//   borderTop: '1px solid rgba(0, 0, 0, .125)',\r\n// }));\r\n\r\n// export default function CustomizedAccordions() {\r\n//   const [expanded, setExpanded] = React.useState('panel1');\r\n\r\n//   const handleChange = (panel) => (event, newExpanded) => {\r\n//     setExpanded(newExpanded ? panel : false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n//         <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n//           <Typography>Collapsible Group Item #1</Typography>\r\n//         </AccordionSummary>\r\n//         <AccordionDetailss>\r\n//           <Typography>\r\n//             Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n//             malesuada lacus ex, sit amet blandit leo lobortis eget. Lorem ipsum dolor\r\n//             sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n//             sit amet blandit leo lobortis eget.\r\n//           </Typography>\r\n//         </AccordionDetailss>\r\n//       </Accordion>\r\n//       <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n//         <AccordionSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\">\r\n//           <Typography>Collapsible Group Item #2</Typography>\r\n//         </AccordionSummary>\r\n//         <AccordionDetailss>\r\n//           <Typography>\r\n//             Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n//             malesuada lacus ex, sit amet blandit leo lobortis eget. Lorem ipsum dolor\r\n//             sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n//             sit amet blandit leo lobortis eget.\r\n//           </Typography>\r\n//         </AccordionDetailss>\r\n//       </Accordion>\r\n//       <Accordion expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n//         <AccordionSummary aria-controls=\"panel3d-content\" id=\"panel3d-header\">\r\n//           <Typography>Collapsible Group Item #3</Typography>\r\n//         </AccordionSummary>\r\n//         <AccordionDetailss>\r\n//           <Typography>\r\n//             Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse\r\n//             malesuada lacus ex, sit amet blandit leo lobortis eget. Lorem ipsum dolor\r\n//             sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n//             sit amet blandit leo lobortis eget.\r\n//           </Typography>\r\n//         </AccordionDetailss>\r\n//       </Accordion>\r\n//     </div>\r\n//   );\r\n// }\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\HiveStatus.js",["512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Breadcrumbs, Button, Dialog, Grid, Slide, Typography } from \"@material-ui/core\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport useStyles from \"./Style\";\r\nimport Chart from \"../../../components/Chart/Chart\";\r\nimport \"../Support/Support.css\"\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,NavLink,\r\n  useParams,useRouteMatch\r\n} from \"react-router-dom\" \r\nimport RightTopCard from \"./RightTopCard\";\r\nimport LeftCard from \"./LeftCard\";\r\nimport Audio from \"./Audio\";\r\nimport Diagram from \"./Diagram\";\r\nimport WebHiveSubmit from \"./webHiveSubmit\";\r\nimport { NavigateBefore } from \"@material-ui/icons\";\r\nimport Title from \"../../../components/Typography/Title/Title\";\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n}); \r\n\r\nfunction HiveStatus() {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  let { path, url } = useRouteMatch();\r\n  console.log(path,\"path\")\r\n  console.log(url,\"url\")\r\n  const breadcrumbs = [\r\n\r\n    <Link\r\n      to=\"/app/ApiaryList\"\r\n      key=\"1\"\r\n      style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n    >\r\n          <Title key=\"1\" title=\"زنبورستان \"/>\r\n\r\n    </Link>,\r\n        <Link\r\n        to=\"/app/ApiaryList\"\r\n        key=\"1\"\r\n        style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n      >\r\n            <Title key=\"2\" title=\" زنبورستان ۱\"/>\r\n  \r\n      </Link>,\r\n\r\n            <Title key=\"3\" title=\"کندو ۱\"/>\r\n\r\n\r\n  ];\r\n  return (\r\n    <>\r\n      <Breadcrumbs \r\n        separator={<NavigateBefore fontSize=\"large\" style={{color:\"rgb(227, 156, 0)\"}} />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n      <Grid container spacing={3} style={{marginTop:\"32px\"}}>\r\n\r\n    <Grid item sm={6} >\r\n\r\n      <Grid item  className={classes.TabHeader} >\r\n        <Grid ><NavLink exact to={`${url}`} className={classes.item} activeClassName={classes.activeItem}>وضعیت</NavLink></Grid>\r\n        <Grid><NavLink to={`${url}/Sound`} className={classes.item} activeClassName={classes.activeItem}>صدا و تصویر</NavLink></Grid>\r\n        <Grid><NavLink to={`${url}/Diagram`} className={classes.item} activeClassName={classes.activeItem}> نمودار </NavLink></Grid>\r\n        <Grid><NavLink to={`${url}/History`} className={classes.item} activeClassName={classes.activeItem}> تاریخچه </NavLink></Grid>\r\n      </Grid> \r\n\r\n{/* \r\n        <RightTopCard />\r\n         <Audio />\r\n         <Diagram /> */}\r\n\r\n\r\n      <Switch>\r\n        <Route exact path={`${path}`}>\r\n            <RightTopCard />\r\n        </Route>\r\n        <Route path={`${path}/Sound`}>\r\n            <Audio />\r\n        </Route>\r\n        <Route path={`${path}/Diagram`}>\r\n            <Diagram /> \r\n        </Route>\r\n      </Switch>     \r\n             \r\n    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Grid item sm={6} >        \r\n        <LeftCard />   \r\n          <div>\r\n          \r\n          <Button onClick={handleClickOpen}> رو من کلیک کن</Button>\r\n          <Dialog \r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <WebHiveSubmit  onClose={handleClose} />\r\n        </Dialog > \r\n          </div>\r\n      </Grid>\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HiveStatus;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Audio.js",["531","532","533","534","535"],"import { Avatar, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Widget from \"../../../components/Widget/Widget\";\nimport ApexLineChart from \"../../charts/components/ApexLineChart\";\nimport PieCharts from \"../../charts/PieCharts\";\nimport useStyles from \"./Style\";\nfunction Audio() {\n  const classes = useStyles();\n  return (\n    <Grid\n      item\n \n      xs={12}\n      style={{\n        fontWeight: 600,\n\n        margin: \"16px 0\",\n      }}\n    >\n\n      <Widget color=\"secondary\" style={{ fontWeight: 600, width: \"100%\" }}>\n        {/* toplevel */}\n       <Grid item xs={12} > <ApexLineChart/> </Grid>\n        {/* midlevel */}\n      <Grid\n        className={classes.midPartAudio}\n          item\n          xs={12}\n          style={{\n            display: \"flex\",\n            marginTop: \"32px\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n      >\n          <Grid\n            item\n            xs={6}\n          \n            alignItems=\"center\"\n            justifyContent=\"space-around\"\n            style={{ display: \"flex\" }}\n          >\n            <Grid\n            \n              item\n              style={{ display: \"flex\" }}\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n            >\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                احتمال بچه‌دهی\n              </Typography>\n            </Grid>\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <PieCharts />\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            xs={6}\n            alignItems=\"center\"\n            justifyContent=\"space-around\"\n            style={{ display: \"flex\" }}\n          >\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                احتمال وجود ملکه\n              </Typography>\n            </Grid>\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n            <PieCharts />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {/* bottom */}\n        <Grid\n          item\n          xs={12}\n          style={{\n            display: \"flex\",\n            margin: \"32px 0px\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Grid\n            item\n            sm={2}\n            xs={12}\n            color=\"secondary\"\n            className={classes.Soundscards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n              style={{ width: \"30px\" }}\n            >\n              <img src=\"/assets/microphone-svgrepo-com (2).svg\" width=\"100%\" />\n            </Grid>\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                صدای کندو\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            sm={2}\n            xs={12}\n            color=\"secondary\"\n            className={classes.Soundscards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n              style={{ width: \"50px\" }}\n            >\n              <img src=\"/assets/note-svgrepo-com (3).svg\" width=\"100%\" />\n            </Grid>\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                یادداشت متنی\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            sm={2}\n            xs={12}\n            color=\"secondary\"\n            className={classes.Soundscards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n              style={{ width: \"60px\" }}\n            >\n              <img src=\"/assets/camera-svgrepo-com (1).svg\" width=\"100%\" />\n            </Grid>\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                عکس کندو\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            sm={2}\n            xs={12}\n            color=\"secondary\"\n            className={classes.Soundscards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-around\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n              style={{ width: \"50px\" }}\n            >\n              <img src=\"/assets/Group 11027.svg\" width=\"100%\" />\n            </Grid>\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                یادداشت صوتی\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Widget>\n    </Grid>\n  );\n}\nexport default Audio;\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\CalenderProject.js",["536","537"],"// import React from 'react'\r\n// import { Calendar } from '@fullcalendar/core';\r\n// import dayGridPlugin from '@fullcalendar/daygrid';\r\n// import timeGridPlugin from '@fullcalendar/timegrid';\r\n// import listPlugin from '@fullcalendar/list';\r\n// function CalenderProject() {\r\n//     let calendar = new Calendar(calendarEl, {\r\n//         plugins: [ dayGridPlugin, timeGridPlugin, listPlugin ],\r\n//         initialView: 'dayGridMonth',\r\n//         headerToolbar: {\r\n//           left: 'prev,next today',\r\n//           center: 'title',\r\n//           right: 'dayGridMonth,timeGridWeek,listWeek'\r\n//         }\r\n//       });\r\n// }\r\n\r\n// export default CalenderProject\r\n\r\nimport React from \"react\";\r\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { INITIAL_EVENTS, createEventId } from \"./event-utils\";\r\nimport allLocales from \"@fullcalendar/core/locales-all\";\r\nimport \"./CalenderProject.css\";\r\n\r\nimport FilterCalender from \"./FilterCalender\";\r\nimport moment from \"moment\";\r\nimport AddJob from \"../../../components/Form/JobUser/AddJob\";\r\nexport default class CalenderProject extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.calenderRef = React.createRef(null);\r\n  }\r\n  state = {\r\n    weekendsVisible: true,\r\n    currentEvents: [],\r\n  };\r\n\r\n  onEventAdded = (event) => {\r\n    let calenderApi = this.calenderRef.current.getApi();\r\n    calenderApi.addEvent(event);\r\n    console.log(\"event\", event);\r\n  };\r\n\r\n  async handleEventAdd(data) {\r\n    //axios.post(\"url\",data.event)\r\n  }\r\n  async handleDateSet(data) {\r\n    // const response = await axios.get(\"url\",moment(date.start).toString()+\"&end=\"+moment(date.end).toString())\r\n    // this.setState(response.data)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"demo-app\">\r\n        <AddJob onEventAdded={event=>this.onEventAdded(event)} />\r\n         <div className=\"demo-app-main\">\r\n          <FullCalendar\r\n            ref={this.calenderRef}\r\n            initialView=\"dayGridMonth\"\r\n            locales={allLocales}\r\n            locale=\"fa\"\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            headerToolbar={{\r\n              left: \"prev,next today\",\r\n              center: \"title\",\r\n              right: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n            }}\r\n            columnHeader={false}\r\n            editable={true}\r\n            selectable={true}\r\n            selectMirror={true}\r\n            dayMaxEvents={true}\r\n            weekends={this.state.weekendsVisible}\r\n            initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\r\n            select={this.handleDateSelect}\r\n            events={this.events}\r\n            eventAdd={(event) => this.handleEventAdd(event)}\r\n            datesSet={(date) => this.handleDateSet(date)}\r\n            eventContent={renderEventContent} // custom render function\r\n            eventClick={this.handleEventClick}\r\n            eventsSet={this.handleEvents} \r\n            \r\n            \r\n            // called after events are initialized/added/changed/removed\r\n            /* you can update a remote database when these fire:\r\n            eventAdd={function(){}}\r\n            eventChange={function(){}}\r\n            eventRemove={function(){}}\r\n            */\r\n            //css class\r\n            color\r\n            eventColor=\"red\"\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className=\"demo-app-left\"\r\n          style={{ marginRight: \"16px\", borderRadius: \"16px\" }}\r\n        >\r\n          <FilterCalender />\r\n        </div>\r\n\r\n        {/* <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"md\"\r\n      >\r\n             <AddJob onClick={handleClose}/>\r\n      </Dialog> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //   renderSidebar() {\r\n  //     return (\r\n  //       <div className='demo-app-sidebar'>\r\n  //         <div className='demo-app-sidebar-section'>\r\n  //           <h2>Instructions</h2>\r\n  //           <ul>\r\n  //             <li>Select dates and you will be prompted to create a new event</li>\r\n  //             <li>Drag, drop, and resize events</li>\r\n  //             <li>Click an event to delete it</li>\r\n  //           </ul>\r\n  //         </div>\r\n  //         <div className='demo-app-sidebar-section'>\r\n  //           <label>\r\n  //             <input\r\n  //               type='checkbox'\r\n  //               checked={this.state.weekendsVisible}\r\n  //               onChange={this.handleWeekendsToggle}\r\n  //             ></input>\r\n  //             toggle weekends\r\n  //           </label>\r\n  //         </div>\r\n  //         <div className='demo-app-sidebar-section'>\r\n  //           <h2>All Events ({this.state.currentEvents.length})</h2>\r\n  //           <ul >\r\n  //             {this.state.currentEvents.map(renderSidebarEvent)}\r\n  //           </ul>\r\n  //         </div>\r\n  //       </div>\r\n  //     )\r\n  //   }\r\n\r\n  // handleWeekendsToggle = () => {\r\n  //   this.setState({\r\n  //     weekendsVisible: !this.state.weekendsVisible,\r\n  //   });\r\n  // };\r\n\r\n  handleDateSelect = (selectInfo) => {\r\n    //add line in table\r\n    let title = prompt(\"لطفا نام ایونت خود را انتخاب کنید\");\r\n    let calendarApi = selectInfo.view.calendar;\r\n\r\n    calendarApi.unselect(); // clear date selection\r\n\r\n    if (title) {\r\n      calendarApi.addEvent({\r\n        id: createEventId(),\r\n        title,\r\n        start: selectInfo.startStr,\r\n        end: selectInfo.endStr,\r\n        allDay: selectInfo.allDay,\r\n      });\r\n    }\r\n    console.log(\"calendarApi\", calendarApi);\r\n  };\r\n\r\n  handleEventClick = (clickInfo) => {\r\n    if (\r\n      window.confirm(\r\n        `آیا شما میخواهید این ایونت را حذف کنید؟ '${clickInfo.event.title}'`,\r\n      )\r\n    ) {\r\n      clickInfo.event.remove();\r\n    }\r\n    // alert(clickInfo)\r\n  };\r\n\r\n  handleEvents = (events) => {\r\n    this.setState({\r\n      currentEvents: events,\r\n    });\r\n  };\r\n}\r\n\r\nfunction renderEventContent(eventInfo) {\r\n  return (\r\n    <>\r\n      <b>{eventInfo.timeText}</b>\r\n      <i>{eventInfo.event.title}</i>\r\n    </>\r\n  );\r\n}\r\n\r\n// function renderSidebarEvent(event) {\r\n//   console.log(event);\r\n//   return (\r\n//     <li key={event.id}>\r\n//       <b>\r\n//         {formatDate(event.start, {\r\n//           year: \"numeric\",\r\n//           month: \"short\",\r\n//           day: \"numeric\",\r\n//         })}\r\n//       </b>\r\n//       <i>{event.title}</i>\r\n//     </li>\r\n//   );\r\n// }\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\main.js",["538","539","540","541","542","543","544","545","546"],"import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport AddJob from \"../../../components/Form/JobUser/AddJob\";\r\nimport Title from \"../../../components/Typography/Title/Title\";\r\nimport CalenderProject from \"./CalenderProject\";\r\nimport JobCalender from \"./JobCalender/JobCalender\";\r\nimport useStyles from \"./style\";\r\n\r\nfunction Main() {\r\n  const [open, setOpen] = useState(false);\r\n  const [scroll, setScroll] = useState(\"paper\");\r\n  let { path, url } = useRouteMatch();\r\n  const classes = useStyles();\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const descriptionElementRef = React.useRef(null);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Title title=\"تقویم کاری\" style={{ fontSize: \"2rem\" }} variant=\"h5\" />\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Grid item onClick={handleClickOpen(\"body\")}>\r\n            <img\r\n              style={{\r\n                flex: \"1\",\r\n                backgroundColor: \"rgb( 227, 156, 0)\",\r\n                cursor: \"pointer\",\r\n                color: \"#000\",\r\n                padding: \"8px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                borderRadius: \"8px\",\r\n              }}\r\n              src=\"/assets/Group 182.svg\"\r\n              alt=\"\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={3} sm={3} className={classes.TabHeader}>\r\n            <Grid>\r\n              <NavLink\r\n                exact\r\n                to={`${url}`}\r\n                className={classes.item}\r\n                activeClassName={classes.activeItem}\r\n              >\r\n                تقویم\r\n              </NavLink>\r\n            </Grid>\r\n            <Grid>\r\n              <NavLink\r\n                to={`${url}/Jobs`}\r\n                className={classes.item}\r\n                activeClassName={classes.activeItem}\r\n              >\r\n                کارها\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <Switch>\r\n            <Route exact path={`${path}`}>\r\n              <CalenderProject />\r\n            </Route>\r\n            <Route path={`${path}/Jobs`}>\r\n              <JobCalender />\r\n            </Route>\r\n          </Switch>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"md\"\r\n      >\r\n        <AddJob onClick={handleClose} />\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\Support.js",["547"],"import {\r\n  Button,\r\n  Dialog,\r\n  Grid,\r\n\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AddTicket from \"./addTicket\";\r\nimport useStyles from \"./Style\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction Support() {\r\n  const [open, setOpen] = useState(false);\r\n  const [AddTickets, setAddTickets] = useState(true);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const classes = useStyles();\r\n  const [data, setData] = useState([\r\n    {\r\n      id:1,\r\n      Title: \"موضوع تیکت\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n      state: {\r\n        close: 0,\r\n        open: 1,\r\n        wait: 2,\r\n      },\r\n      Duration: \"8 ماه پیش \",\r\n    },\r\n    {\r\n      id:2,\r\n      Title: \"درخواست QR Code\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n      state: {\r\n        close: 0,\r\n        open: 1,\r\n        wait: 2,\r\n      },\r\n      Duration: \"8 ماه پیش \",\r\n    },\r\n    {\r\n      id:3,\r\n      Title: \"موضوع تیکت\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n      state: {\r\n        close: 0,\r\n        open: 1,\r\n        wait: 2,\r\n      },\r\n      Duration: \"8 ماه پیش \",\r\n    },\r\n    {\r\n      id:4,\r\n      Title: \"موضوع تیکت\",\r\n      Date: \"1400/01/01\",\r\n      Time: \"12:14\",\r\n      state: {\r\n        close: 0,\r\n        open: 1,\r\n        wait: 2,\r\n      },\r\n      Duration: \"8 ماه پیش \",\r\n    },\r\n  ]);\r\n  const waveHello = () => {\r\n    setAddTickets(false);\r\n  };\r\n\r\n  const wavebye = () => {\r\n    setAddTickets(true);\r\n  };\r\n\r\n  return (\r\n    <Grid container style={{ padding: \"0 40px\" }}>\r\n      <Grid item sm={12} className={classes.Button}>\r\n        <Button\r\n          className={classes.button1}\r\n          onClick={() => {\r\n            handleClickOpen();\r\n            waveHello();\r\n          }}\r\n          style={{ fontFamily: \"Shabnam\" }}\r\n        >\r\n          تیکت به پشتیبانی\r\n        </Button>\r\n        <Button\r\n          className={classes.button2}\r\n          onClick={() => {\r\n            handleClickOpen();\r\n            wavebye();\r\n          }}\r\n          style={{ fontFamily: \"Shabnam\" }}\r\n        >\r\n          درخواست به QR Code\r\n        </Button>\r\n      </Grid>\r\n      {data.map((element) => {\r\n        return (\r\n          <Link\r\n            to={`./Support/${element.id}`}\r\n            item\r\n            sm={12}\r\n            className=\"pointer\"\r\n            style={{ marginTop: \"32px\",color: \"#000\",textDecoration:\"none\",cursor: \"pointer\"}}\r\n          >\r\n            <Grid className={classes.rightContent}>\r\n              <Grid item className={classes.Titles}>\r\n                <Typography className={classes.Title}>\r\n                  {element.Title}\r\n                </Typography>\r\n                <Typography className={classes.Date}>{element.Date}</Typography>\r\n                <Typography className={classes.Time}>{element.Time}</Typography>\r\n              </Grid>\r\n              <Grid className={classes.State}>باز</Grid>\r\n            </Grid>\r\n            <Grid className={classes.Duration}>{element.Duration}</Grid>\r\n          </Link>\r\n        );\r\n      })}\r\n      <Dialog\r\n        style={{ backgroundColor: \"rgba(0 ,0 ,0, 0.5)\" }}\r\n        maxWidth=\"xl\"\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        {console.log(AddTickets)}\r\n        {AddTickets ? (\r\n          <AddTicket\r\n            input={false}\r\n            handleClose={handleClose}\r\n            title=\" درخواست QR Code  \"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        ) : (\r\n          <AddTicket\r\n            input={true}\r\n            handleClose={handleClose}\r\n            title=\" تیکت جدید\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        )}\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Support;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\JobCalender\\JobCalender.js",["548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589"],"\r\n\r\n\r\n\r\n\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    Fade,\r\n    Grid,\r\n    IconButton,\r\n    MenuItem,\r\n    Modal,\r\n    Popover,\r\n    Popper,\r\n    Select,\r\n    Typography,\r\n  } from \"@material-ui/core\";\r\n  import React, { Children, useEffect, useState } from \"react\";\r\n  import PageTitle from \"../../../../components/PageTitle/PageTitle\";\r\n  import axios from \"axios\";\r\n  import { makeStyles } from \"@material-ui/styles\";\r\n//   import \"./ApiaryList.css\";\r\n  import XLSX from \"xlsx\";\r\n  import { Delete, Edit, Edit as EditIcon, MoreVertOutlined, Share } from \"@material-ui/icons\";\r\n  import { Link } from \"react-router-dom\";\r\n  import MaterialTable, { MTableToolbar } from \"material-table\";\r\n  import CompanyAddList from \"../../../../components/Form/ApiaryList/ApiaryAddList\";\r\n  import SearchBar from \"material-ui-search-bar\";\r\n  import PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\r\n  import jsPDF from \"jspdf\";\r\n  import \"jspdf-autotable\";\r\n  import \"../../../../Iran-Sans-normal\";\r\n  import ApiaryAddList from \"../../../../components/Form/ApiaryList/ApiaryAddList\";\r\n  import ApiaryUpdateList from \"../../../../components/Form/ApiaryList/ApiaryUpdateList\";\r\n  import Adduser from \"../../../../components/Form/User/Adduser\";\r\n  import useStyles from \"../style\"; \r\n  import {\r\n    BrowserRouter as Router,\r\n\r\n    NavLink,\r\n    useRouteMatch,\r\n  } from \"react-router-dom\"\r\nimport AddJob from \"../../../../components/Form/JobUser/AddJob\";\r\n  function  JobCalender() {\r\n    const [open, setOpen] = useState(false);\r\n    const [openEdit, setOpenEdit] = useState(false);\r\n    const [downloadOpen, setdownloadOpen] = useState(false);\r\n  \r\n    const [selectedRows, setSelectedRows] = useState();\r\n  \r\n    const [toolbar, setToolbar] = useState(false);\r\n    const [scroll, setScroll] = useState('paper');\r\n    const[Hive,setHive]=useState(\"all\")\r\n    const[State,setState]=useState(\"all\")\r\n    const[Priority,setPriority]=useState(\"all\")\r\n    const handleClickOpen = (scrollType) => () => {\r\n      setOpenEdit(true);\r\n      setScroll(scrollType);\r\n      setOpen(true)\r\n    };\r\n    useEffect(()=>{\r\n      console.log(\"Hive\",Hive)\r\n    },[Hive])\r\n    useEffect(()=>{\r\n      console.log(\"State\",State)\r\n    },[State])\r\n    useEffect(()=>{\r\n      console.log(\"Priority\",Priority)\r\n    },[Priority])\r\n\r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleEditOpen = () => {\r\n      setOpenEdit(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setdownloadOpen(false);\r\n      setOpenEdit(false)\r\n    };\r\n    const style = {\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      overflow:'scroll',\r\n      width: 400,\r\n      bgcolor: \"background.paper\",\r\n      borderRadius:\"16px\",\r\n      boxShadow: 24,\r\n      pt: 2,\r\n      px: 4,\r\n      pb: 3,\r\n    };\r\n  \r\n    const [Company, setCompany] = useState([\r\n      {\r\n        id: \"0\",\r\n        Priority: \"الویت\",\r\n        title: \"عنوان کار\",\r\n        Beehive: \"زنبورستان ۱\",\r\n        Hive: \"کندوی ۱\",\r\n        StartDate: \"1400/09/23\",\r\n        EndDate: \"1400/09/23\",\r\n        State: \"0\",\r\n        Action: \"عملیات\",\r\n      },\r\n      {\r\n        id: \"1\",\r\n        Priority: \"الویت\",\r\n        title: \"عنوان کار\",\r\n        Beehive: \"زنبورستان ۲\",\r\n        Hive: \"کندوی ۲\",\r\n        StartDate: \"1400/09/23\",\r\n        EndDate: \"1400/09/23\",\r\n        State: \"1\",\r\n        Action: \"عملیات\",\r\n      },\r\n\r\n    ]);\r\n  \r\n\r\n    \r\n    const classes = useStyles();\r\n  \r\n    console.log(Company);\r\n    const columns = [\r\n  \r\n      {\r\n        title: \"الویت\",\r\n        field: \"Priority\",\r\n        validate: (rowDate) => {\r\n          if (rowDate.Priority === undefined || rowDate.Priority === \"\") {\r\n            return \"این فیلد ضروری است\";\r\n          } else if (rowDate.Priority.length < 2) {\r\n            return \"نام شما حداقل باید دارای دو کاراکتر باشد\";\r\n          }\r\n          return true;\r\n        },\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n  \r\n        render: (rowData) => {\r\n          console.log(\"rowData\", rowData);\r\n          return (\r\n            <Link to={`/app/Beehive/${rowData.id}`} className=\"title\" style={{ display: \"flex\"}}>\r\n              <p className=\"title\">{rowData.Priority}</p>\r\n            </Link>\r\n          );\r\n        },\r\n      },\r\n  \r\n      {\r\n        title: \"عنوان\",\r\n        field: \"title\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return <p className=\"description\">{rowData.title}</p>;\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"زنبورستان\",\r\n        field: \"Beehive\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return <p className=\"description\">{rowData.Beehive}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \" کندو\",\r\n        field: \"Hive\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return <p className=\"description\">{rowData.Hive}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"از تاریخ\",\r\n        field: \"StartDate\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return <div>{rowData.StartDate}</div>;\r\n        },\r\n      },\r\n      {\r\n        title: \"تا تاریخ\",\r\n        field: \"EndDate\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return <p>{rowData.EndDate}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"وضعیت \",\r\n        field: \"State\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return (\r\n            <div className={rowData.State ? \"jobActive\" : \"jobDeactive\"}>\r\n              {rowData.State ? (              \r\n                <img src=\"/assets/check-svgrepo-com (2).png\" />\r\n              ) : (\r\n                <img src=\"/assets/Group 11034.png\" />\r\n              )}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"عملیات\",\r\n        field: \"thumbnail\",\r\n        cellStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        headerStyle: {\r\n          textAlign: \"right\",\r\n        },\r\n        render: (rowData) => {\r\n          return (\r\n            // <Link to={`/app/CompanyList/${rowData.id}`}>\r\n            <div>\r\n              <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                {(popupState) => (\r\n                  <div>\r\n                    <MoreVertOutlined variant=\"contained\" {...bindTrigger(popupState)} style={{cursor:\"pointer\"}}/>\r\n  \r\n                   \r\n                    <Popover\r\n                          {...bindPopover(popupState)}\r\n                          anchorOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"center\",\r\n                          }}\r\n                          transformOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"center\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n                          >\r\n                            <Link\r\n                             onClick={handleClickOpen('body')}\r\n                              style={{\r\n                            \r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n                              }}\r\n                            >\r\n                              <Edit style={{ marginLeft: \"16px\" }} />\r\n                              ویرایش\r\n                            </Link>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                                \r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                              }}\r\n                            >\r\n                              <Share style={{ marginLeft: \"16px\" }} />\r\n                              اشتراک گذاری\r\n                            </div>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                          \r\n                              }}\r\n                            >\r\n                              <img src=\"/assets/move-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                              انتقال\r\n                            </div>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                color:\"red\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                              }}\r\n                              onClick={() => onRowDelete(rowData)}\r\n                            >\r\n                              <img src=\"/assets/trash-svgrepo-com-2.svg\" style={{ margin: \"0 0px 0 24px\" }} />\r\n                              حذف\r\n                            </div>\r\n                          </div>\r\n                    </Popover>\r\n                  </div>\r\n                )}\r\n              </PopupState>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  \r\n    //downloadExcel\r\n    const downloadFile = () => {\r\n      setdownloadOpen(true);\r\n    };\r\n    const downloadExcel = () => {\r\n      const newData = Company.map((row) => {\r\n        delete row.tableData;\r\n        return row;\r\n      });\r\n      const workSheet = XLSX.utils.json_to_sheet(newData);\r\n      const workBook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workBook, workSheet, \"students\");\r\n      //Buffer\r\n      let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n      //Binary string\r\n      XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n      //Download\r\n      XLSX.writeFile(workBook, \"StudentsData.xlsx\");\r\n    };\r\n    const [searched, setSearched] = useState();\r\n  \r\n    const requestSearch = (searchedVal) => {\r\n      const filteredRows = Company.map((rows) => {\r\n        return rows.name;\r\n        // console.log(\"rows.title\",rows)\r\n      }).filter((row) => {\r\n        return row.toLowerCase().includes(searchedVal.toLowerCase());\r\n      });\r\n      setCompany(filteredRows);\r\n      console.log(\"Company\", Company);\r\n      console.log(\"filteredRows\", filteredRows);\r\n    };\r\n    const cancelSearch = () => {\r\n      setSearched(\"\");\r\n      requestSearch(searched);\r\n    };\r\n    const handleBulkDelete = () => {\r\n      console.log(selectedRows);\r\n      const updatedData = Company.filter((row) => !selectedRows.includes(row));\r\n      setCompany(updatedData);\r\n    };\r\n  \r\n    const onRowDelete=(rowData) =>{\r\n      const updatedData=Company.filter((row)=>![rowData].includes(row))\r\n      setCompany(updatedData);\r\n    }\r\n  \r\n    const downloadPdf = () => {\r\n      const doc = new jsPDF();\r\n      doc.text(\"جزییات زنبورستان\", 20, 10);\r\n      doc.autoTable({\r\n        theme: \"grid\",\r\n        columns: columns.map((col) => ({ ...col, dataKey: col.field })),\r\n        body: Company,\r\n      });\r\n      doc.setFont('Iran-Sans'); // set custom font\r\n      doc.save(\"table.pdf\");\r\n    };\r\n    const add = () => {\r\n      return console.log(\"click\");\r\n    };\r\n\r\n    return (\r\n      <div>\r\n  \r\n\r\n        <MaterialTable\r\n          localization={{\r\n            toolbar: {\r\n              searchPlaceholder: \"dfsdfsdf\",\r\n            },\r\n          }}\r\n          title=\"\"\r\n          style={{ borderRadius: \"25px\",minWidth:\"1000px\" }}\r\n          data={Company}\r\n          columns={columns}\r\n          onSelectionChange={(rows) => setSelectedRows(rows)}\r\n          localization={{\r\n            body: {\r\n              editRow: { deleteText: \"آیا میخواهید این سطر را حذف کنید؟\" },\r\n            },\r\n            pagination: {\r\n              labelDisplayedRows: \"{from}-{to} از {count}\",\r\n              labelRowsSelect: 'تعداد ردیف',\r\n              labelRowsPerPage: '۱',\r\n              firstAriaLabel: 'اولین صقحه',\r\n       \r\n              previousAriaLabel: 'صفحه قبل',\r\n       \r\n              nextAriaLabel: 'صفحه بعد',\r\n              lastAriaLabel: 'اخرین صفحه',\r\n            },\r\n            toolbar: {\r\n              nRowsSelected: \"{0} مورد انتخاب شد\",\r\n              searchPlaceholder: \"جستجو کن\",\r\n            },\r\n            header: {\r\n              actions: \"عملیات\",\r\n            },\r\n            body: {\r\n              emptyDataSourceMessage: \"موردی جهت نمایش وجود ندارد.\",\r\n              filterRow: {\r\n                filterTooltip: \"فیلتر\",\r\n              },\r\n            },\r\n          }}\r\n          options={{\r\n            columnsButton: true,\r\n            actionsColumnIndex: -1,\r\n            addRowPosition: \"last\",\r\n            rowStyle: {\r\n              fontWeight: 600,\r\n              textAlign: \"right\",\r\n            },\r\n            headerStyle: {\r\n              fontWeight: 600,\r\n              color: \"rgb( 102, 103 ,104)\",\r\n            },\r\n            selection: true,\r\n            selectionProps: (rowData) => ({\r\n              // checked: Company?.includes(rowData.value) ? true: false,\r\n              onClick: () => {\r\n                console.log(\"clicked asdasda\");\r\n                setToolbar(true);\r\n              },\r\n            }),\r\n            search: true,\r\n            searchFieldAlignment:\"left\",\r\n            searchFieldStyle: {\r\n              borderTop: \"2px solid  rgb( 240 ,240, 240)\",\r\n              borderRight: \"2px solid  rgb( 240 ,240, 240)\",\r\n              borderLeft: \"2px solid  rgb( 240 ,240, 240)\",\r\n              borderBottom: \"none\",\r\n              padding: \"4px\",\r\n              borderRadius: \"8px\",\r\n     \r\n            },\r\n            // filtering: true,\r\n          }}\r\n  \r\n  \r\n        \r\n  \r\n  \r\n  \r\n          components={{\r\n            // Toolbar: (props) => (\r\n            //   <>\r\n            //     <div\r\n            //       style={{\r\n            //         direction: \"rtl\",\r\n            //         display: \"flex\",\r\n            //         justifyContent: \"space-between\",\r\n            //         alignItems: \"center\",\r\n            //         padding: \"16px  32px  0px\",\r\n            //       }}\r\n            //     >\r\n            //       <div\r\n            //         style={{\r\n            //           display: \"flex\",\r\n            //           alignItems: \"center\",\r\n            //           justifyContent: \"center\",\r\n            //         }}\r\n            //       >\r\n            //         <SearchBar\r\n            //           style={{\r\n            //             direction: \"ltr\",\r\n            //             border: \"1px solid red\",\r\n            //             width: \"100%\",\r\n            //             borderRadius: \"8px\",\r\n            //           }}\r\n            //           value={searched}\r\n            //           onChange={(searchVal) => requestSearch(searchVal)}\r\n            //           onCancelSearch={() => cancelSearch()}\r\n            //         />\r\n            //         {/* <MTableToolbar {...props} /> */}\r\n            //         <div\r\n            //           onClick={handleOpen}\r\n            //           style={{\r\n            //             backgroundColor: \"rgb( 227, 156, 0)\",\r\n            //             marginRight: \"32px\",\r\n            //             color: \"#000\",\r\n            //             padding: \"8px\",\r\n            //             display: \"flex\",\r\n            //             alignItems: \"center\",\r\n            //             justifyContent: \"center\",\r\n            //             borderRadius: \"8px\",\r\n            //           }}\r\n            //         >\r\n            //           <img src=\"/assets/Group 182.svg\" />\r\n            //         </div>\r\n            //       </div>\r\n            //       <div\r\n            //         onClick={downloadFile}\r\n            //         style={{\r\n            //           backgroundColor: \"black\",\r\n            //           cursor: \"pointer\",\r\n            //           color: \"white\",\r\n            //           display: \"flex\",\r\n            //           alignItems: \"center\",\r\n            //           justifyContent: \"center\",\r\n            //           borderRadius: \"8px\",\r\n            //           padding: \"8px\",\r\n            //           // marginLeft: \"32px\",\r\n            //         }}\r\n            //       >\r\n            //         <span>دانلود</span>\r\n            //         <img\r\n            //           src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n            //           style={{ marginRight: \"8px\" }}\r\n            //         />\r\n            //       </div>\r\n            //     </div>\r\n            //     <hr\r\n            //       style={{\r\n            //         borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n            //         height: \"2px\",\r\n            //       }}\r\n            //     />\r\n            //     {toolbar ? (\r\n            //       <MTableToolbar {...props}>{console.log(props)}</MTableToolbar>\r\n            //     ) : null}\r\n            //   </>\r\n            // ),\r\n          }}\r\n          actions={[\r\n            {\r\n              icon: () => <Select\r\n                 labelId=\"demo-simple-select-label\"\r\n                 variant=\"outlined\"\r\n                 className={classes.inputSelect}\r\n                 Id='demo-simple-select'\r\n                 style={{width:100}}\r\n                 value={Hive}\r\n                 className={classes.inputSelect}\r\n                 onChange={(e)=>setHive(e.target.value)}>\r\n                   <MenuItem value={\"all\"}><em>All</em></MenuItem>\r\n                   <MenuItem value={2019}>2019</MenuItem>\r\n                   <MenuItem value={2020}>2020</MenuItem>\r\n                   <MenuItem value={2021}>2021</MenuItem>\r\n              </Select>,\r\n  \r\n              tooltip: \"دانلود\",\r\n              isFreeAction: true,\r\n            },\r\n            {\r\n              icon: () => <Select\r\n                 labelId=\"demo-simple-select-label\"\r\n                 variant=\"outlined\"\r\n                 className={classes.inputSelect}\r\n                 Id='demo-simple-select'\r\n                 style={{width:100}}\r\n                 value={State}\r\n                 className={classes.inputSelect}\r\n                 onChange={(e)=>setState(e.target.value)}>\r\n                   <MenuItem value={\"all\"}><em>All</em></MenuItem>\r\n                   <MenuItem value={2019}>2019</MenuItem>\r\n                   <MenuItem value={2020}>2020</MenuItem>\r\n                   <MenuItem value={2021}>2021</MenuItem>\r\n              </Select>,\r\n  \r\n              tooltip: \"دانلود\",\r\n              isFreeAction: true,\r\n            },\r\n            {\r\n              icon: () => <Select\r\n                 labelId=\"demo-simple-select-label\"\r\n                 variant=\"outlined\"\r\n                 className={classes.inputSelect}\r\n                 Id='demo-simple-select'\r\n                 style={{width:100}}\r\n                 value={Priority}\r\n                 className={classes.inputSelect}\r\n                 onChange={(e)=>setPriority(e.target.value)}>\r\n                   <MenuItem value={\"all\"}><em>All</em></MenuItem>\r\n                   <MenuItem value={2019}>2019</MenuItem>\r\n                   <MenuItem value={2020}>2020</MenuItem>\r\n                   <MenuItem value={2021}>2021</MenuItem>\r\n              </Select>,\r\n  \r\n              tooltip: \"دانلود\",\r\n              isFreeAction: true,\r\n            },\r\n            {\r\n              icon: () => (\r\n                \r\n  \r\n  \r\n                \r\n                <div>\r\n                  <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                    {(popupState) => (\r\n                      <div>\r\n                    <MoreVertOutlined variant=\"contained\" {...bindTrigger(popupState)} style={{cursor:\"pointer\"}}/>\r\n  \r\n                        \r\n                        <Popover\r\n                      \r\n  \r\n                          {...bindPopover(popupState)}\r\n                          anchorOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"center\",\r\n                          }}\r\n                          transformOrigin={{\r\n                            vertical: \"top\",\r\n                            horizontal: \"center\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n                          >\r\n                            <Link\r\n                             onClick={handleClickOpen('body')}\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n                              }}\r\n                            >\r\n                              <Edit style={{ marginLeft: \"16px\" }} />\r\n                              ویرایش\r\n                            </Link>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                                \r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                              }}\r\n                            >\r\n                              <Share style={{ marginLeft: \"16px\" }} />\r\n                              اشتراک گذاری\r\n                            </div>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                          \r\n                              }}\r\n                            >\r\n                              <img src=\"/assets/move-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                              انتقال\r\n                            </div>\r\n                            <hr\r\n                              style={{\r\n                                borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                                height: \"2px\",\r\n                              }}\r\n                            />\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                color:\"red\",\r\n                                justifyContent: \"flex-start\",\r\n                                cursor:\"pointer\"\r\n  \r\n                              }}\r\n                              onClick={() => handleBulkDelete(selectedRows)}\r\n                            >\r\n                              <img src=\"/assets/trash-svgrepo-com-2.svg\" style={{ margin: \"0 8px 0 16px\" }} />\r\n                              حذف\r\n                            </div>\r\n                          </div>\r\n                        </Popover>\r\n                      </div>\r\n                    )}\r\n                  </PopupState>\r\n                </div>\r\n              ),\r\n  \r\n              // isFreeAction: true,\r\n            },\r\n  \r\n            {\r\n              icon: () => (\r\n                <div   onClick={handleClickOpen('body')}\r\n                >\r\n                  <img\r\n                    style={{\r\n                      backgroundColor: \"rgb( 227, 156, 0)\",\r\n                      \r\n                      color: \"#000\",\r\n                      padding: \"8px\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      borderRadius: \"8px\",\r\n                    }}\r\n                    src=\"/assets/Group 182.svg\"\r\n                  />\r\n                </div>\r\n              ),\r\n              tooltip: \"اضافه کردن کار\",\r\n              \r\n              isFreeAction: true,\r\n            },\r\n            {\r\n              icon: () => (\r\n                <div\r\n                  onClick={downloadFile}\r\n                  style={{\r\n                    backgroundColor: \"black\",\r\n                    cursor: \"pointer\",\r\n                    color: \"white\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    borderRadius: \"8px\",\r\n                    padding: \"8px\",\r\n                    // marginLeft: \"32px\",\r\n                  }}\r\n                >\r\n                  <span style={{fontFamily:\"Shabnam\",fontSize:\"1rem\"}}>دانلود</span>\r\n                  <img\r\n                    src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n                    style={{ marginRight: \"8px\" }}\r\n                  />\r\n                </div>\r\n              ),\r\n              tooltip: \"دانلود\",\r\n              isFreeAction: true,\r\n            },\r\n  \r\n          ]}\r\n        />\r\n        <div>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"parent-modal-title\"\r\n            aria-describedby=\"parent-modal-description\"\r\n            maxWidth=\"md\"\r\n\r\n          >\r\n              <AddJob />\r\n          </Dialog>\r\n        </div>\r\n  \r\n  \r\n        <div>\r\n        <Dialog\r\n        open={openEdit}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"md\"\r\n      >\r\n             <AddJob onClick={handleClose}/>\r\n       </Dialog>\r\n        </div>\r\n  \r\n        \r\n        <div>\r\n          <Modal\r\n            open={downloadOpen}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"parent-modal-title\"\r\n            aria-describedby=\"parent-modal-description\"\r\n          >\r\n            <Box sx={{ ...style, width: 1000 }} className=\"downloadFile\" style={{ display: \"flex\" ,alignItems: \"center\",justifyContent: \"center\"}}>\r\n              <div onClick={downloadExcel} className=\"downloadExcel\" ><img src=\"/assets/excel-svgrepo-com.svg\"/></div>\r\n              <div onClick={downloadPdf} className=\"downloadPdf\" ><img src=\"/assets/pdf-svgrepo-com (1).svg\"/></div>\r\n            </Box>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default JobCalender;\r\n  ","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\Setting\\Edituser.js",["590","591","592","593","594","595","596","597","598","599","600","601","602","603"],"import { Avatar, Box, Divider, Grid, Modal, TextField, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport {\r\n    BrowserRouter as Router,\r\n\r\n    Link,NavLink,useRouteMatch\r\n\r\n  } from \"react-router-dom\" \r\nimport useStyles from \"./styles\";\r\nimport Adduser from '../User/Adduser';\r\nimport EditPhoneNumber from './EditPhoneNumber';\r\nimport AddSubmitCode from './AddSubmitCode';\r\nimport AddJob from '../JobUser/AddJob';\r\nimport Title from '../../Typography/Title/Title';\r\n\r\nfunction Edituser() {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const classes = useStyles();\r\n     const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n      const handleClose = () => {\r\n        setOpen(false);\r\n\r\n      };\r\n      const style = {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        width: 400,\r\n        bgcolor: \"background.paper\",\r\n        borderRadius:\"16px\",\r\n        boxShadow: 24,\r\n        pt: 2,\r\n        px: 0,\r\n        pb: 2,\r\n      };\r\n    const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/\r\n\r\n    const validationSchema = yup.object().shape({\r\n  \r\n      phoneNumber:yup.string().matches(phoneRegExp, 'شماره موبایل را بدون صفر و با حروف انگلیسی وارد کنید'),\r\n      Username:yup.string().required( 'لطفا نام کاربری خود را وارد کنید'),\r\n      name:yup.string().required('لطفا نام خود را وارد کنید'),\r\n      family:yup.string().required('لطفا نام خانوادگی خود را وارد کنید'),\r\n      email: yup.string().email('لطفا ایمیل معتبر وارد کنید')\r\n  \r\n    });\r\n\r\n    const [data, setData] = useState([\r\n      {\r\n        id: 1,\r\n        titleQuestion:\r\n          \"باسلام زنبوردار عزیز از طریق لینک زیر اپلیکیشن کندووان پلاس را بروز رسانی کنید.\",\r\n        name: \"جعفر\",\r\n        Date: \"1400/01/01\",\r\n        Time: \"12:14\",\r\n      },\r\n      {\r\n        id: 1,\r\n        titleQuestion: \"ممنون از شما حتما رسیدگی خواهد شد.\",\r\n        name: \"رضا\",\r\n        Date: \"1400/01/01\",\r\n        Time: \"12:14\",\r\n      },\r\n    ]);\r\n\r\n\r\n    const {\r\n        register,\r\n        control,\r\n        handleSubmit,\r\n        formState: { errors }\r\n      } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n        defaultValues: data\r\n      });\r\n      const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n        alert(JSON.stringify(data, null, 2));\r\n        // history.push(\"/login/step2\")\r\n      };\r\n      \r\n      let { path, url } = useRouteMatch();\r\n\r\n\r\n\r\n  return (\r\n    <Grid\r\n    container\r\n    style={{\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"16px 32px\",\r\n      justifyContent: \"space-between\",\r\n      borderRadius: \"12px\",\r\n      marginTop: \"24px\",\r\n    }}\r\n  >\r\n<Title title=\"تنظیمات\" variant=\"h5\"/>\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      style={{\r\n        display: \"flex\",\r\n        backgroundColor: \"#fff\",\r\n        alignItems: \"center\",\r\n        padding: \"16px 32px\",\r\n        justifyContent: \"space-between\",\r\n        borderRadius: \"12px\",\r\n        width: \"100%\",\r\n        marginTop:\"32px\"\r\n      }}\r\n    >\r\n      <div style={{ fontSize: \"16px\", fontWeight: \"bold\" ,display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n          <Avatar src='./assets/HeaderProfile.svg' style={{width:\"60px\",height:\"60px\",marginLeft:\"8px\"}}/>\r\n          <div>\r\n              <p>شاهین رضوی</p>\r\n              <p style={{color:\"rgb( 102 ,103 ,104)\"}}>۰۹۱۲۳۴۵۶۷۸۹</p>\r\n          </div>\r\n      </div>\r\n      <div style={{backgroundColor:\"rgba(227 ,23 ,10, 0.11)\",padding:\"8px 16px\",borderRadius:\"8px\",\r\n           color:\"rgb( 227, 23 ,10)\",fontWeight:600}}>خروج از حساب کاربری</div>\r\n    </Grid>\r\n\r\n    <Grid xs={12} style={{padding:\" 32px \", borderRadius:\"12px\",     backgroundColor:\"#fff\",marginTop:\"32px\"}}>\r\n\t          \t{/* <img alt=\"\" className=\"avatar\" src=\"/assets/Untitled-1.svg\"/> */}\r\n              <p style={{fontWeight:600}}>ویرایش اطلاعات کاربری</p>\r\n \r\n<Grid xs={12} justifyContent='space-between' style={{display:\"flex\"}}>  \r\n    <TextField\r\n      \r\n      style={{direction:\"ltr\"}}\r\n      className={classes.TextField}\r\n      label=\"شماره موبایل\"\r\n    //   onChange={e => setLoginValue(e.target.value)}\r\n    onClick={handleOpen}\r\n      id=\"phoneNumber\"\r\n      name=\"phoneNumber\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      margin=\"normal\"\r\n      size=\"small\"\r\n      {...register('phoneNumber')}\r\n      error={errors.phoneNumber ? true : false}\r\n    />\r\n   {/* <Typography variant=\"inherit\" color=\"textSecondary\" style={{color:\"red\"}}>\r\n      {errors.phoneNumber?.message}\r\n    </Typography><br/> */}\r\n\r\n\r\n    <TextField\r\n      \r\n              style={{direction:\"ltr\"}}\r\n                className={classes.TextField}\r\n              label=\"نام کاربری\"\r\n                id=\"Username\"\r\n                name=\"Username\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                size=\"small\"\r\n                {...register('Username')}\r\n                error={errors.phoneNumber ? true : false}\r\n              />\r\n              {/* <Typography variant=\"inherit\" color=\"textSecondary\" style={{color:\"red\"}}>\r\n                {errors.Username?.message}\r\n              </Typography> */}\r\n</Grid>\r\n\r\n<Grid xs={12} justifyContent='space-between' style={{display:\"flex\"}}>\r\n              <TextField\r\n      \r\n      style={{direction:\"ltr\"}}\r\n        className={classes.TextField}\r\n      label=\"نام\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        size=\"small\"\r\n        {...register('name')}\r\n        error={errors.phoneNumber ? true : false}\r\n      />\r\n      {/* <Typography variant=\"inherit\" color=\"textSecondary\" style={{color:\"red\"}}>\r\n        {errors.name?.message}\r\n      </Typography> */}\r\n\r\n\r\n\r\n      <TextField\r\n      \r\n      style={{direction:\"ltr\"}}\r\n        className={classes.TextField}\r\n      label=\"نام خانوادگی\"\r\n        id=\"family\"\r\n        name=\"family\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        size=\"small\"\r\n        {...register('family')}\r\n        error={errors.phoneNumber ? true : false}\r\n      />\r\n      {/* <Typography variant=\"inherit\" color=\"textSecondary\" style={{color:\"red\"}}>\r\n        {errors.family?.message}\r\n      </Typography> */}\r\n     \r\n\r\n</Grid> \r\n\r\n     <Grid>\r\n     <TextField\r\n      \r\n      style={{direction:\"ltr\"}}\r\n        className={classes.TextField}\r\n      label=\"ایمیل\"\r\n        id=\"email\"\r\n        name=\"email\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        size=\"small\"\r\n        {...register('email')}\r\n        error={errors.phoneNumber ? true : false}\r\n      />\r\n      {/* <Typography variant=\"inherit\" color=\"textSecondary\" style={{color:\"red\"}}>\r\n        {errors.email?.message}\r\n      </Typography> */}\r\n    </Grid>\r\n    </Grid>\r\n\r\n    <div>\r\n        <Modal\r\n          open={open}\r\n\r\n\r\n          onClose={handleClose}\r\n          aria-labelledby=\"parent-modal-title\"\r\n          aria-describedby=\"parent-modal-description\"\r\n        >\r\n          <Box sx={{ ...style, width: \"40vw\" }} >\r\n            <EditPhoneNumber />\r\n          </Box>\r\n          \r\n        </Modal>\r\n      </div>\r\n\r\n\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Edituser","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\ApiaryList\\ApiaryList.js",["604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641"],"import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  Fade,\r\n  IconButton,\r\n  Modal,\r\n  Popover,\r\n  Popper,\r\n} from \"@material-ui/core\";\r\nimport React, { Children, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport \"./ApiaryList.css\";\r\nimport XLSX from \"xlsx\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  Edit as EditIcon,\r\n  Info,\r\n  MoreVertOutlined,\r\n  Share,\r\n  TramRounded,\r\n} from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport \"../../../Iran-Sans-normal\";\r\nimport ApiaryAddList from \"../../../components/Form/ApiaryList/ApiaryAddList\";\r\nimport ApiaryUpdateList from \"../../../components/Form/ApiaryList/ApiaryUpdateList\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction ApiaryList() {\r\n  const [open, setOpen] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [downloadOpen, setdownloadOpen] = useState(false);\r\n  const [selectedRows, setSelectedRows] = useState();\r\n  const [toolbar, setToolbar] = useState(false);\r\n  const [scroll, setScroll] = useState(\"paper\");\r\n  const [errorMessage,setErrMessage] = useState()\r\n  const [error,setIserror] = useState()\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n\r\n    setScroll(scrollType);\r\n  };\r\n  const handleClickEdit = (scrollType) => () => {\r\n    setOpenEdit(true);\r\n    setScroll(scrollType);\r\n  };  \r\n  const handleDeleteOpen = (scrollType) => () => {\r\n    setOpenDelete(true);\r\n    setScroll(scrollType);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n  // const handleDeleteOpen = () => {\r\n  //   setOpenDelete(true);\r\n  // };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setdownloadOpen(false);\r\n    setOpenEdit(false);\r\n    setOpenDelete(false);\r\n  };\r\n  const Information=()=>{\r\n        console.log(\"salamsaddfsdfsd\");\r\n  }\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflow: \"scroll\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    borderRadius: \"16px\",\r\n    boxShadow: 24,\r\n    pt: 2,\r\n    px: 4,\r\n    pb: 3,\r\n  };\r\n  const [Apiary, setApiary] = useState([\r\n    {\r\n      id: \"0\",\r\n      name: \"زنبورستان1\",\r\n      State: \"تهران\",\r\n      city: \"تهران\",\r\n      Application: \"افزایش جمعیت\",\r\n      Hives: \"1\",\r\n      InadequatCondition: \"1\",\r\n      goodCondition: \"5\",\r\n      NeedToVisit: \"5\",\r\n    },\r\n    {\r\n      id: \"1\",\r\n      name: \"زنبورستان2\",\r\n      State: \"تهران\",\r\n      city: \"تهران\",\r\n      Application: \"عسل\",\r\n      Hives: \"2\",\r\n      InadequatCondition: \"5\",\r\n      goodCondition: \"5\",\r\n      NeedToVisit: \"5\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: \"زنبورستان3\",\r\n      State: \"اصفهان\",\r\n      city: \"گلپایگان\",\r\n      Application: \"افزایش جمعیت\",\r\n      Hives: \"12\",\r\n      InadequatCondition: \"1\",\r\n      goodCondition: \"5\",\r\n      NeedToVisit: \"5\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      name: \"زنبورستان4\",\r\n      State: \"گلستان\",\r\n      city: \"گرگان\",\r\n      Application: \"عسل\",\r\n      Hives: \"22\",\r\n      InadequatCondition: \"5\",\r\n      goodCondition: \"5\",\r\n      NeedToVisit: \"5\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      name: \"زنبورستان5\",\r\n      State: \"گیلان\",\r\n      city: \"رشت\",\r\n      Application: \"افزایش جمعیت\",\r\n      Hives: \"32\",\r\n      InadequatCondition: \"1\",\r\n      goodCondition: \"5\",\r\n      NeedToVisit: \"5\",\r\n    },\r\n    {\r\n      id: \"5\",\r\n      name: \"زنبورستان6\",\r\n      State: \"مازندران\",\r\n      city: \"انزلی\",\r\n      Application: \"عسل\",\r\n      Hives: \"12\",\r\n      InadequatCondition: \"5\",\r\n      goodCondition: \"5\",\r\n      NeedToVisit: \"5\",\r\n    },\r\n  ]);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   axios.get(\"\")\r\n  //     .then(res => {\r\n  //       setApiary(res.data.data)\r\n  //     })\r\n  //     .catch(error=>{\r\n  //       setErrMessage([\"Cannot load user data\"])\r\n  //       setIserror(true)\r\n  //     })\r\n  // }, [])\r\n\r\n\r\n\r\n  const useStyles = makeStyles({\r\n    Button: {\r\n      margin: \"8px 0px\",\r\n      fontFamily: \"Shabnam\",\r\n      cursor: \"pointer\",\r\n      width: \"5%\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  console.log(Apiary);\r\n  const columns = [\r\n    {\r\n      title: \"زنبورستان\",\r\n      field: \"name\",\r\n\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n\r\n      render: (rowData) => {\r\n        console.log(\"rowData\", rowData);\r\n        return (\r\n          <Link\r\n            to={{\r\n              pathname: `/app/ApiaryList/Beehive/${rowData.id}`,\r\n              state: { rowData },\r\n            }}\r\n            className=\"title\"\r\n            style={{ display: \"flex\" }}\r\n          >\r\n            <p className=\"title\">{rowData.name}</p>\r\n          </Link>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \" استان\",\r\n      field: \"State\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.State}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \" شهر\",\r\n      field: \"city\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.city}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"تعداد کندو\",\r\n      field: \"Hives\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.Hives}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"وضعیت نامناسب\",\r\n      field: \"InadequatCondition\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <div className=\"circleRed\">{rowData.InadequatCondition}</div>;\r\n      },\r\n    },\r\n    {\r\n      title: \"نیازمند بازدید\",\r\n      field: \"NeedToVisit\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"circleYellow\">{rowData.NeedToVisit}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"وضعیت مناسب\",\r\n      field: \"goodCondition\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"circleGreen\">{rowData.goodCondition}</p>;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"عملیات\",\r\n      field: \"thumbnail\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          // <Link to={`/app/ApiaryList/${rowData.id}`}>\r\n          <div>\r\n          <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n              {(popupState) => (\r\n                <div>\r\n                  <MoreVertOutlined \r\n                    variant=\"contained\"\r\n                    {...bindTrigger(popupState)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    \r\n\r\n                  />\r\n\r\n            \r\n                    <Popover\r\n                      {...bindPopover(popupState)}\r\n                      anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"center\",\r\n                      }}\r\n                      transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\",\r\n                      }}\r\n                    >\r\n                      <div style={{ borderRadius: \" 16px\", padding: \" 16px\",textDecoration:\"none\"}}>\r\n                        <Link\r\n                          to={`/app/ApiaryList/${rowData.id}`}\r\n                          onClick={handleClickEdit(\"body\")}\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor: \"pointer\",\r\n                            color:\"#000\" \r\n                          }}\r\n                        >\r\n                          <Edit style={{ marginLeft: \"16px\" }} />\r\n                          ویرایش\r\n                        </Link>\r\n                        <hr\r\n                          style={{\r\n                            borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                            height: \"2px\",\r\n                          }}\r\n                        />\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                        >\r\n                          <Share style={{ marginLeft: \"16px\" }} />\r\n                          اشتراک گذاری\r\n                        </div>\r\n                        <hr\r\n                          style={{\r\n                            borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                            height: \"2px\",\r\n                          }}\r\n                        />\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src=\"/assets/move-svgrepo-com.svg\"\r\n                            style={{ margin: \"0 0px 0 24px\" }}\r\n                          />\r\n                          انتقال\r\n                        </div>\r\n                        <hr\r\n                          style={{\r\n                            borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                            height: \"2px\",\r\n                          }}\r\n                        />\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            color: \"red\",\r\n                            justifyContent: \"flex-start\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n\r\n                          onClick={() => onRowDelete(rowData,popupState)}\r\n                          // onClick={handleDeleteOpen}\r\n                        >\r\n                          <img\r\n                            src=\"/assets/trash-svgrepo-com-2.svg\"\r\n                            style={{ margin: \"0 0px 0 24px\" }}\r\n                          />\r\n                         S حذف\r\n                        </div>\r\n                      </div>\r\n                    </Popover>\r\n                  \r\n                </div>\r\n              )}\r\n            </PopupState>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //downloadExcel\r\n  const downloadFile = () => {\r\n    setdownloadOpen(true);\r\n  };\r\n  const downloadExcel = () => {\r\n    const newData = Apiary.map((row) => {\r\n      // bug\r\n      // delete row.tableData;\r\n      console.log(\"row\", row.tableData);\r\n      return row;\r\n    });\r\n    const workSheet = XLSX.utils.json_to_sheet(newData);\r\n    const workBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, \"Apiary\");\r\n    //Buffer\r\n    let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n    //Binary string\r\n    XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n    //Download\r\n    XLSX.writeFile(workBook, \"لیست زنبورستان.xlsx\");\r\n  };\r\n\r\n  const [searched, setSearched] = useState();\r\n\r\n  const requestSearch = (searchedVal) => {\r\n    const filteredRows = Apiary.map((rows) => {\r\n      return rows.name;\r\n      // console.log(\"rows.title\",rows)\r\n    }).filter((row) => {\r\n      return row.toLowerCase().includes(searchedVal.toLowerCase());\r\n    });\r\n    setApiary(filteredRows);\r\n    console.log(\"Apiary\", Apiary);\r\n    console.log(\"filteredRows\", filteredRows);\r\n  };\r\n  const cancelSearch = () => {\r\n    setSearched(\"\");\r\n    requestSearch(searched);\r\n  };\r\n\r\n  const handleBulkDelete = () => {\r\n    if(window.confirm(\"آیا از حدف این مورد اطمینان دارید؟\")){\r\n      // const response = await axios.delete(`https://sdfsdf/${selectedRows[0].id}`)\r\n    console.log(\"selectedRows\",selectedRows);\r\n    const updatedData = Apiary.filter((row) => !selectedRows.includes(row));\r\n    setApiary(updatedData);\r\n  }};\r\n\r\n  const onRowDelete = (rowData,popupState) => {\r\n    if(window.confirm(\"آیا از حدف این مورد اطمینان دارید؟\")){\r\n      // const response = await axios.delete(`https://sdfsdf/${rowData.id}`)\r\n    console.log(\"rowData23123\", rowData);\r\n    const updatedData = Apiary.filter((row) => ![rowData].includes(row));\r\n    setApiary(updatedData);\r\n    popupState.close();\r\n   \r\n  }};\r\n  \r\n  const downloadPdf = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"جزییات زنبورستان\", 20, 10);\r\n    console.log(\"doc\", doc.text);\r\n    doc.autoTable({\r\n      theme: \"grid\",\r\n      columns: columns.map((col) => ({ ...col, dataKey: col.field })),\r\n      body: Apiary,\r\n    });\r\n    console.log(\"Apiary\", Apiary);\r\n    console.log(\"columns\", columns);\r\n    // doc.addFileToVFS(\"Shabnam-normal.ttf\", font);\r\n    doc.addFont(\"Shabnam-normal.ttf\", \"Shabnam\", \"normal\");\r\n    doc.setFont(\"font\");\r\n    // doc.setFont(\"Shabnam\"); // set custom font\r\n    doc.save(\"table.pdf\");\r\n  };\r\n\r\n  const add = () => {\r\n    return console.log(\"click\");\r\n  };\r\n\r\n  // const { loading, error, data } = useQuery(GET_APIARIES)\r\n  // if (loading) return 'صفحه در حال لود شدن است'\r\n  // if (error) return `Error! ${error.message}`\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ color: \"rgb(227, 156, 0)\" }}>زنبورستان</h2>\r\n\r\n      <MaterialTable\r\n        localization={{\r\n          toolbar: {\r\n            searchPlaceholder: \"زنبورستان\",\r\n          },\r\n        }}\r\n        title=\"\"\r\n        style={{ borderRadius: \"25px\" }}\r\n        data={Apiary}\r\n        columns={columns}\r\n        onSelectionChange={(rows) => setSelectedRows(rows)}\r\n        localization={{\r\n          body: {\r\n            editRow: { deleteText: \"آیا میخواهید این سطر را حذف کنید؟\" },\r\n          },\r\n          pagination: {\r\n            labelDisplayedRows: \"{from}-{to} از {count}\",\r\n            labelRowsSelect: \"تعداد ردیف\",\r\n            labelRowsPerPage: \"۱\",\r\n            firstAriaLabel: \"اولین صقحه\",\r\n\r\n            previousAriaLabel: \"صفحه قبل\",\r\n\r\n            nextAriaLabel: \"صفحه بعد\",\r\n            lastAriaLabel: \"اخرین صفحه\",\r\n          },\r\n          toolbar: {\r\n            nRowsSelected: \"{0} مورد انتخاب شد\",\r\n            searchPlaceholder: \"جستجو کن\",\r\n          },\r\n          header: {\r\n            actions: \"عملیات\",\r\n          },\r\n          body: {\r\n            emptyDataSourceMessage: \"موردی جهت نمایش وجود ندارد.\",\r\n            filterRow: {\r\n              filterTooltip: \"فیلتر\",\r\n            },\r\n          },\r\n        }}\r\n        options={{\r\n          columnsButton: true,\r\n          actionsColumnIndex: -1,\r\n          addRowPosition: \"last\",\r\n          rowStyle: {\r\n            fontWeight: 600,\r\n            textAlign: \"right\",\r\n          },\r\n          headerStyle: {\r\n            fontWeight: 600,\r\n            color: \"rgb( 102, 103 ,104)\",\r\n          },\r\n          selection: true,\r\n          selectionProps: (rowData) => ({\r\n            // checked: Apiary?.includes(rowData.value) ? true: false,\r\n            onClick: () => {\r\n              console.log(\"clicked asdasda\");\r\n              setToolbar(true);\r\n            },\r\n          }),\r\n          search: true,\r\n          searchFieldAlignment: \"left\",\r\n          searchFieldStyle: {\r\n            borderTop: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderRight: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderLeft: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderBottom: \"none\",\r\n            padding: \"4px\",\r\n            borderRadius: \"8px\",\r\n          },\r\n          // filtering: true,\r\n        }}\r\n        // components={\r\n\r\n        //   {\r\n        //     // Toolbar: (props) => (\r\n        //     //   <>\r\n        //     //     <div\r\n        //     //       style={{\r\n        //     //         direction: \"rtl\",\r\n        //     //         display: \"flex\",\r\n        //     //         justifyContent: \"space-between\",\r\n        //     //         alignItems: \"center\",\r\n        //     //         padding: \"16px  32px  0px\",\r\n        //     //       }}\r\n        //     //     >\r\n        //     //       <div\r\n        //     //         style={{\r\n        //     //           display: \"flex\",\r\n        //     //           alignItems: \"center\",\r\n        //     //           justifyContent: \"center\",\r\n        //     //         }}\r\n        //     //       >\r\n        //     //         <SearchBar\r\n        //     //           style={{\r\n        //     //             direction: \"ltr\",\r\n        //     //             border: \"1px solid red\",\r\n        //     //             width: \"100%\",\r\n        //     //             borderRadius: \"8px\",\r\n        //     //           }}\r\n        //     //           value={searched}\r\n        //     //           onChange={(searchVal) => requestSearch(searchVal)}\r\n        //     //           onCancelSearch={() => cancelSearch()}\r\n        //     //         />\r\n        //     //         {/* <MTableToolbar {...props} /> */}\r\n        //     //         <div\r\n        //     //           onClick={handleOpen}\r\n        //     //           style={{\r\n        //     //             backgroundColor: \"rgb( 227, 156, 0)\",\r\n        //     //             marginRight: \"32px\",\r\n        //     //             color: \"#000\",\r\n        //     //             padding: \"8px\",\r\n        //     //             display: \"flex\",\r\n        //     //             alignItems: \"center\",\r\n        //     //             justifyContent: \"center\",\r\n        //     //             borderRadius: \"8px\",\r\n        //     //           }}\r\n        //     //         >\r\n        //     //           <img src=\"/assets/Group 182.svg\" />\r\n        //     //         </div>\r\n        //     //       </div>\r\n        //     //       <div\r\n        //     //         onClick={downloadFile}\r\n        //     //         style={{\r\n        //     //           backgroundColor: \"black\",\r\n        //     //           cursor: \"pointer\",\r\n        //     //           color: \"white\",\r\n        //     //           display: \"flex\",\r\n        //     //           alignItems: \"center\",\r\n        //     //           justifyContent: \"center\",\r\n        //     //           borderRadius: \"8px\",\r\n        //     //           padding: \"8px\",\r\n        //     //           // marginLeft: \"32px\",\r\n        //     //         }}\r\n        //     //       >\r\n        //     //         <span>دانلود</span>\r\n        //     //         <img\r\n        //     //           src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n        //     //           style={{ marginRight: \"8px\" }}\r\n        //     //         />\r\n        //     //       </div>\r\n        //     //     </div>\r\n        //     //     <hr\r\n        //     //       style={{\r\n        //     //         borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n        //     //         height: \"2px\",\r\n        //     //       }}\r\n        //     //     />\r\n        //     //     {toolbar ? (\r\n        //     //       <MTableToolbar {...props}>{console.log(props)}</MTableToolbar>\r\n        //     //     ) : null}\r\n        //     //   </>\r\n        //     // ),\r\n        //   }\r\n        // }\r\n\r\n        actions={[\r\n          {\r\n            icon: () => (\r\n              <div>\r\n                <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                  {(popupState) => (\r\n                    <div>\r\n                      <MoreVertOutlined\r\n                        variant=\"contained\"\r\n                        {...bindTrigger(popupState)}\r\n                        style={{ cursor: \"pointer\" }}\r\n\r\n                      />\r\n\r\n                      <Popover\r\n                        {...bindPopover(popupState)}\r\n                        anchorOrigin={{\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                        transformOrigin={{\r\n                          vertical: \"top\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n                        >\r\n                   \r\n                          <Link\r\n                            to={`/app/ApiaryList/${selectedRows}`}\r\n                            onClick={handleClickEdit(\"body\")}\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <Edit style={{ marginLeft: \"16px\" }} />\r\n                            ویرایش\r\n                          </Link>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <Share style={{ marginLeft: \"16px\" }} />\r\n                            اشتراک گذاری\r\n                          </div>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <img\r\n                              src=\"/assets/move-svgrepo-com.svg\"\r\n                              style={{ margin: \"0 0px 0 24px\" }}\r\n                            />\r\n                            انتقال\r\n                          </div>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              color: \"red\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => handleBulkDelete(selectedRows)}\r\n                          >\r\n                            <img\r\n                              src=\"/assets/trash-svgrepo-com-2.svg\"\r\n                              style={{ margin: \"0 8px 0 16px\" }}\r\n                              alt=\"\"\r\n                            />\r\n                             حذف\r\n                          </div>\r\n                        </div>\r\n                      </Popover>\r\n                    </div>\r\n                  )}\r\n                </PopupState>\r\n              </div>\r\n            ),\r\n\r\n            // isFreeAction: true,\r\n          },\r\n\r\n          {\r\n            icon: () => (\r\n              <div onClick={handleClickOpen(\"body\")}>\r\n                <img\r\n                  style={{\r\n                    backgroundColor: \"rgb( 227, 156, 0)\",\r\n\r\n                    color: \"#000\",\r\n                    padding: \"8px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    borderRadius: \"8px\",\r\n                  }}\r\n                  src=\"/assets/Group 182.svg\"\r\n                />\r\n              </div>\r\n            ),\r\n            tooltip: \"اضافه کردن زنبورستان\",\r\n\r\n            isFreeAction: true,\r\n          },\r\n          {\r\n            icon: () => (\r\n              <div\r\n                onClick={downloadFile}\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  cursor: \"pointer\",\r\n                  color: \"white\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  borderRadius: \"8px\",\r\n                  padding: \"8px\",\r\n                  // marginLeft: \"32px\",\r\n                }}\r\n              >\r\n                <span style={{ fontFamily: \"Shabnam\", fontSize: \"1rem\" }}>\r\n                  دانلود\r\n                </span>\r\n                <img\r\n                  src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n                  style={{ marginRight: \"8px\" }}\r\n                />\r\n              </div>\r\n            ),\r\n            tooltip: \"دانلود\",\r\n            isFreeAction: true,\r\n          },\r\n        ]}\r\n      />\r\n\r\n      <div>\r\n        <Dialog\r\n          PaperProps={{\r\n            style: { borderRadius: 12, width: \"70%\" },\r\n          }}\r\n          open={open}\r\n          onClose={handleClose}\r\n          scroll={scroll}\r\n          aria-labelledby=\"scroll-dialog-title\"\r\n          aria-describedby=\"scroll-dialog-description\"\r\n          maxWidth=\"xl\"\r\n        >\r\n          <ApiaryAddList Apiary={Apiary} setApiary={setApiary}/>\r\n        </Dialog>\r\n      </div>\r\n\r\n      <div>\r\n        <Dialog\r\n          PaperProps={{\r\n            style: { borderRadius: 12, width: \"70%\" },\r\n          }}\r\n          open={openEdit}\r\n          onClose={handleClose}\r\n          scroll={scroll}\r\n          aria-labelledby=\"scroll-dialog-title\"\r\n          aria-describedby=\"scroll-dialog-description\"\r\n          maxWidth=\"xl\"\r\n        >\r\n          <ApiaryUpdateList Apiary={Apiary} setApiary={setApiary}/>\r\n        </Dialog>\r\n      </div>\r\n\r\n      <div>\r\n        <Modal\r\n          open={openDelete}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"parent-modal-title\"\r\n          aria-describedby=\"parent-modal-description\"\r\n        >\r\n          <Box\r\n            sx={{ ...style, width: 1000 }}\r\n            className=\"downloadFile\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <button onClick={() => handleBulkDelete(selectedRows)}>Delete</button>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n\r\n      <div>\r\n        <Modal\r\n          open={downloadOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"parent-modal-title\"\r\n          aria-describedby=\"parent-modal-description\"\r\n        >\r\n          <Box\r\n            sx={{ ...style, width: 1000 }}\r\n            className=\"downloadFile\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div onClick={downloadExcel} className=\"downloadExcel\">\r\n              <img src=\"/assets/excel-svgrepo-com.svg\" />\r\n            </div>\r\n            <div onClick={downloadPdf} className=\"downloadPdf\">\r\n              <img src=\"/assets/pdf-svgrepo-com (1).svg\" />\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ApiaryList;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Hive\\Hive.js",["642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677"],"\r\nimport {\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Dialog,\r\n  Fade,\r\n  IconButton,\r\n  MenuItem,\r\n  Modal,\r\n  Popover,\r\n  Popper,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { Children, useEffect, useState } from \"react\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport axios from \"axios\";\r\nimport useStyles from \"./styles\";\r\nimport \"./Hive.css\";\r\nimport XLSX from \"xlsx\";\r\nimport { Delete, Edit, Edit as EditIcon, MoreVertOutlined, NavigateBefore, NavigateNext, Share } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport CompanyAddList from \"../../../components/Form/ApiaryList/ApiaryAddList\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport \"../../../Iran-Sans-normal\";\r\nimport ApiaryAddList from \"../../../components/Form/ApiaryList/ApiaryAddList\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Title from \"../../../components/Typography/Title/Title\";\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nfunction  Hive() {\r\n  const location = useLocation()\r\n  // window.localStorage.getItem(location.state.rowDatas)\r\n  // const rowDatas= window.localStorage.setItem()\r\n  // console.log(\"location\",location)\r\n  // console.log(\"rowDatanew\",rowDatas)\r\n  const [open, setOpen] = useState(false);\r\n  const [downloadOpen, setdownloadOpen] = useState(false);\r\n\r\n  const [selectedRows, setSelectedRows] = useState();\r\n\r\n  const [toolbar, setToolbar] = useState(false);\r\n  const[Hive,setHive]=useState(\"all\")\r\n  const [scroll, setScroll] = useState('paper');\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n\r\n    setScroll(scrollType);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setdownloadOpen(false);\r\n  };\r\n  \r\n  useEffect(()=>{\r\n    console.log(\"Hive\",Hive)\r\n  },[Hive])\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflow:'scroll',\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    borderRadius:\"16px\",\r\n    boxShadow: 24,\r\n    pt: 2,\r\n    px: 4,\r\n    pb: 3,\r\n  };\r\n  const [Company, setCompany] = useState([\r\n    {\r\n      id: \"1\",\r\n      name: \"کندوی 1\",\r\n      HiveType: \"نوع کندو\",\r\n      RaceQueen: \"نژاد ملکه\",\r\n      date: \"23/09/1400\",\r\n      status: 1,\r\n      Job: 1,\r\n      Sick: 1,\r\n      Queen: 1,\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: \"کندوی 2\",\r\n      HiveType: \"نوع کندو\",\r\n      RaceQueen: \"نژاد ملکه\",\r\n      date: \"23/09/1400\",\r\n      status: 0,\r\n      Job: 0,\r\n      Sick: 0,\r\n      Queen: 0,\r\n    },\r\n  ]);\r\n  // const useStyles = makeStyles({\r\n  //   Button: {\r\n  //     margin: \"8px 0px\",\r\n  //     fontFamily: \"Shabnam\",\r\n  //     cursor: \"pointer\",\r\n  //     width: \"5%\",\r\n  //   },\r\n  // });\r\n  \r\n  const classes = useStyles();\r\n\r\n  console.log(Company);\r\n  const columns = [\r\n\r\n    {\r\n      title: \"نام کندو\",\r\n      field: \"name\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n\r\n      render: (rowData) => {\r\n        console.log(\"rowData\", rowData);\r\n        return (\r\n          <Link\r\n            to={`/app/ApiaryList/Beehive/Hive/${rowData.id}`}\r\n            style={{ display: \"flex\",textDecoration:\"none\" ,color:\"black\",cursor:\"pointer\"}}\r\n          >\r\n            {rowData.name}\r\n          </Link>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \" نوع کندو\",\r\n      field: \"HiveType\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.HiveType}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \" نژاد ملکه\",\r\n      field: \"RaceQueen\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.RaceQueen}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"تاریخ ایجاد\",\r\n      field: \"date\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.date}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"وضعیت برد\",\r\n      field: \"status\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          <div className={rowData.status ? \"statusActive\" : \"statusDeactive\"}>\r\n            {rowData.status ? \"فعال\" : \"غیرفعال\"}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"کار\",\r\n      field: \"Job\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          <div className={rowData.Job ? \"jobActive\" : \"jobDeactive\"}>\r\n            {rowData.Job ? (\r\n              <img src=\"/assets/checklist-svgrepo-com-1.svg\" />\r\n            ) : (\r\n              <img src=\"/assets/checklist-svgrepo-com.svg\" />\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"بیماری\",\r\n      field: \"Sick\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          <div className={rowData.Job ? \"sickActive\" : \"sickDeactive\"}>\r\n            {rowData.Job ? (\r\n              <img src=\"/assets/sickness-svgrepo-com-1.svg\" />\r\n            ) : (\r\n              <img src=\"/assets/sickness-svgrepo-com-2.svg\" />\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"ملکه\",\r\n      field: \"Queen\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          <div className={rowData.Job ? \"jobActive\" : \"jobDeactive\"}>\r\n            {rowData.Job ? (\r\n              <img src=\"/assets/Component 24 – 6.svg\" />\r\n            ) : (\r\n              <img src=\"/assets/Component 24 – 5.svg\" />\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"عملیات\",\r\n      field: \"action\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return (\r\n          // <Link to={`/app/CompanyList/${rowData.id}`}>\r\n          <div>\r\n            <PopupState variant=\"popover\" popupId=\"demo-popup-popover\" style={{cursor:\"pointer\"}}>\r\n              {(popupState) => (\r\n                <div>\r\n                  <MoreVertOutlined variant=\"contained\" {...bindTrigger(popupState)} style={{cursor:\"pointer\"}}/>\r\n\r\n                  <Popover\r\n                    {...bindPopover(popupState)}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                  >\r\n                    <div style={{ borderRadius: \" 16px\", padding: \" 16px\" }}>\r\n                      <div\r\n                      \r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-start\",\r\n                        }}\r\n                      >\r\n                        <Edit style={{ marginLeft: \"16px\" }} />\r\n                        ویرایش\r\n                      </div>\r\n                      <hr\r\n                        style={{\r\n                          borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                          height: \"2px\",\r\n                        }}\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-start\",\r\n                        }}\r\n                      >\r\n                        <Edit style={{ marginLeft: \"16px\" }} />\r\n                        اشتراک گذاری\r\n                      </div>\r\n                      <hr\r\n                        style={{\r\n                          borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                          height: \"2px\",\r\n                        }}\r\n                      />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor:\"pointer\"\r\n\r\n                        \r\n                            }}\r\n                          >\r\n                            <img src=\"/assets/move-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                            انتقال\r\n                          </div>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              color:\"red\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor:\"pointer\"\r\n\r\n                            }}\r\n                            onClick={() => onRowDelete(rowData)}\r\n                          >\r\n                            <img src=\"/assets/trash-svgrepo-com-2.svg\" style={{ margin: \"0 0px 0 24px\" }} />\r\n                            حذف\r\n                          </div>\r\n                    </div>\r\n                  </Popover>\r\n                </div>\r\n              )}\r\n            </PopupState>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //downloadExcel\r\n  const downloadFile = () => {\r\n    setdownloadOpen(true);\r\n  };\r\n  const downloadExcel = () => {\r\n    const newData = Company.map((row) => {\r\n      delete row.tableData;\r\n      return row;\r\n    });\r\n    const workSheet = XLSX.utils.json_to_sheet(newData);\r\n    const workBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, \"students\");\r\n    //Buffer\r\n    let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n    //Binary string\r\n    XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n    //Download\r\n    XLSX.writeFile(workBook, \"StudentsData.xlsx\");\r\n  };\r\n  const [searched, setSearched] = useState();\r\n\r\n  const requestSearch = (searchedVal) => {\r\n    const filteredRows = Company.map((rows) => {\r\n      return rows.name;\r\n      // console.log(\"rows.title\",rows)\r\n    }).filter((row) => {\r\n      return row.toLowerCase().includes(searchedVal.toLowerCase());\r\n    });\r\n    setCompany(filteredRows);\r\n    console.log(\"Company\", Company);\r\n    console.log(\"filteredRows\", filteredRows);\r\n  };\r\n  const cancelSearch = () => {\r\n    setSearched(\"\");\r\n    requestSearch(searched);\r\n  };\r\n  const handleBulkDelete = async() => {\r\n    if(window.confirm(\"آیا از حدف این مورد اطمینان دارید؟\")){\r\n      // const response = await axios.delete(`https://sdfsdf/${selectedRows[0].id}`)\r\n      console.log(\"selectedRows\",selectedRows[0].id)\r\n   \r\n    const updatedData = Company.filter((row) => !selectedRows.includes(row));\r\n    setCompany(updatedData);\r\n  }};\r\n\r\n  const onRowDelete= async(rowData) => {\r\n    if(window.confirm(\"آیا از حدف این مورد اطمینان دارید؟\")){\r\n      // const response = await axios.delete(`https://sdfsdf/${rowData.id}`)\r\n      console.log(\"rowData\",rowData.id)\r\n    const updatedData=Company.filter((row)=>![rowData].includes(row))\r\n    setCompany(updatedData);\r\n  }};\r\n\r\n  const downloadPdf = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"جزییات زنبورستان\", 20, 10);\r\n    doc.autoTable({\r\n      theme: \"grid\",\r\n      columns: columns.map((col) => ({ ...col, dataKey: col.field })),\r\n      body: Company,\r\n    });\r\n    doc.setFont('Iran-Sans'); // set custom font\r\n    doc.save(\"table.pdf\");\r\n  };\r\n  const add = () => {\r\n    return console.log(\"click\");\r\n  };\r\n  \r\n  const breadcrumbs = [\r\n\r\n    <Link\r\n      to=\"/app/ApiaryList\"\r\n      key=\"1\"\r\n      style={{textDecoration:\"none\",cursor:\"pointer\"}}\r\n    >\r\n          <Title key=\"2\" title=\"زنبورستان \"/>\r\n\r\n    </Link>,\r\n    <Title key=\"2\" title=\"زنبورستان ۱\"/>\r\n\r\n\r\n  ];\r\n  return (\r\n    \r\n    <div>\r\n      <Breadcrumbs \r\n        separator={<NavigateBefore fontSize=\"large\" style={{color:\"rgb(227, 156, 0)\"}} />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n      <MaterialTable\r\n        localization={{\r\n          toolbar: {\r\n            searchPlaceholder: \"dfsdfsdf\",\r\n          },\r\n        }}\r\n        title=\"\"\r\n        style={{ borderRadius: \"25px\",marginTop:\"32px\" }}\r\n        data={Company}\r\n        columns={columns}\r\n        onSelectionChange={(rows) => setSelectedRows(rows)}\r\n        localization={{\r\n          body: {\r\n            editRow: { deleteText: \"آیا میخواهید این سطر را حذف کنید؟\" },\r\n          },\r\n          pagination: {\r\n            labelDisplayedRows: \"{from}-{to} از {count}\",\r\n            labelRowsSelect: 'تعداد ردیف',\r\n            labelRowsPerPage: '۱',\r\n            firstAriaLabel: 'اولین صقحه',\r\n     \r\n            previousAriaLabel: 'صفحه قبل',\r\n     \r\n            nextAriaLabel: 'صفحه بعد',\r\n            lastAriaLabel: 'اخرین صفحه',\r\n          },\r\n          toolbar: {\r\n            nRowsSelected: \"{0} مورد انتخاب شد\",\r\n            searchPlaceholder: \"جستجو کن\",\r\n          },\r\n          header: {\r\n            actions: \"عملیات\",\r\n          },\r\n          body: {\r\n            emptyDataSourceMessage: \"موردی جهت نمایش وجود ندارد.\",\r\n            filterRow: {\r\n              filterTooltip: \"فیلتر\",\r\n            },\r\n          },\r\n        }}\r\n        options={{\r\n          \r\n          columnsButton: true,\r\n          actionsColumnIndex: -1,\r\n          addRowPosition: \"last\",\r\n          rowStyle: {\r\n            fontWeight: 600,\r\n            textAlign: \"right\",\r\n          },\r\n          headerStyle: {\r\n            fontWeight: 600,\r\n            color: \"rgb( 102, 103 ,104)\",\r\n          },\r\n          selection: true,\r\n          selectionProps: (rowData) => ({\r\n            // checked: Company?.includes(rowData.value) ? true: false,\r\n            onClick: () => {\r\n              console.log(\"clicked asdasda\");\r\n              setToolbar(true);\r\n            },\r\n          }),\r\n          search: true,\r\n          searchFieldAlignment:\"left\",\r\n          searchFieldStyle: {\r\n            borderTop: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderRight: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderLeft: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderBottom: \"none\",\r\n            padding: \"4px\",\r\n            borderRadius: \"8px\",\r\n   \r\n          },\r\n          // filtering: true,\r\n        }}\r\n\r\n\r\n      \r\n\r\n\r\n\r\n        components={{\r\n          // Toolbar: (props) => (\r\n          //   <>\r\n          //     <div\r\n          //       style={{\r\n          //         direction: \"rtl\",\r\n          //         display: \"flex\",\r\n          //         justifyContent: \"space-between\",\r\n          //         alignItems: \"center\",\r\n          //         padding: \"16px  32px  0px\",\r\n          //       }}\r\n          //     >\r\n          //       <div\r\n          //         style={{\r\n          //           display: \"flex\",\r\n          //           alignItems: \"center\",\r\n          //           justifyContent: \"center\",\r\n          //         }}\r\n          //       >\r\n          //         <SearchBar\r\n          //           style={{\r\n          //             direction: \"ltr\",\r\n          //             border: \"1px solid red\",\r\n          //             width: \"100%\",\r\n          //             borderRadius: \"8px\",\r\n          //           }}\r\n          //           value={searched}\r\n          //           onChange={(searchVal) => requestSearch(searchVal)}\r\n          //           onCancelSearch={() => cancelSearch()}\r\n          //         />\r\n          //         {/* <MTableToolbar {...props} /> */}\r\n          //         <div\r\n          //           onClick={handleOpen}\r\n          //           style={{\r\n          //             backgroundColor: \"rgb( 227, 156, 0)\",\r\n          //             marginRight: \"32px\",\r\n          //             color: \"#000\",\r\n          //             padding: \"8px\",\r\n          //             display: \"flex\",\r\n          //             alignItems: \"center\",\r\n          //             justifyContent: \"center\",\r\n          //             borderRadius: \"8px\",\r\n          //           }}\r\n          //         >\r\n          //           <img src=\"/assets/Group 182.svg\" />\r\n          //         </div>\r\n          //       </div>\r\n          //       <div\r\n          //         onClick={downloadFile}\r\n          //         style={{\r\n          //           backgroundColor: \"black\",\r\n          //           cursor: \"pointer\",\r\n          //           color: \"white\",\r\n          //           display: \"flex\",\r\n          //           alignItems: \"center\",\r\n          //           justifyContent: \"center\",\r\n          //           borderRadius: \"8px\",\r\n          //           padding: \"8px\",\r\n          //           // marginLeft: \"32px\",\r\n          //         }}\r\n          //       >\r\n          //         <span>دانلود</span>\r\n          //         <img\r\n          //           src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n          //           style={{ marginRight: \"8px\" }}\r\n          //         />\r\n          //       </div>\r\n          //     </div>\r\n          //     <hr\r\n          //       style={{\r\n          //         borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n          //         height: \"2px\",\r\n          //       }}\r\n          //     />\r\n          //     {toolbar ? (\r\n          //       <MTableToolbar {...props}>{console.log(props)}</MTableToolbar>\r\n          //     ) : null}\r\n          //   </>\r\n          // ),\r\n        }}\r\n        actions={[\r\n          {\r\n            icon: () => <Select\r\n               labelId=\"demo-simple-select-label\"\r\n               variant=\"outlined\"\r\n\r\n               Id='demo-simple-select'\r\n               style={{width:100}}\r\n               value={Hive}\r\n               className={classes.inputSelect}\r\n               onChange={(e)=>setHive(e.target.value)}>\r\n                 <MenuItem value={\"all\"}><em>All</em></MenuItem>\r\n                 <MenuItem value={2019}>2019</MenuItem>\r\n                 <MenuItem value={2020}>2020</MenuItem>\r\n                 <MenuItem value={2021}>2021</MenuItem>\r\n            </Select>,\r\n\r\n            tooltip: \"دانلود\",\r\n            isFreeAction: true,\r\n          },\r\n          {\r\n            icon: () => (\r\n              \r\n\r\n\r\n              \r\n              <div>\r\n                <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                  {(popupState) => (\r\n                    <div>\r\n                  <MoreVertOutlined variant=\"contained\" {...bindTrigger(popupState)} style={{cursor:\"pointer\"}}/>\r\n\r\n                      \r\n                      <Popover\r\n                    \r\n\r\n                        {...bindPopover(popupState)}\r\n                        anchorOrigin={{\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                        transformOrigin={{\r\n                          vertical: \"top\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor:\"pointer\"\r\n                            }}\r\n                          >\r\n                            <Edit style={{ marginLeft: \"16px\" }} />\r\n                            ویرایش\r\n                          </div>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                              \r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor:\"pointer\"\r\n\r\n                            }}\r\n                          >\r\n                            <Share style={{ marginLeft: \"16px\" }} />\r\n                            اشتراک گذاری\r\n                          </div>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor:\"pointer\"\r\n\r\n                        \r\n                            }}\r\n                          >\r\n                            <img src=\"/assets/move-svgrepo-com.svg\" style={{ margin: \"0 0px 0 24px\"}} />\r\n                            انتقال\r\n                          </div>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              color:\"red\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor:\"pointer\"\r\n\r\n                            }}\r\n                            onClick={() => handleBulkDelete(selectedRows)}\r\n                          >\r\n                            <img src=\"/assets/trash-svgrepo-com-2.svg\" style={{ margin: \"0 8px 0 16px\" }} />\r\n                            حذف\r\n                          </div>\r\n                        </div>\r\n                      </Popover>\r\n                    </div>\r\n                  )}\r\n                </PopupState>\r\n              </div>\r\n            ),\r\n\r\n            // isFreeAction: true,\r\n          },\r\n\r\n          {\r\n            icon: () => (\r\n              <div onClick={handleClickOpen('body')}>\r\n                <img\r\n                  style={{\r\n                    backgroundColor: \"rgb( 227, 156, 0)\",\r\n                    \r\n                    color: \"#000\",\r\n                    padding: \"8px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    borderRadius: \"8px\",\r\n                  }}\r\n                  src=\"/assets/Group 182.svg\"\r\n                />\r\n              </div>\r\n            ),\r\n        \r\n            onClick: () => add(),\r\n            isFreeAction: true,\r\n          },\r\n          {\r\n            icon: () => (\r\n              <div\r\n                onClick={downloadFile}\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  cursor: \"pointer\",\r\n                  color: \"white\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  borderRadius: \"8px\",\r\n                  padding: \"8px\",\r\n                  // marginLeft: \"32px\",\r\n                }}\r\n              >\r\n                <span style={{fontFamily:\"Shabnam\",fontSize:\"1rem\"}}>دانلود</span>\r\n                <img\r\n                  src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n                  style={{ marginRight: \"8px\" }}\r\n                />\r\n              </div>\r\n            ),\r\n            tooltip: \"دانلود\",\r\n            isFreeAction: true,\r\n          },\r\n\r\n\r\n        ]}\r\n      />\r\n      <div>\r\n        <Dialog\r\n          PaperProps={{\r\n            style: { borderRadius: 12,width:\"70%\" }\r\n          }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"xl\"\r\n        >\r\n            <ApiaryAddList />\r\n        </Dialog>\r\n      </div>\r\n\r\n      <div>\r\n        <Modal\r\n          open={downloadOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"parent-modal-title\"\r\n          aria-describedby=\"parent-modal-description\"\r\n        >\r\n          <Box sx={{ ...style, width: 1000 }} className=\"downloadFile\" style={{ display: \"flex\" ,alignItems: \"center\",justifyContent: \"center\"}}>\r\n            <div onClick={downloadExcel} className=\"downloadExcel\" ><img src=\"/assets/excel-svgrepo-com.svg\"/></div>\r\n            <div onClick={downloadPdf} className=\"downloadPdf\" ><img src=\"/assets/pdf-svgrepo-com (1).svg\"/></div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hive;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\User\\TableofUser.js",["678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715"],"// import {\r\n//   Box,\r\n//   Button,\r\n//   Fade,\r\n//   FormControl,\r\n//   IconButton,\r\n//   Modal,\r\n//   Popover,\r\n//   Popper,\r\n//   Select,\r\n//   Typography,\r\n// } from \"@material-ui/core\";\r\n// import React, { Children, useEffect, useState } from \"react\";\r\n// import PageTitle from \"../../../components/PageTitle/PageTitle\";\r\n// import axios from \"axios\";\r\n// import { makeStyles } from \"@material-ui/styles\";\r\n// import XLSX from \"xlsx\";\r\n// import { Edit, Edit as EditIcon } from \"@material-ui/icons\";\r\n// import { Link } from \"react-router-dom\";\r\n// import MaterialTable, { MTableToolbar } from \"material-table\";\r\n// import CompanyAddList from \"../../../components/Form/ApiaryList/ApiaryAddList\";\r\n// import SearchBar from \"material-ui-search-bar\";\r\n// import PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import \"../../../Iran-Sans-normal\";\r\n// import { mdiConsoleNetwork } from \"@mdi/js\";\r\n\r\n// function TableofUser() {\r\n//   const [age, setAge] = useState(\"\");\r\n//   const [open, setOpen] = useState(false);\r\n//   const [downloadOpen, setdownloadOpen] = useState(false);\r\n//   const [selectedRows, setSelectedRows] = useState();\r\n//   const [toolbar, setToolbar] = useState(false);\r\n//   const handleOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//     setdownloadOpen(false);\r\n//   };\r\n\r\n//   const style = {\r\n//     position: \"absolute\",\r\n//     top: \"50%\",\r\n//     left: \"50%\",\r\n//     transform: \"translate(-50%, -50%)\",\r\n//     width: 400,\r\n//     bgcolor: \"background.paper\",\r\n//     border: \"2px solid #000\",\r\n//     boxShadow: 24,\r\n//     pt: 2,\r\n//     px: 4,\r\n//     pb: 3,\r\n//   };\r\n//   const [Company, setCompany] = useState([\r\n//     {\r\n//       id: \"1\",\r\n//       name: \"شاهین رضوانی\",\r\n//       email: \"shahin@gmail.com\",\r\n//       Beehive: \"زنبورستان 1\",\r\n//       Role: \"نقش\",\r\n//     },\r\n//     {\r\n//       id: \"2\",\r\n//       name: \"شاهین کاظمی\",\r\n//       email: \"shahin@gmail.com\",\r\n//       Beehive: \"زنبورستان 3\",\r\n//       Role: \"نقش\",\r\n//     },\r\n//   ]);\r\n//   const useStyles = makeStyles({\r\n//     Button: {\r\n//       margin: \"8px 0px\",\r\n//       fontFamily: \"Shabnam\",\r\n//       cursor: \"pointer\",\r\n//       width: \"5%\",\r\n//     },\r\n//   });\r\n//   const classes = useStyles();\r\n//   //   useEffect(() => {\r\n//   //     axios.get(\"http://nahoor.af:8080/nahoor/industry/\").then((response) => {\r\n//   //       setIndustry(response.data);\r\n//   //     });\r\n//   //   }, []);\r\n//   // useEffect(() => {\r\n//   //   async function fetchMyAPI() {\r\n//   //     let response = await axios.get(\"http://nahoor.af:8080/nahoor/company/\");\r\n//   //     setCompany(response.data);\r\n//   //   }\r\n\r\n//   //   fetchMyAPI();\r\n//   // }, []);\r\n//   console.log(Company);\r\n//   const columns = [\r\n//     // {\r\n//     //   title: \"ID\",\r\n//     //   field: \"id\",\r\n//     //   cellStyle: {\r\n//     //     textAlign: \"right\",\r\n//     //   },\r\n//     //   headerStyle: {\r\n//     //     textAlign: \"right\",\r\n//     //   },\r\n//     //   render: (rowData) => {\r\n//     //     return <span style={{ display: \"flex\" }}>{rowData.id}</span>;\r\n//     //   },\r\n\r\n//     // },\r\n//     {\r\n//       title: \"نام شخص\",\r\n//       field: \"name\",\r\n//       cellStyle: {\r\n//         textAlign: \"right\",\r\n//       },\r\n//       headerStyle: {\r\n//         textAlign: \"right\",\r\n//       },\r\n\r\n//       render: (rowData) => {\r\n//         console.log(\"rowData\", rowData);\r\n//         return (\r\n//           <Link to={`/app/Beehive/${rowData.id}`} style={{ display: \"flex\" }}>\r\n//             {rowData.name}\r\n//           </Link>\r\n//         );\r\n//       },\r\n//     },\r\n\r\n//     {\r\n//       title: \" ایمیل/شماره تماس\",\r\n//       field: \"email/call\",\r\n//       cellStyle: {\r\n//         textAlign: \"right\",\r\n//       },\r\n//       headerStyle: {\r\n//         textAlign: \"right\",\r\n//       },\r\n//       render: (rowData) => {\r\n//         return <p className=\"description\">{rowData.email}</p>;\r\n//       },\r\n//     },\r\n\r\n//     {\r\n//       title: \"زنبورستان\",\r\n//       field: \"Beehive\",\r\n//       cellStyle: {\r\n//         textAlign: \"right\",\r\n//       },\r\n//       headerStyle: {\r\n//         textAlign: \"right\",\r\n//       },\r\n//       render: (rowData) => {\r\n//         return <p className=\"description\">{rowData.Beehive}</p>;\r\n//       },\r\n//     },\r\n//     {\r\n//       title: \"نقش\",\r\n//       field: \"Role\",\r\n//       cellStyle: {\r\n//         textAlign: \"right\",\r\n//       },\r\n//       headerStyle: {\r\n//         textAlign: \"right\",\r\n//       },\r\n//       render: (rowData) => {\r\n//         return <div>{rowData.Role}</div>;\r\n//       },\r\n//     },\r\n\r\n//     {\r\n//       title: \"عملیات\",\r\n//       field: \"thumbnail\",\r\n//       cellStyle: {\r\n//         textAlign: \"right\",\r\n//       },\r\n//       headerStyle: {\r\n//         textAlign: \"right\",\r\n//       },\r\n//       render: (rowData) => {\r\n//         return (\r\n//           // <Link to={`/app/CompanyList/${rowData.id}`}>\r\n//           <div>\r\n//             <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n//               {(popupState) => (\r\n//                 <div>\r\n//                   <Button variant=\"contained\" {...bindTrigger(popupState)}>\r\n//                     Open Popover\r\n//                   </Button>\r\n//                   <Popover\r\n//                     {...bindPopover(popupState)}\r\n//                     anchorOrigin={{\r\n//                       vertical: \"bottom\",\r\n//                       horizontal: \"center\",\r\n//                     }}\r\n//                     transformOrigin={{\r\n//                       vertical: \"top\",\r\n//                       horizontal: \"center\",\r\n//                     }}\r\n//                   >\r\n//                     <div style={{ borderRadius: \" 16px\", padding: \" 16px\" }}>\r\n//                       <div\r\n//                         style={{\r\n//                           display: \"flex\",\r\n//                           alignItems: \"center\",\r\n//                           justifyContent: \"flex-start\",\r\n//                         }}\r\n//                       >\r\n//                         <Edit style={{ marginLeft: \"16px\" }} />\r\n//                         ویرایش\r\n//                       </div>\r\n//                       <hr\r\n//                         style={{\r\n//                           borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n//                           height: \"2px\",\r\n//                         }}\r\n//                       />\r\n//                       <div\r\n//                         style={{\r\n//                           display: \"flex\",\r\n//                           alignItems: \"center\",\r\n//                           justifyContent: \"flex-start\",\r\n//                         }}\r\n//                       >\r\n//                         <Edit style={{ marginLeft: \"16px\" }} />\r\n//                         اشتراک گذاری\r\n//                       </div>\r\n//                       <hr\r\n//                         style={{\r\n//                           borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n//                           height: \"2px\",\r\n//                         }}\r\n//                       />\r\n//                       <div\r\n//                         style={{\r\n//                           display: \"flex\",\r\n//                           alignItems: \"center\",\r\n//                           justifyContent: \"flex-start\",\r\n//                         }}\r\n//                       >\r\n//                         <Edit style={{ marginLeft: \"16px\" }} />\r\n//                         انتقال\r\n//                       </div>\r\n//                       <hr\r\n//                         style={{\r\n//                           borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n//                           height: \"2px\",\r\n//                         }}\r\n//                       />\r\n//                       <div\r\n//                         style={{\r\n//                           display: \"flex\",\r\n//                           alignItems: \"center\",\r\n//                           justifyContent: \"flex-start\",\r\n//                         }}\r\n//                         onClick={() => handleBulkDelete(selectedRows)}\r\n//                       >\r\n//                         <Edit style={{ marginLeft: \"16px\" }} />\r\n//                         حذف\r\n//                       </div>\r\n//                     </div>\r\n//                   </Popover>\r\n//                 </div>\r\n//               )}\r\n//             </PopupState>\r\n//           </div>\r\n//         );\r\n//       },\r\n//     },\r\n//   ];\r\n\r\n//   //downloadExcel\r\n//   const downloadFile = () => {\r\n//     setdownloadOpen(true);\r\n//   };\r\n//   const downloadExcel = () => {\r\n//     const newData = Company.map((row) => {\r\n//       delete row.tableData;\r\n//       return row;\r\n//     });\r\n//     const workSheet = XLSX.utils.json_to_sheet(newData);\r\n//     const workBook = XLSX.utils.book_new();\r\n//     XLSX.utils.book_append_sheet(workBook, workSheet, \"students\");\r\n//     //Buffer\r\n//     let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n//     //Binary string\r\n//     XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n//     //Download\r\n//     XLSX.writeFile(workBook, \"StudentsData.xlsx\");\r\n//   };\r\n//   const [searched, setSearched] = useState();\r\n\r\n//   const requestSearch = (searchedVal) => {\r\n//     console.log(\"searchedVal\", searchedVal);\r\n//     const filteredRows = Company.map((rows) => {\r\n//       return rows;\r\n//     }).filter((row) => {\r\n//       console.log(\"row\", row.name);\r\n//       return row.name.toLowerCase().includes(searchedVal.toLowerCase());\r\n//     });\r\n//     setCompany(filteredRows);\r\n//     console.log(\"Company\", Company);\r\n//     console.log(\"filteredRows\", filteredRows);\r\n//   };\r\n//   // const cancelSearch = () => {\r\n//   //   setSearched(\"\");\r\n//   //   requestSearch(searched);\r\n//   // };\r\n//   const handleBulkDelete = () => {\r\n//     const updatedData = Company.filter((row) => !selectedRows.includes(row));\r\n//     setCompany(updatedData);\r\n//   };\r\n\r\n//   const downloadPdf = () => {\r\n//     const doc = new jsPDF();\r\n//     doc.text(\"جزییات زنبورستان\", 20, 10);\r\n//     doc.autoTable({\r\n//       theme: \"grid\",\r\n//       columns: columns.map((col) => ({ ...col, dataKey: col.field })),\r\n//       body: Company,\r\n//     });\r\n//     doc.setFont(\"Iran-Sans\"); // set custom font\r\n//     doc.save(\"table.pdf\");\r\n//   };\r\n//   const handleSelectChange = (event) => {\r\n//     console.log(\"salam\", event.target.value);\r\n//     setAge(event.target.value);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <PageTitle title=\"زنبورستان \" />\r\n//       <Link to={`/app/CompanyAddList`}>\r\n//         <Button\r\n//           className={classes.Button}\r\n//           color=\"primary\"\r\n//           variant=\"contained\"\r\n//           fullWidth\r\n//           type=\"submit\"\r\n//         >\r\n//           افزودن\r\n//         </Button>\r\n//       </Link>\r\n//       <MaterialTable\r\n//         localization={{\r\n//           toolbar: {\r\n//             searchPlaceholder: \"dfsdfsdf\",\r\n//           },\r\n//         }}\r\n//         title=\"\"\r\n//         style={{ borderRadius: \"25px\" }}\r\n//         data={Company}\r\n//         columns={columns}\r\n//         onSelectionChange={(rows) => setSelectedRows(rows)}\r\n//         localization={{\r\n//           body: {\r\n//             editRow: { deleteText: \"آیا میخواهید این سطر را حذف کنید؟\" },\r\n//           },\r\n//           pagination: {\r\n//             labelDisplayedRows: \"{from}-{to} از {count}\",\r\n//             labelRowsSelect: \"تعداد ردیف \",\r\n//             labelRowsPerPage: \"سیبسیب\",\r\n//             firstAriaLabel: <img src=\"./assets/12425575071619191957.svg\" />,\r\n//             firstTooltip: <img src=\"./assets/12425575071619191957.svg\" />,\r\n//             previousAriaLabel: \"صفحه قبل\",\r\n//             previousTooltip: \"صفحه قبل\",\r\n//             labelRowsPerPage: <img src=\"./assets/12425575071619191957.svg\" />,\r\n//             nextAriaLabel: \"صفحه بعد\",\r\n//             nextTooltip: \"صفحه بعد\",\r\n//             lastAriaLabel: <img src=\"./assets/12425575071619191957.svg\" />,\r\n//             lastTooltip: <img src=\"./assets/12425575071619191957.svg\" />,\r\n//           },\r\n//           toolbar: {\r\n//             nRowsSelected: \"{0} مورد انتخاب شد\",\r\n//             searchPlaceholder: \"جستجو کن\",\r\n//           },\r\n//           header: {\r\n//             actions: \"عملیات\",\r\n//           },\r\n//           body: {\r\n//             emptyDataSourceMessage: \"موردی جهت نمایش وجود ندارد.\",\r\n//             filterRow: {\r\n//               filterTooltip: \"فیلتر\",\r\n//             },\r\n//           },\r\n//         }}\r\n//         options={{\r\n//           columnsButton: true,\r\n//           exportButton: true,\r\n\r\n//           // searchFieldStyle: {\r\n//           //   borderTop: \"2px solid  rgb( 240 ,240, 240)\",\r\n//           //   borderRight: \"2px solid  rgb( 240 ,240, 240)\",\r\n//           //   borderLeft: \"2px solid  rgb( 240 ,240, 240)\",\r\n//           //   borderBottom: \"none\",\r\n//           //   padding: \"4px\",\r\n//           //   borderRadius: \"8px\",\r\n//           // },\r\n//           actionsColumnIndex: -1,\r\n//           addRowPosition: \"last\",\r\n//           rowStyle: {\r\n//             fontWeight: 600,\r\n//             textAlign: \"right\",\r\n//           },\r\n//           headerStyle: {\r\n//             fontWeight: 600,\r\n//             color: \"rgb( 102, 103 ,104)\",\r\n//           },\r\n//           selection: true,\r\n//           selectionProps: (rowData) => ({\r\n//             // checked: Company?.includes(rowData.value) ? true: false,\r\n//             onClick: () => {\r\n//               console.log(\"clicked asdasda\");\r\n//               setToolbar(true);\r\n//             },\r\n//           }),\r\n//           search: false,\r\n\r\n//           // filtering: true,\r\n//         }}\r\n//         components={{\r\n//           Toolbar: (props) => (\r\n//             <>\r\n//               <div\r\n//                 style={{\r\n//                   direction: \"rtl\",\r\n//                   display: \"flex\",\r\n//                   justifyContent: \"space-between\",\r\n//                   alignItems: \"center\",\r\n//                   padding: \"16px  32px  0px\",\r\n//                 }}\r\n//               >\r\n//                 <div\r\n//                   style={{\r\n//                     display: \"flex\",\r\n//                     alignItems: \"center\",\r\n//                     justifyContent: \"center\",\r\n//                   }}\r\n//                 >\r\n//                   <SearchBar\r\n//                     style={{\r\n//                       direction: \"ltr\",\r\n//                       border: \"1px solid red\",\r\n//                       width: \"100%\",\r\n//                       borderRadius: \"8px\",\r\n//                     }}\r\n//                     value={searched}\r\n//                     onChange={(searchVal) => requestSearch(searchVal)}\r\n//                     // onCancelSearch={() => cancelSearch()}\r\n//                   />\r\n//                   {/* <MTableToolbar {...props} /> */}\r\n//                   <div\r\n//                     onClick={handleOpen}\r\n//                     style={{\r\n//                       backgroundColor: \"rgb( 227, 156, 0)\",\r\n//                       marginRight: \"32px\",\r\n//                       color: \"#000\",\r\n//                       padding: \"8px\",\r\n//                       display: \"flex\",\r\n//                       alignItems: \"center\",\r\n//                       justifyContent: \"center\",\r\n//                       borderRadius: \"8px\",\r\n//                     }}\r\n//                   >\r\n//                     <img src=\"/assets/Group 182.svg\" />\r\n//                   </div>\r\n\r\n//                   <FormControl\r\n//                     sx={{ m: 1, minWidth: 120 }}\r\n//                     className={classes.inputSelect}\r\n//                   >\r\n//                     {/* <InputLabel htmlFor=\"grouped-native-select\">Grouping</InputLabel> */}\r\n\r\n//                     <Select\r\n//                       className={classes.inputSelect}\r\n//                       variant=\"outlined\"\r\n//                       native\r\n//                       onChange={handleSelectChange}\r\n//                       id=\"VegetationOfTheArea\"\r\n//                       name=\"VegetationOfTheArea\"\r\n//                     >\r\n//                       <option aria-label=\"VegetationOfTheArea\" value=\"\" />\r\n//                       <optgroup label=\"Category 1\">\r\n//                         <option value={1}>Optijjjkjon 1</option>\r\n//                         <option value={2}>fgffghnion 2</option>\r\n//                       </optgroup>\r\n//                       <optgroup label=\"Category 2\">\r\n//                         <option value={3}>jhjjjhhg</option>\r\n//                         <option value={4}>;;;jk</option>\r\n//                       </optgroup>\r\n//                     </Select>\r\n//                   </FormControl>\r\n//                 </div>\r\n//                 <div\r\n//                   onClick={downloadFile}\r\n//                   style={{\r\n//                     backgroundColor: \"black\",\r\n//                     cursor: \"pointer\",\r\n//                     color: \"white\",\r\n//                     display: \"flex\",\r\n//                     alignItems: \"center\",\r\n//                     justifyContent: \"center\",\r\n//                     borderRadius: \"8px\",\r\n//                     padding: \"8px\",\r\n//                     // marginLeft: \"32px\",\r\n//                   }}\r\n//                 >\r\n//                   <span>دانلود</span>\r\n//                   <img\r\n//                     src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n//                     style={{ marginRight: \"8px\" }}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//               <hr\r\n//                 style={{\r\n//                   borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n//                   height: \"2px\",\r\n//                 }}\r\n//               />\r\n//               {toolbar ? (\r\n//                 <MTableToolbar {...props}>{console.log(props)}</MTableToolbar>\r\n//               ) : null}\r\n//             </>\r\n//           ),\r\n//         }}\r\n//         actions={[\r\n//           // {\r\n//           //   icon: () => <button>Export</button>,\r\n//           //   tooltip: \"Export to Excel\",\r\n//           //   onClick: () => downloadExcel(),\r\n//           //   // isFreeAction: true,\r\n//           // },\r\n//           {\r\n//             icon: () => (\r\n//               <div>\r\n//                 <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n//                   {(popupState) => (\r\n//                     <div>\r\n//                       <Button variant=\"contained\" {...bindTrigger(popupState)}>\r\n//                         Open Popover\r\n//                       </Button>\r\n//                       <Popover\r\n//                         {...bindPopover(popupState)}\r\n//                         anchorOrigin={{\r\n//                           vertical: \"bottom\",\r\n//                           horizontal: \"center\",\r\n//                         }}\r\n//                         transformOrigin={{\r\n//                           vertical: \"top\",\r\n//                           horizontal: \"center\",\r\n//                         }}\r\n//                       >\r\n//                         <div\r\n//                           style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n//                         >\r\n//                           <div\r\n//                             style={{\r\n//                               display: \"flex\",\r\n//                               alignItems: \"center\",\r\n//                               justifyContent: \"flex-start\",\r\n//                             }}\r\n//                           >\r\n//                             <Edit style={{ marginLeft: \"16px\" }} />\r\n//                             ویرایش\r\n//                           </div>\r\n//                           <hr\r\n//                             style={{\r\n//                               borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n//                               height: \"2px\",\r\n//                             }}\r\n//                           />\r\n//                           <div\r\n//                             style={{\r\n//                               display: \"flex\",\r\n//                               alignItems: \"center\",\r\n//                               justifyContent: \"flex-start\",\r\n//                             }}\r\n//                           >\r\n//                             <Edit style={{ marginLeft: \"16px\" }} />\r\n//                             اشتراک گذاری\r\n//                           </div>\r\n//                           <hr\r\n//                             style={{\r\n//                               borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n//                               height: \"2px\",\r\n//                             }}\r\n//                           />\r\n//                           <div\r\n//                             style={{\r\n//                               display: \"flex\",\r\n//                               alignItems: \"center\",\r\n//                               justifyContent: \"flex-start\",\r\n//                             }}\r\n//                           >\r\n//                             <Edit style={{ marginLeft: \"16px\" }} />\r\n//                             انتقال\r\n//                           </div>\r\n//                           <hr\r\n//                             style={{\r\n//                               borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n//                               height: \"2px\",\r\n//                             }}\r\n//                           />\r\n//                           <div\r\n//                             style={{\r\n//                               display: \"flex\",\r\n//                               alignItems: \"center\",\r\n//                               justifyContent: \"flex-start\",\r\n//                             }}\r\n//                             onClick={() => handleBulkDelete(selectedRows)}\r\n//                           >\r\n//                             <Edit style={{ marginLeft: \"16px\" }} />\r\n//                             حذف\r\n//                           </div>\r\n//                         </div>\r\n//                       </Popover>\r\n//                     </div>\r\n//                   )}\r\n//                 </PopupState>\r\n//               </div>\r\n//             ),\r\n\r\n//             // isFreeAction: true,\r\n//           },\r\n//         ]}\r\n//       />\r\n//       <div>\r\n//         <Modal\r\n//           open={open}\r\n//           onClose={handleClose}\r\n//           aria-labelledby=\"parent-modal-title\"\r\n//           aria-describedby=\"parent-modal-description\"\r\n//         >\r\n//           <Box sx={{ ...style, width: 1000 }}>\r\n//             <CompanyAddList />\r\n//           </Box>\r\n//         </Modal>\r\n//       </div>\r\n//       <div>\r\n//         <Modal\r\n//           open={downloadOpen}\r\n//           onClose={handleClose}\r\n//           aria-labelledby=\"parent-modal-title\"\r\n//           aria-describedby=\"parent-modal-description\"\r\n//         >\r\n//           <Box\r\n//             sx={{ ...style, width: 1000 }}\r\n//             className=\"downloadFile\"\r\n//             style={{\r\n//               display: \"flex\",\r\n//               alignItems: \"center\",\r\n//               justifyContent: \"center\",\r\n//             }}\r\n//           >\r\n//             <div onClick={downloadExcel} className=\"downloadExcel\">\r\n//               <img src=\"/assets/excel-svgrepo-com.svg\" />\r\n//             </div>\r\n//             <div onClick={downloadPdf} className=\"downloadPdf\">\r\n//               <img src=\"/assets/pdf-svgrepo-com (1).svg\" />\r\n//             </div>\r\n//           </Box>\r\n//         </Modal>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TableofUser;\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  Fade,\r\n  IconButton,\r\n  MenuItem,\r\n  Modal,\r\n  Popover,\r\n  Popper,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { Children, useEffect, useState } from \"react\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n// import \"./ApiaryList.css\";\r\nimport XLSX from \"xlsx\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  Edit as EditIcon,\r\n  MoreVertOutlined,\r\n  Share,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,NavLink,\r\n  useParams,useRouteMatch\r\n} from \"react-router-dom\" \r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport CompanyAddList from \"../../../components/Form/ApiaryList/ApiaryAddList\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport PopupState, { bindTrigger, bindPopover } from \"material-ui-popup-state\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport \"../../../Iran-Sans-normal\";\r\nimport ApiaryAddList from \"../../../components/Form/ApiaryList/ApiaryAddList\";\r\nimport ApiaryUpdateList from \"../../../components/Form/ApiaryList/ApiaryUpdateList\";\r\nimport Adduser from \"../../../components/Form/User/Adduser\";\r\nimport useStyles from \"./styles\";\r\nimport EditUser from \"../../../components/Form/User/EditUser\";\r\n\r\nfunction TableofUser() {\r\n  const [open, setOpen] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [downloadOpen, setdownloadOpen] = useState(false);\r\n\r\n  const [selectedRows, setSelectedRows] = useState();\r\n  const [scroll, setScroll] = useState('paper');\r\n\r\n  const [toolbar, setToolbar] = useState(false);\r\n  const[Hive,setHive]=useState(\"all\")\r\n  let { path, url } = useRouteMatch();\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n   \r\n    setScroll(scrollType);\r\n  };\r\n  const handleClickEdit= (scrollType) => () => {\r\n    setOpenEdit(true);\r\n   \r\n    setScroll(scrollType);\r\n  };\r\n  useEffect(()=>{\r\n    console.log(\"Hive\",Hive)\r\n  },[Hive])\r\n\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setdownloadOpen(false);\r\n    setOpenEdit(false);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    overflow: \"scroll\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    borderRadius: \"16px\",\r\n    boxShadow: 24,\r\n    pt: 2,\r\n    px: 4,\r\n    pb: 3,\r\n  };\r\n\r\n  const [Company, setCompany] = useState([\r\n    {\r\n      id: \"1\",\r\n      name: \"شاهین رضوانی\",\r\n      email: \"shahin@gmail.com\",\r\n      Beehive: \"زنبورستان 1\",\r\n      Role: \"نقش\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: \"شاهین کاظمی\",\r\n      email: \"shahin@gmail.com\",\r\n      Beehive: \"زنبورستان 3\",\r\n      Role: \"نقش\",\r\n    },\r\n  ]);\r\n\r\n\r\n\r\n  console.log(Company);\r\n  const columns = [\r\n    {\r\n      title: \"نام شخص\",\r\n      field: \"name\",\r\n      validate: (rowDate) => {\r\n        if (rowDate.name === undefined || rowDate.name === \"\") {\r\n          return \"این فیلد ضروری است\";\r\n        } else if (rowDate.name.length < 2) {\r\n          return \"نام شما حداقل باید دارای دو کاراکتر باشد\";\r\n        }\r\n        return true;\r\n      },\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n\r\n      render: (rowData) => {\r\n        console.log(\"rowData\", rowData);\r\n        return (\r\n          <Link\r\n            // to={`/app/user/${rowData.id}`}\r\n            className=\"title\"\r\n            style={{ display: \"flex\" }}\r\n          >\r\n            <p className=\"title\">{rowData.name}</p>\r\n          </Link>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \" ایمیل/تلفن\",\r\n      field: \"State\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.email}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \" زنبورستان\",\r\n      field: \"city\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <p className=\"description\">{rowData.Beehive}</p>;\r\n      },\r\n    },\r\n    \r\n    {\r\n      title: \"نقش\",\r\n      field: \"InadequatCondition\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      render: (rowData) => {\r\n        return <div>{rowData.Role}</div>;\r\n      },\r\n    },\r\n    \r\n    {\r\n      title: \"عملیات\",\r\n      field: \"thumbnail\",\r\n      cellStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      headerStyle: {\r\n        textAlign: \"right\",\r\n      },\r\n      \r\n      render: (rowData) => {\r\n        return (\r\n          // <Link to={`/app/CompanyList/${rowData.id}`}>\r\n          <div>\r\n            <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n              {(popupState) => (\r\n                <div>\r\n                  <MoreVertOutlined\r\n                    variant=\"contained\"\r\n                    {...bindTrigger(popupState)}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n\r\n                  <Popover\r\n                    {...bindPopover(popupState)}\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: \"top\",\r\n                      horizontal: \"center\",\r\n                    }}\r\n                  >\r\n                    <div style={{ borderRadius: \" 16px\", padding: \" 16px\" }}>\r\n                      <Link\r\n                        onClick={handleEditOpen}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-start\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        <Edit style={{ marginLeft: \"16px\" }} />\r\n                        ویرایش\r\n                      </Link>\r\n                      <hr\r\n                        style={{\r\n                          borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                          height: \"2px\",\r\n                        }}\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-start\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        <Share style={{ marginLeft: \"16px\" }} />\r\n                        اشتراک گذاری\r\n                      </div>\r\n                      <hr\r\n                        style={{\r\n                          borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                          height: \"2px\",\r\n                        }}\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-start\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src=\"/assets/move-svgrepo-com.svg\"\r\n                          style={{ margin: \"0 0px 0 24px\" }}\r\n                        />\r\n                        انتقال\r\n                      </div>\r\n                      <hr\r\n                        style={{\r\n                          borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                          height: \"2px\",\r\n                        }}\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          color: \"red\",\r\n                          justifyContent: \"flex-start\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => onRowDelete(rowData)}\r\n                      >\r\n                        <img\r\n                          src=\"/assets/trash-svgrepo-com-2.svg\"\r\n                          style={{ margin: \"0 0px 0 24px\" }}\r\n                        />\r\n                        حذف\r\n                      </div>\r\n                    </div>\r\n                  </Popover>\r\n                </div>\r\n              )}\r\n            </PopupState>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //downloadExcel\r\n  const downloadFile = () => {\r\n    setdownloadOpen(true);\r\n  };\r\n  const downloadExcel = () => {\r\n    const newData = Company.map((row) => {\r\n      delete row.tableData;\r\n      return row;\r\n    });\r\n    const workSheet = XLSX.utils.json_to_sheet(newData);\r\n    const workBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, \"students\");\r\n    //Buffer\r\n    let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n    //Binary string\r\n    XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n    //Download\r\n    XLSX.writeFile(workBook, \"StudentsData.xlsx\");\r\n  };\r\n  const [searched, setSearched] = useState();\r\n\r\n  const requestSearch = (searchedVal) => {\r\n    const filteredRows = Company.map((rows) => {\r\n      return rows.name;\r\n      // console.log(\"rows.title\",rows)\r\n    }).filter((row) => {\r\n      return row.toLowerCase().includes(searchedVal.toLowerCase());\r\n    });\r\n    setCompany(filteredRows);\r\n    console.log(\"Company\", Company);\r\n    console.log(\"filteredRows\", filteredRows);\r\n  };\r\n  const cancelSearch = () => {\r\n    setSearched(\"\");\r\n    requestSearch(searched);\r\n  };\r\n  const handleBulkDelete = () => {\r\n    console.log(selectedRows);\r\n    const updatedData = Company.filter((row) => !selectedRows.includes(row));\r\n    setCompany(updatedData);\r\n  };\r\n\r\n  const onRowDelete = (rowData) => {\r\n    const updatedData = Company.filter((row) => ![rowData].includes(row));\r\n    setCompany(updatedData);\r\n  };\r\n\r\n  const downloadPdf = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"جزییات زنبورستان\", 20, 10);\r\n    doc.autoTable({\r\n      theme: \"grid\",\r\n      columns: columns.map((col) => ({ ...col, dataKey: col.field })),\r\n      body: Company,\r\n    });\r\n    doc.setFont(\"Iran-Sans\"); // set custom font\r\n    doc.save(\"table.pdf\");\r\n  };\r\n  const add = () => {\r\n    return console.log(\"click\");\r\n  };\r\n  return (\r\n    <div>\r\n      <h2 style={{ color: \"rgb(227, 156, 0)\" }}>کاربران</h2>\r\n      <MaterialTable\r\n        localization={{\r\n          toolbar: {\r\n            searchPlaceholder: \"dfsdfsdf\",\r\n          },\r\n        }}\r\n        title=\"\"\r\n        style={{ borderRadius: \"25px\" }}\r\n        data={Company}\r\n        columns={columns}\r\n        onSelectionChange={(rows) => setSelectedRows(rows)}\r\n        localization={{\r\n          body: {\r\n            editRow: { deleteText: \"آیا میخواهید این سطر را حذف کنید؟\" },\r\n          },\r\n          pagination: {\r\n            labelDisplayedRows: \"{from}-{to} از {count}\",\r\n            labelRowsSelect: \"تعداد ردیف\",\r\n            labelRowsPerPage: \"۱\",\r\n            firstAriaLabel: \"اولین صقحه\",\r\n\r\n            previousAriaLabel: \"صفحه قبل\",\r\n\r\n            nextAriaLabel: \"صفحه بعد\",\r\n            lastAriaLabel: \"اخرین صفحه\",\r\n          },\r\n          toolbar: {\r\n            nRowsSelected: \"{0} مورد انتخاب شد\",\r\n            searchPlaceholder: \"جستجو کن\",\r\n          },\r\n          header: {\r\n            actions: \"عملیات\",\r\n          },\r\n          body: {\r\n            emptyDataSourceMessage: \"موردی جهت نمایش وجود ندارد.\",\r\n            filterRow: {\r\n              filterTooltip: \"فیلتر\",\r\n            },\r\n          },\r\n        }}\r\n        options={{\r\n          columnsButton: true,\r\n          actionsColumnIndex: -1,\r\n          addRowPosition: \"last\",\r\n          rowStyle: {\r\n            fontWeight: 600,\r\n            textAlign: \"right\",\r\n          },\r\n          headerStyle: {\r\n            fontWeight: 600,\r\n            color: \"rgb( 102, 103 ,104)\",\r\n          },\r\n          selection: true,\r\n          selectionProps: (rowData) => ({\r\n            // checked: Company?.includes(rowData.value) ? true: false,\r\n            onClick: () => {\r\n              console.log(\"clicked asdasda\");\r\n              setToolbar(true);\r\n            },\r\n          }),\r\n          search: true,\r\n          searchFieldAlignment: \"left\",\r\n          searchFieldStyle: {\r\n            borderTop: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderRight: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderLeft: \"2px solid  rgb( 240 ,240, 240)\",\r\n            borderBottom: \"none\",\r\n            padding: \"4px\",\r\n            borderRadius: \"8px\",\r\n          },\r\n          // filtering: true,\r\n        }}\r\n        components={\r\n          {\r\n            // Toolbar: (props) => (\r\n            //   <>\r\n            //     <div\r\n            //       style={{\r\n            //         direction: \"rtl\",\r\n            //         display: \"flex\",\r\n            //         justifyContent: \"space-between\",\r\n            //         alignItems: \"center\",\r\n            //         padding: \"16px  32px  0px\",\r\n            //       }}\r\n            //     >\r\n            //       <div\r\n            //         style={{\r\n            //           display: \"flex\",\r\n            //           alignItems: \"center\",\r\n            //           justifyContent: \"center\",\r\n            //         }}\r\n            //       >\r\n            //         <SearchBar\r\n            //           style={{\r\n            //             direction: \"ltr\",\r\n            //             border: \"1px solid red\",\r\n            //             width: \"100%\",\r\n            //             borderRadius: \"8px\",\r\n            //           }}\r\n            //           value={searched}\r\n            //           onChange={(searchVal) => requestSearch(searchVal)}\r\n            //           onCancelSearch={() => cancelSearch()}\r\n            //         />\r\n            //         {/* <MTableToolbar {...props} /> */}\r\n            //         <div\r\n            //           onClick={handleOpen}\r\n            //           style={{\r\n            //             backgroundColor: \"rgb( 227, 156, 0)\",\r\n            //             marginRight: \"32px\",\r\n            //             color: \"#000\",\r\n            //             padding: \"8px\",\r\n            //             display: \"flex\",\r\n            //             alignItems: \"center\",\r\n            //             justifyContent: \"center\",\r\n            //             borderRadius: \"8px\",\r\n            //           }}\r\n            //         >\r\n            //           <img src=\"/assets/Group 182.svg\" />\r\n            //         </div>\r\n            //       </div>\r\n            //       <div\r\n            //         onClick={downloadFile}\r\n            //         style={{\r\n            //           backgroundColor: \"black\",\r\n            //           cursor: \"pointer\",\r\n            //           color: \"white\",\r\n            //           display: \"flex\",\r\n            //           alignItems: \"center\",\r\n            //           justifyContent: \"center\",\r\n            //           borderRadius: \"8px\",\r\n            //           padding: \"8px\",\r\n            //           // marginLeft: \"32px\",\r\n            //         }}\r\n            //       >\r\n            //         <span>دانلود</span>\r\n            //         <img\r\n            //           src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n            //           style={{ marginRight: \"8px\" }}\r\n            //         />\r\n            //       </div>\r\n            //     </div>\r\n            //     <hr\r\n            //       style={{\r\n            //         borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n            //         height: \"2px\",\r\n            //       }}\r\n            //     />\r\n            //     {toolbar ? (\r\n            //       <MTableToolbar {...props}>{console.log(props)}</MTableToolbar>\r\n            //     ) : null}\r\n            //   </>\r\n            // ),\r\n          }\r\n        }\r\n        actions={[\r\n          {\r\n            icon: () => <Select\r\n               labelId=\"demo-simple-select-label\"\r\n               variant=\"outlined\"\r\n               className={classes.inputSelect}\r\n               Id='demo-simple-select'\r\n               style={{width:100}}\r\n               value={Hive}\r\n               className={classes.inputSelect}\r\n               onChange={(e)=>setHive(e.target.value)}>\r\n                 <MenuItem value={\"all\"}><em>All</em></MenuItem>\r\n                 <MenuItem value={2019}>2019</MenuItem>\r\n                 <MenuItem value={2020}>2020</MenuItem>\r\n                 <MenuItem value={2021}>2021</MenuItem>\r\n            </Select>,\r\n\r\n            tooltip: \"دانلود\",\r\n            isFreeAction: true,\r\n          },\r\n\r\n\r\n          {\r\n            icon: () => (\r\n              <div>\r\n                <PopupState variant=\"popover\" popupId=\"demo-popup-popover\">\r\n                  {(popupState) => (\r\n                    <div>\r\n                      <MoreVertOutlined\r\n                        variant=\"contained\"\r\n                        {...bindTrigger(popupState)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n\r\n                      <Popover\r\n                        {...bindPopover(popupState)}\r\n                        anchorOrigin={{\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                        transformOrigin={{\r\n                          vertical: \"top\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{ borderRadius: \" 16px\", padding: \" 16px\" }}\r\n                        >\r\n                          <Link\r\n                              onClick={handleClickEdit('body')} \r\n                             style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <Edit style={{ marginLeft: \"16px\" }} />\r\n                            ویرایش\r\n                          </Link>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <Share style={{ marginLeft: \"16px\" }} />\r\n                            اشتراک گذاری\r\n                          </div>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                          >\r\n                            <img\r\n                              src=\"/assets/move-svgrepo-com.svg\"\r\n                              style={{ margin: \"0 0px 0 24px\" }}\r\n                            />\r\n                            انتقال\r\n                          </div>\r\n                          <hr\r\n                            style={{\r\n                              borderTop: \"1px solid rgb( 240, 240, 240)\",\r\n                              height: \"2px\",\r\n                            }}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              color: \"red\",\r\n                              justifyContent: \"flex-start\",\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            onClick={() => handleBulkDelete(selectedRows)}\r\n                          >\r\n                            <img\r\n                              src=\"/assets/trash-svgrepo-com-2.svg\"\r\n                              style={{ margin: \"0 8px 0 16px\" }}\r\n                            />\r\n                            حذف\r\n                          </div>\r\n                        </div>\r\n                      </Popover>\r\n                    </div>\r\n                  )}\r\n                </PopupState>\r\n              </div>\r\n            ),\r\n\r\n            // isFreeAction: true,\r\n          },\r\n\r\n          {\r\n            icon: () => (\r\n              <div onClick={handleClickOpen('body')}>\r\n                <img\r\n                  style={{\r\n                    backgroundColor: \"rgb( 227, 156, 0)\",\r\n\r\n                    color: \"#000\",\r\n                    padding: \"8px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    borderRadius: \"8px\",\r\n                  }}\r\n                  src=\"/assets/Group 182.svg\"\r\n                />\r\n              </div>\r\n            ),\r\n            tooltip: \"اضافه کردن کاربر\",\r\n    \r\n            isFreeAction: true,\r\n          },\r\n          {\r\n            icon: () => (\r\n              <div\r\n                onClick={downloadFile}\r\n                style={{\r\n                  backgroundColor: \"black\",\r\n                  cursor: \"pointer\",\r\n                  color: \"white\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  borderRadius: \"8px\",\r\n                  padding: \"8px\",\r\n                  // marginLeft: \"32px\",\r\n                }}\r\n              >\r\n                <span style={{ fontFamily: \"Shabnam\", fontSize: \"1rem\" }}>\r\n                  دانلود\r\n                </span>\r\n                <img\r\n                  src=\"/assets/download-arrow-svgrepo-com.svg\"\r\n                  style={{ marginRight: \"8px\" }}\r\n                />\r\n              </div>\r\n            ),\r\n            tooltip: \"دانلود\",\r\n            isFreeAction: true,\r\n          },\r\n        ]}\r\n      />\r\n      <div>\r\n        <Dialog\r\n          PaperProps={{\r\n            style: { borderRadius: 12,width:\"60%\" }\r\n          }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"xl\"\r\n        >\r\n            <Adduser />\r\n    \r\n        </Dialog>\r\n      </div>\r\n\r\n      <div>\r\n        <Dialog\r\n          PaperProps={{\r\n            style: { borderRadius: 12,width:\"60%\" }\r\n          }}\r\n        open={openEdit}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth=\"xl\"\r\n        >\r\n            <EditUser/>\r\n        </Dialog>\r\n      </div>\r\n\r\n      <div>\r\n        <Modal\r\n          open={downloadOpen}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"parent-modal-title\"\r\n          aria-describedby=\"parent-modal-description\"\r\n        >\r\n          <Box\r\n            sx={{ ...style, width: 1000 }}\r\n            className=\"downloadFile\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div onClick={downloadExcel} className=\"downloadExcel\">\r\n              <img src=\"/assets/excel-svgrepo-com.svg\" />\r\n            </div>\r\n            <div onClick={downloadPdf} className=\"downloadPdf\">\r\n              <img src=\"/assets/pdf-svgrepo-com (1).svg\" />\r\n            </div>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableofUser;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Style.js",["716"],"import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles((theme) => ({\n  TabHeader: {\n    backgroundColor: \"rgb( 255 ,242, 212)\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    height: \"60px\",\n    boxShadow:\n      \" rgba(0, 0, 0, 0.1) 0px 60px 100px -100px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\n    color: \"rgb( 227, 156, 0)\",\n    fontWeight: \"bold\",\n    borderRadius: \"15px\",\n    fontSize: \"18px\",\n    marginBottom: \"16px;\",\n  },\n  item: {\n    textDecoration: \"none\",\n    color: \"rgb( 227, 156, 0)\",\n  },\n\n  activeItem: {\n    background: \"#fff\",\n    padding: \"4px 16px\",\n    borderRadius: \"8px\",\n    color: \"#000\",\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n    boxShadow: \"0px 3px 6px 0px rgba(0,0,0,0.16)\",\n  },\n  greenHeader: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"rgb( 33, 192, 99)\",\n    boxShadow: \"0px 3px 6px 0px rgba(0, 0,0, 0.16)\",\n    padding: theme.spacing(2.5),\n    borderRadius: \"15px\",\n    color: \"#fff\",\n  },\n  cards: {\n    boxShadow: \"red 0px 6px 0px,  0px 7px 13px -3px, red 0px -3px 0px inset\",\n    borderRadius: \"15px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"24px 0px \",\n\n    // paddingTop:theme.spacing(2),\n  },\n  Soundscards: {\n    boxShadow: \" rgba(0, 0, 0, 0.16) 0px 0px 4px 0px\",\n    boxSizing: \"border-box\",\n    borderRadius: \"15px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \" 20px 50px \",\n    height: \"100px\",\n    // width:\"50px\"\n  },\n\n  logoHives: {\n    width: \"80px\",\n    height: \"80px\",\n    border: \"8px solid red\",\n    borderRadius: \"50%\",\n    marginRight: \"16px\",\n  },\n  cardSubtitleLeft: {\n    marginTop: \"8px\",\n  },\n  cardTitleLeftBottom: {\n    fontWeight: 600,\n    color: \"rgb( 173 173 173) \",\n  },\n  cardSubtitleLeftBottom: { fontWeight: 600, marginTop: \"16px\" },\n  cardBottomPart: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  midPartAudio: {\n    boxShadow: \" rgba(0, 0, 0, 0.16) 0px 0px 4px 0px\",\n    boxSizing: \"border-box\",\n    borderRadius: \"15px\",\n    padding: \"32px\",\n  },\n  DialogActions: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n    marginTop: \"16px\",\n  },\n  DialogBox: {\n    width: \"500px\",\n    padding: \"40px 20px\",\n  },\n  ButtonHiveSubmitYes: {\n    background: theme.palette.secondary.main,\n    fontWeight: 600,\n    padding: \"4px 32px\",\n    \"&:hover\": {\n      background: theme.palette.secondary.main,\n    },\n  },\n  ButtonHiveSubmitNo: {\n    background: \"rgb( 244 244 244)\",\n    fontWeight: 600,\n    padding: \"4px 32px\",\n  },\n\n  ButtonHiveSubmitNoFinish: {\n    display: \"none\",\n  },\n  ButtonHiveSubmitFinish: {\n    background: \"blue\",\n    fontWeight: 600,\n    width: \"50%\",\n    color: \"#fff\",\n    padding: \"4px 48px\",\n    fontWeight: \"bold\",\n    fontFamily: \"Shabnam\",\n    borderRadius: \"12px\",\n    \"&:hover\": {\n      background: \"blue\",\n    },\n  },\n  mainChartHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"rgb( 244 ,244 ,244)\",\n    padding: \"0 16px\",\n    borderRadius: \"12px\",\n  },\n  select: {\n    backgroundColor: \"#fff\",\n    width: \"100%\",\n    borderRadius: \"8px\",\n    margin: \"8px 0\",\n  },\n  mainChartHeaderLabels: { display: \"flex\",alignItems: \"center\",   borderRadius: \"12px\",backgroundColor: \"rgb(244 244 244)\", padding: \"12px\",\n},\n  mainChartHeaderLabel:{display: \"flex\",alignItems: \"center\",justifyContent: \"center\",marginRight: \"16px\"},\n  mainChartLegentElement:{marginLeft: \"8px\" },\n  leftHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  \n  date: {\n    margin: \"16px 8px\",\n  },\n  dot:{\n    marginLeft: \"16px\",\n    border:\"1px solid red\"\n  }\n}));\n","D:\\پروژه کندو\\CandoProject-master\\src\\Iran-Sans-normal.js",["717"],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\User\\styles.js",["718"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    inputSelect: {\r\n        width: \"250px\",\r\n        display:\"flex\",\r\n        height:\"40px\",\r\n        borderRadius: \"8px\",\r\n        border: \"none\",\r\n        // height: \"40px\",\r\n        fontFamily: \"Shabnam\",\r\n        \"&\t.MuiSelect-outlined\":{\r\n        \r\n          borderRadius: \"8px\",\r\n        },\r\n        \"&\t.MuiSelect-outlined\":{\r\n        \r\n          borderRadius: \"8px\",\r\n        },\r\n    \r\n     \r\n      },\r\n    \r\n    \r\n    \r\n      select: {\r\n        backgroundColor: \"rgb( 244, 244 ,244)\",\r\n        borderRadius: \"10px\",\r\n        \"&:before\": {\r\n          border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n          borderRadius: \"10px\",\r\n        },\r\n        \"&:hover\": {\r\n          border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n          borderRadius: \"10px\",\r\n        },\r\n        \"&:after\": {\r\n          border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n        },\r\n        \"&:not(.Mui-disabled):hover::before\": {\r\n          border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n        },\r\n      },\r\n}));\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\Style.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Typography\\Title\\Title.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\User\\Adduser.js",["719","720","721","722","723","724","725","726","727"],"import React, { useRef, useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport PreviewImage from \"./PreviewImage\";\r\n\r\nfunction Adduser() {\r\n  const classes = useStyles();\r\n  const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/;\r\n  const FILE_SIZE = 10000*10000;\r\n\r\n  const validationSchema = yup.object().shape({\r\n    phoneNumber: yup\r\n      .string()\r\n      .matches(\r\n        phoneRegExp,\r\n        \"شماره موبایل را بدون صفر و با حروف انگلیسی وارد کنید\",\r\n      ),\r\n    Username: yup.string().required(\"لطفا نام کاربری خود را وارد کنید\"),\r\n    name: yup.string().required(\"لطفا نام خود را وارد کنید\"),\r\n    family: yup.string().required(\"لطفا نام خانوادگی خود را وارد کنید\"),\r\n    email: yup.string().email(\"لطفا ایمیل معتبر وارد کنید\"),\r\n    // Img:yup\r\n    // .mixed()\r\n    // .required(\"لطفا یک فایل انتخاب کنید\")\r\n    // .test(\r\n    //   \"fileSize\",\r\n    //   \"قایل انتخابی حجم زیادی دارد\",\r\n    //   (value) => {\r\n    //     console.log(\"vlaue\",value?.size)\r\n    //     return value && value?.size <= FILE_SIZE\r\n    //   }\r\n    // ),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const[selectedFile,setSelectedFile]=useState(null)\r\nconst fileRef=useRef(null)\r\n  const onSubmit = (data) => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // history.push(\"/login/step2\")\r\n  };\r\n\r\n  const fileSelectHandler = (e) => {\r\n    console.log(\"salam\",e.target.files[0]);\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n  const fileUploadHandler = () => {};\r\n\r\n  let { path, url } = useRouteMatch();\r\n\r\n  return (\r\n    <Paper>\r\n      <Box px={3} py={2} className={classes.root}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          align=\"center\"\r\n          margin=\"dense\"\r\n          color=\"secondary\"\r\n          className={classes.Title}\r\n        >\r\n          کاربر جدید\r\n        </Typography>\r\n        <Divider className={classes.Divider1} />\r\n\r\n        <Grid item xs={6} sm={6} className={classes.TabHeader}>\r\n          <Grid>\r\n            <NavLink\r\n             exact to={`${url}`}\r\n              className={classes.item}\r\n              activeClassName={classes.activeItem}\r\n            >\r\n              وضعیت\r\n            </NavLink>\r\n          </Grid>\r\n          <Grid>\r\n            <NavLink\r\n              to={`${url}/sound`}\r\n              className={classes.item}\r\n              activeClassName={classes.activeItem}\r\n            >\r\n              صدا و تصویر\r\n            </NavLink>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={1} className={classes.container}>\r\n          <div>\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"name\")}\r\n                  error={errors.name ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.name?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام خانوادگی </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"family\"\r\n                  name=\"family\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"family\")}\r\n                  error={errors.family ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.family?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام کاربری </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"Username\"\r\n                  name=\"Username\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"Username\")}\r\n                  error={errors.Username ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.Username?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>شماره موبایل</label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"phoneNumber\"\r\n                  name=\"phoneNumber\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"phoneNumber\")}\r\n                  error={errors.phoneNumber ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.phoneNumber?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>ایمیل</label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"email\")}\r\n                  error={errors.email ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n         \r\n              >\r\n                {errors.email?.message}\r\n              </Typography>\r\n            </Grid>\r\n          </div>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            sm={6}\r\n            className={classes.uploaderImageBox}\r\n \r\n          >\r\n            <Typography variant=\"p\">آپلود عکس</Typography>\r\n        \r\n          {/* <input type=\"file\"  onChange={fileSelectHandler}  accept=\"image/png, image/jpeg\"   /> */}\r\n        <div className={classes.uploaderImage}>\r\n\r\n            { console.log(\"selectedFile\",selectedFile)}\r\n{  selectedFile ? <PreviewImage file={selectedFile} />:<Avatar src=\"./assets/Mask Group 3.svg\" alt=\"\"   className={classes.PreviewImage}/>\r\n}            <Button\r\n                 variant=\"contained\"\r\n                 component=\"label\"\r\n                 onChange={fileSelectHandler} \r\n                 style={{fontFamily:\"Shabnam\"}}\r\n                 className={classes.EditPhoto}\r\n \r\n             >\r\n               <img src=\"./assets/edit-svgrepo-com.svg\" className={classes.Edit}/>\r\n                ویرایش\r\n                \r\n               <input\r\n                  type=\"file\"\r\n                   hidden\r\n                   accept= \"image/jpg, image/jpeg , image/gif , image/png \"\r\n                   {...register(\"Img\")}\r\n               />\r\n           </Button>\r\n\r\n\r\n\r\n          </div>\r\n            {/* <button onClick={()=>{\r\n              // fileRef.current.onClick()\r\n            }}>آپلود\r\n            </button> */}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box mt={8} style={{ width: \"100%\" }}>\r\n          <div  className={classes.button}>\r\n            <Button variant=\"contained\" className={classes.Button2}>\r\n              انصراف\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.Button1}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              افزودن\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Adduser;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\User\\EditUser.js",["728","729","730","731","732","733","734","735","736","737"],"import React, { useRef, useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport PreviewImage from \"./PreviewImage\";\r\n\r\nfunction EditUser() {\r\n  const classes = useStyles();\r\n  const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/;\r\n  const FILE_SIZE = 10000*10000;\r\n\r\n  const validationSchema = yup.object().shape({\r\n    phoneNumber: yup\r\n      .string()\r\n      .matches(\r\n        phoneRegExp,\r\n        \"شماره موبایل را بدون صفر و با حروف انگلیسی وارد کنید\",\r\n      ),\r\n    Username: yup.string().required(\"لطفا نام کاربری خود را وارد کنید\"),\r\n    name: yup.string().required(\"لطفا نام خود را وارد کنید\"),\r\n    family: yup.string().required(\"لطفا نام خانوادگی خود را وارد کنید\"),\r\n    email: yup.string().email(\"لطفا ایمیل معتبر وارد کنید\"),\r\n    // Img:yup\r\n    // .mixed()\r\n    // .required(\"لطفا یک فایل انتخاب کنید\")\r\n    // .test(\r\n    //   \"fileSize\",\r\n    //   \"قایل انتخابی حجم زیادی دارد\",\r\n    //   (value) => {\r\n    //     console.log(\"vlaue\",value?.size)\r\n    //     return value && value?.size <= FILE_SIZE\r\n    //   }\r\n    // ),\r\n  });\r\nconst [data,setData]=useState({\r\n    name:\"شاهین رضوانی\",\r\n    Username:\"shahin2022\",\r\n    phoneNumber:\"09120000000\",\r\n    email:\"shahin1360@gmail.com\"\r\n})\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues:data\r\n  });\r\n  const[selectedFile,setSelectedFile]=useState(null)\r\nconst fileRef=useRef(null)\r\n  const onSubmit = (data) => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // history.push(\"/login/step2\")\r\n  };\r\n\r\n  const fileSelectHandler = (e) => {\r\n    console.log(\"salam\",e.target.files[0]);\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n  const fileUploadHandler = () => {};\r\n\r\n  let { path, url } = useRouteMatch();\r\n\r\n  return (\r\n    <Paper>\r\n      <Box px={3} py={2} className={classes.root}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          align=\"center\"\r\n          margin=\"dense\"\r\n          color=\"secondary\"\r\n          className={classes.Title}\r\n        >\r\n          کاربر جدید\r\n        </Typography>\r\n        <Divider className={classes.Divider1} />\r\n\r\n        <Grid item xs={6} sm={6} className={classes.TabHeader}>\r\n          <Grid>\r\n            <NavLink\r\n             exact to={`${url}`}\r\n              className={classes.item}\r\n              activeClassName={classes.activeItem}\r\n            >\r\n              وضعیت\r\n            </NavLink>\r\n          </Grid>\r\n          <Grid>\r\n            <NavLink\r\n              to={`${url}/sound`}\r\n              className={classes.item}\r\n              activeClassName={classes.activeItem}\r\n            >\r\n              صدا و تصویر\r\n            </NavLink>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={1} className={classes.container}>\r\n          <div>\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"name\")}\r\n                  error={errors.name ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.name?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام خانوادگی </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"family\"\r\n                  name=\"family\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"family\")}\r\n                  error={errors.family ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.family?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>نام کاربری </label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"Username\"\r\n                  name=\"Username\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"Username\")}\r\n                  error={errors.Username ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.Username?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>شماره موبایل</label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"phoneNumber\"\r\n                  name=\"phoneNumber\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"phoneNumber\")}\r\n                  error={errors.phoneNumber ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n              >\r\n                {errors.phoneNumber?.message}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} className={classes.inputText}>\r\n              <div className={classes.input}>\r\n                <label className={classes.label}>ایمیل</label>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  required\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  {...register(\"email\")}\r\n                  error={errors.email ? true : false}\r\n                />\r\n              </div>\r\n              <Typography\r\n                variant=\"inherit\"\r\n                color=\"textSecondary\"\r\n                className={classes.errorTitle}\r\n         \r\n              >\r\n                {errors.email?.message}\r\n              </Typography>\r\n            </Grid>\r\n          </div>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            sm={6}\r\n            className={classes.uploaderImageBox}\r\n \r\n          >\r\n            <Typography variant=\"p\">آپلود عکس</Typography>\r\n        \r\n          {/* <input type=\"file\"  onChange={fileSelectHandler}  accept=\"image/png, image/jpeg\"   /> */}\r\n        <div className={classes.uploaderImage}>\r\n\r\n            { console.log(\"selectedFile\",selectedFile)}\r\n{  selectedFile ? <PreviewImage file={selectedFile} />:<Avatar src=\"./assets/Mask Group 3.svg\" alt=\"\"   className={classes.PreviewImage}/>\r\n}            <Button\r\n                 variant=\"contained\"\r\n                 component=\"label\"\r\n                 onChange={fileSelectHandler} \r\n                 style={{fontFamily:\"Shabnam\"}}\r\n                 className={classes.EditPhoto}\r\n \r\n             >\r\n               <img src=\"./assets/edit-svgrepo-com.svg\" className={classes.Edit}/>\r\n                ویرایش\r\n                \r\n               <input\r\n                  type=\"file\"\r\n                   hidden\r\n                   accept= \"image/jpg, image/jpeg , image/gif , image/png \"\r\n                   {...register(\"Img\")}\r\n               />\r\n           </Button>\r\n\r\n\r\n\r\n          </div>\r\n            {/* <button onClick={()=>{\r\n              // fileRef.current.onClick()\r\n            }}>آپلود\r\n            </button> */}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box mt={8} style={{ width: \"100%\" }}>\r\n          <div  className={classes.button}>\r\n            <Button variant=\"contained\" className={classes.Button2}>\r\n              انصراف\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.Button1}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              افزودن\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default EditUser;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\ApiaryList\\ApiaryUpdateList.js",["738","739","740","741","742","743","744","745","746","747","748","749"],"import {\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\n\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport MapBox from \"../../../components/MapBox/MapBox\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst ApiaryUpdateList = ({Apiary,setApiary}) => {\r\n  const params = useParams();\r\n  console.log(\"params\", params.id)\r\n  console.log(\"props.Apiary\",Apiary);\r\n  const classes = useStyles();\r\n  const [errorMessage,setErrMessage] = useState()\r\n  const [error,setIserror] = useState()\r\n  const validationSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .required(\"لطفا نام زنبورستان وارد کنید\")\r\n      .min(2, \"برای وارد کردن نام حداقل ۲ کاراکتر لازم است\")\r\n      .max(20, \"Username must not exceed 20 characters\"),\r\n    select: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    select2: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    select3: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    select4: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    select5: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  });\r\n\r\n  const preLoadValues = {\r\n    name:\"زنبورستان ۱\",\r\n    select:\"تغذیه زنبور\"\r\n  }\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues:preLoadValues\r\n  });\r\n\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    const response = await axios.put(`https://sdfsdfsdf/${params.id}`, data)\r\n    const updatedApiary=[Apiary]\r\n    const index = updatedApiary.indexOf(data);\r\n    updatedApiary[index]={...data};\r\n    setApiary({Apiary:updatedApiary})\r\n    // setApiary(updatedApiary)\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   axios.get(`https://sdfsdfsdf/${params.id}`)\r\n  //     .then(res => {\r\n  //       setApiary(res.data.data)\r\n  //     })\r\n  //     .catch(error=>{\r\n  //       setErrMessage([\"Cannot load user data\"])\r\n  //       setIserror(true)\r\n  //     })\r\n  // }, [])\r\n\r\n  const options = [\r\n    { label: \"بومی\", value: \"بومی\" },\r\n    { label: \"کارنیکا\", value: \"کارنیکا\" },\r\n    { label: \"ایتالیایی\", value: \"ایتالیایی\" },\r\n    { label: \"قفقازی\", value: \"قفقازی\" },\r\n    { label: \"سایر\", value: \"سایر\" },\r\n  ];\r\n  const optopns2 = [  \r\n    { label: \"لانگستروت\", value: \"لانگستروت\" },\r\n    { label: \"دادانت\", value: \"دادانت\" },\r\n    { label: \"آکواریومی\", value: \"آکواریومی\" },\r\n    { label: \"سایر\", value: \"سایر\" },\r\n  ]\r\n  const optopns6 = [  \r\n    { label: \"لانگستروت\", value: \"لانگستروت\" },\r\n    { label: \"دادانت\", value: \"دادانت\" },\r\n    { label: \"آکواریومی\", value: \"آکواریومی\" },\r\n    { label: \"سایر\", value: \"سایر\" },\r\n  ]\r\n  const optopns7 = [  \r\n    { label: \"باغ\", value: \"باغ\" },\r\n    { label: \"مزرعه\", value: \"مزرعه\" },\r\n    { label: \"مرتع کوهستانی\", value: \"مرتع کوهستانی\" },\r\n    { label: \"دشت\", value: \"دشت\" },\r\n    { label: \"سایر\", value: \"سایر\" },\r\n  ]\r\n  const optopns4 = [  \r\n    { label: \"پرورش ملکه\", value: \"پرورش ملکه\" },\r\n    { label: \"ژل رویال\" , value: \"ژل رویال\" },\r\n    { label: \"تولید عسل\", value: \"تولید عسل\" },\r\n    { label: \"سایر\", value: \"سایر\" },\r\n  ]\r\n  const optopns3 = [  \r\n    { label: \"شهری\", value: \"شهری\" },\r\n    { label: \"روستایی\" , value: \"روستایی\" },\r\n\r\n  ]\r\n  const style = {\r\n    borderRadius: \"12px\",\r\n    overflow: \"hidden\",\r\n    marginTop: \"16px\",\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Paper>\r\n        <Box px={3} py={2} className={classes.root}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"center\"\r\n            margin=\"dense\"\r\n            color=\"secondary\"\r\n            className={classes.Title}\r\n\r\n          >\r\n            افزودن زنبورستان\r\n          </Typography>\r\n          <Divider className={classes.Divider}/>\r\n\r\n          <Grid container spacing={1} className={classes.container}>\r\n            <div >\r\n              <Grid item xs={12} sm={12} className={classes.inputText}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>نام زنبورستان</label>\r\n                  {console.log(\"options\", options[0].value)}\r\n                  <TextField\r\n                    className={classes.TextField}\r\n                    required\r\n                    id=\"name\"\r\n                    name=\"firstname\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    {...register(\"name\")}\r\n                    error={errors.name ? true : false}\r\n                  />\r\n                </div>\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n\r\n                >\r\n                  {errors.name?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} className={classes.Select}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>پوشش گیاهی منطقه</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    name = \"select\"\r\n                    defaultValue={optopns2[1].value}\r\n                    {...register(\"select\")}\r\n                    error={errors.select ? true : false}\r\n                    // value={}\r\n                  >\r\n                    {optopns2?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>نوع منطقه</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    defaultValue={optopns3[1].value}\r\n                    {...register(\"select2\")}\r\n                    error={errors.select2 ? true : false}\r\n                    // value={}\r\n                  >\r\n                    {optopns3?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select2?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>استان</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    defaultValue={options[2].value}\r\n                    {...register(\"select3\")}\r\n                    error={errors.select3 ? true : false}\r\n                    // value={}\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select3?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>شهر </label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    defaultValue={options[3].value}\r\n\r\n                    {...register(\"select4\")}\r\n                    error={errors.select4 ? true : false}\r\n                    // value={}\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select4?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}> کاربرد </label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    defaultValue={optopns4[1].value}\r\n\r\n                    {...register(\"select5\")}\r\n                    error={errors.select5 ? true : false}\r\n                    // value={}\r\n                  >\r\n                    {optopns4?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select5?.message}\r\n                </Typography>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              className={classes.Map}\r\n\r\n            >\r\n              <div className={classes.mapTitle}>\r\n                انتخاب مکان از روی نقشه\r\n              </div>\r\n              <MapBox style={style} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box mt={8} style={{ width: \"100%\" }}>\r\n            <div className={classes.button}>\r\n              <Button variant=\"contained\" className={classes.Button2}>\r\n                انصراف\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.Button1}\r\n                onClick={handleSubmit(onSubmit)}\r\n              >\r\n                افزودن\r\n              </Button>\r\n            </div>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ApiaryUpdateList;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\User\\PreviewImage.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\ApiaryList\\styles.js",["750"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontFamily: \"Shabnam\",\r\n  },\r\n  container:{\r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-between\",\r\n  },\r\n  Title:{\r\n    fontWeight: \"bold\" \r\n  },\r\n  errorTitle:{ \r\n    color: \"red\"\r\n  },\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n    marginRight: \"25px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"none\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Shabnam\",\r\n\r\n  },\r\n\r\n  Divider:{\r\n    marginTop: \"32px\"\r\n  },\r\n  // Button1: {\r\n  //   marginTop: \"8px\",\r\n  //   display: \"flex\",\r\n  //   fontFamily: \"Shabnam\",\r\n  //   cursor: \"pointer\",\r\n  //   border: \"none\",\r\n  //   marginTop: \"100px\",\r\n  //   backgroundColor: \"rgb( 255, 255, 255)\",\r\n  //   boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n  //   color: \"#000\",\r\n  //   width: \"16%\",\r\n  //   padding: \"16px 0px\",\r\n  //   borderRadius: \"16px\",\r\n  //   fontWeight: \"bold\",\r\n  //   fontSize: \"16px\",\r\n  //   \"&:hover\": {\r\n  //     backgroundColor: \"#fff\",\r\n  //     borderWidth: 2,\r\n  //   },\r\n  // },\r\n  Map:{\r\n    borderRadius: \"8px\",\r\n                height: \"250px\",\r\n  },\r\n  mapTitle:{\r\n    marginTop: \"32px\" , fontWeight: \"bold\"\r\n  },\r\n  button:{\r\n    display: \"flex\", \r\n    justifyContent: \"space-between\"\r\n  },\r\n  Button1: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 26 ,115, 233)\",\r\n    color:\"#fff\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"20%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 26 ,115, 233)\",\r\n      borderWidth: 2,\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  Button2: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 255 255 255)\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"20%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 255 255 255)\",\r\n      borderWidth: 2,\r\n      color: \"#000\",\r\n    },\r\n  },\r\n  inputText:{\r\n    display: \"flex\",\r\n    flexDirection:\"column\",\r\n  },\r\n  TextField:{\r\n    width: \"250px\",\r\n    background:\"rgb( 244 244 244)\",\r\n    border:\"none\",\r\n    borderRadius: \"10px\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"rgb( 26 ,115, 233) !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n        borderRadius: \"10px\",\r\n\r\n      },\r\n    },\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems:\"center\",\r\n    marginTop: \"32px\",\r\n    fontFamily: \"Shabnam\",\r\n    border: \"none\",\r\n    \"& label.Mui-focused\": {\r\n      border:\"5px solid red\",\r\n      color: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"2px solid red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\", \r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid red !important\",\r\n        borderRadius: \"10px\",  \r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n\r\n      },\r\n    },\r\n  },\r\n  inputSelect: {\r\n    width: \"250px\",\r\n    display:\"flex\",\r\n    height:\"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n    \"&\t.MuiSelect-outlined\":{\r\n    \r\n      borderRadius: \"10px\",\r\n    },\r\n\r\n \r\n  },\r\n\r\n  select: {\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    borderRadius: \"10px\",\r\n    \"&:before\": {\r\n      border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:hover\": {\r\n      border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:after\": {\r\n      border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n    },\r\n    \"&:not(.Mui-disabled):hover::before\": {\r\n      border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n    },\r\n  },\r\n\r\n  icon: {\r\n    fill: \"green\"\r\n  },\r\n  text: {\r\n    border: \"none\",backgroundColor: \"#fff\",outline: \"2px solid red\"\r\n  },\r\n  outline: {\r\n    \"&:before\": {\r\n    borderColor: \"red\"\r\n    },\r\n    \"&:after\": {\r\n    borderColor: \"red\"\r\n    }}\r\n}));\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\User\\styles.js",["751"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontFamily: \"Shabnam\",\r\n  },\r\n  container:{\r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-between\",\r\n  },\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n    marginRight: \"25px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"none\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Shabnam\",\r\n\r\n  },\r\n  Title:{\r\n    fontWeight: \"bold\" \r\n  },\r\n  errorTitle:{ \r\n    color: \"red\"\r\n  },\r\n  Divider1:{\r\n    marginTop: \"8px\" \r\n  },\r\n\r\n  PreviewImage:{\r\n    width:\"200px\",\r\n    height:\"200px\"\r\n  },\r\n  button:{\r\n    display: \"flex\", \r\n    justifyContent: \"space-between\"\r\n  },\r\n  Button1: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 26 ,115, 233)\",\r\n    color:\"#fff\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"20%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 26 ,115, 233)\",\r\n      borderWidth: 2,\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  Button2: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 255 255 255)\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"20%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 255 255 255)\",\r\n      borderWidth: 2,\r\n      color: \"#000\",\r\n    },\r\n  },\r\n  inputText:{\r\n    display: \"flex\",\r\n    flexDirection:\"column\",\r\n  },\r\n  TextField:{\r\n    width: \"250px\",\r\n    background:\"rgb( 244 244 244)\",\r\n    border:\"none\",\r\n    borderRadius: \"10px\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"rgb( 26 ,115, 233) !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n        borderRadius: \"10px\",\r\n\r\n      },\r\n    },\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems:\"center\",\r\n    marginTop: \"32px\",\r\n    fontFamily: \"Shabnam\",\r\n    border: \"none\",\r\n    \"& label.Mui-focused\": {\r\n      border:\"5px solid red\",\r\n      color: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"2px solid red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\", \r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid red !important\",\r\n        borderRadius: \"10px\",  \r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n\r\n      },\r\n    },\r\n  },\r\n  inputSelect: {\r\n    width: \"250px\",\r\n    display:\"flex\",\r\n    height:\"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n    \"&\t.MuiSelect-outlined\":{\r\n    \r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n\r\n\r\n\r\n  select: {\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    borderRadius: \"10px\",\r\n    \"&:before\": {\r\n      border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:hover\": {\r\n      border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:after\": {\r\n      border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n    },\r\n    \"&:not(.Mui-disabled):hover::before\": {\r\n      border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  icon: {\r\n    fill: \"green\"\r\n  },\r\n  text: {\r\n    border: \"none\",backgroundColor: \"#fff\",outline: \"2px solid red\"\r\n  },\r\n  outline: {\r\n    \"&:before\": {\r\n    borderColor: \"red\"\r\n    },\r\n    \"&:after\": {\r\n    borderColor: \"red\"\r\n    }},\r\n    item:{\r\n        textDecoration:\"none\",\r\n        color: \"rgb( 227, 156, 0)\",\r\n     \r\n      },\r\n      activeItem:{\r\n      background:\"#fff\",\r\n      padding:\"4px 16px\",\r\n      borderRadius:\"8px\",\r\n      color:\"#000\",\r\n      textDecoration:\"none\",\r\n      cursor:\"pointer\",\r\n      boxShadow:\"0px 3px 6px 0px rgba(0,0,0,0.16)\"\r\n      \r\n    },\r\n    TabHeader: {\r\n        backgroundColor: \"rgb( 255 ,242, 212)\",\r\n        margin:\"0 auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        height: \"50px\",\r\n        boxShadow:\r\n          \" rgba(0, 0, 0, 0.1) 0px 60px 100px -100px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\r\n        color: \"rgb( 227, 156, 0)\",\r\n        fontWeight: \"bold\",\r\n        borderRadius: \"15px\",\r\n        fontSize: \"1rem\",\r\n        marginBottom:\"16px;\",\r\n        marginTop:\"16px\"\r\n      },\r\n      uploaderImageBox:{\r\n        marginTop: \"32px\",\r\n         display:\"flex\",\r\n         flexDirection:\"column\"\r\n      },\r\n      uploaderImage:{\r\n        display:\"flex\",  \r\n        flexDirection:\"column\",\r\n        alignItems:\"center\",\r\n        margin:\"auto 0\"\r\n\r\n      },\r\n      EditPhoto:{\r\n        background:\"rgb( 255 176 4)\",\r\n        borderBottomLeftRadius: \"300px\",  /* 100px of height + 10px of border */\r\n        borderBottomRightRadius: \"300px\",\r\n        borderBottom: 0,\r\n        width:\"155px\",\r\n        height:\" 40px\",\r\n      \r\n        transform:\"translateY(-38px)\",\r\n        \"&:hover\":{\r\n          background:\"rgb( 255 176 4)\",\r\n\r\n\r\n        }\r\n      },\r\n      Edit:{\r\n        marginLeft:\"8px\"\r\n      }\r\n}));\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\MapBox\\MapBox.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\ApiaryList\\ApiaryAddList.js",["752","753","754","755","756"],"\r\nimport {\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport MapBox from \"../../../components/MapBox/MapBox\";\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport axios from \"axios\";\r\n\r\nconst ApiaryAddList = ({Apiary,setApiary}) => {\r\n  const classes = useStyles();\r\n  const validationSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .required(\"لطفا نام زنبورستان وارد کنید\")\r\n      .min(2, \"برای وارد کردن نام حداقل ۲ کاراکتر لازم است\")\r\n      .max(20, \"Username must not exceed 20 characters\"),\r\n    select: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    select2: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    select3: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    select4: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    select5: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n  });\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  \r\n  const onSubmit = async(data) => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    const response = await axios.post(\"https://reqres.in/api/users\", data);\r\n    setApiary({ Apiary: [...Apiary, data] });\r\n  };\r\n\r\n  const options = [\r\n    { label: \"همه\", value: \"همه\" },\r\n    { label: \"تغذیه زنبور\", value: \"تغذیه زنبور\" },\r\n    { label: \"برداشت عسل\", value: \"برداشت عسل\" },\r\n    { label: \"بیماری زنبور\", value: \"بیماری زنبور\" },\r\n  ];\r\n  const style = {\r\n    borderRadius: \"12px\",\r\n    overflow: \"hidden\",\r\n    marginTop: \"16px\",\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Paper>\r\n        <Box px={3} py={2} className={classes.root}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"center\"\r\n            margin=\"dense\"\r\n            className={classes.Title}\r\n          >\r\n            افزودن زنبورستان\r\n          </Typography>\r\n          \r\n          <Divider className={classes.Divider}/>\r\n          <Grid container spacing={1} className={classes.container}>\r\n\r\n            <div>\r\n              <Grid item xs={12} sm={12} className={classes.inputText}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>نام زنبورستان</label>\r\n                  <TextField\r\n                    className={classes.TextField}\r\n                    required\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    {...register(\"name\")}\r\n                    error={errors.name ? true : false}\r\n                  />\r\n                </div>\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.name?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} className={classes.Select}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>پوشش گیاهی منطقه</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    {...register(\"select\")}\r\n                    error={errors.select ? true : false}\r\n\r\n                    // onChange={(e) =>\r\n                    //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                    // } // Using setValue\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>نوع منطقه</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    {...register(\"select2\")}\r\n                    error={errors.select2 ? true : false}\r\n\r\n                    // onChange={(e) =>\r\n                    //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                    // } // Using setValue\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select2?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>استان</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    {...register(\"select3\")}\r\n                    error={errors.select3 ? true : false}\r\n\r\n                    // onChange={(e) =>\r\n                    //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                    // } // Using setValue\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select3?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>شهر </label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    {...register(\"select4\")}\r\n                    error={errors.select4 ? true : false}\r\n\r\n                    // onChange={(e) =>\r\n                    //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                    // } // Using setValue\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select4?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>کاربرد </label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    {...register(\"select5\")}\r\n                    error={errors.select5 ? true : false}\r\n\r\n                    // onChange={(e) =>\r\n                    //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                    // } // Using setValue\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select5?.message}\r\n                </Typography>\r\n              </Grid>\r\n            </div>\r\n\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              className={classes.Map}\r\n\r\n            >\r\n              <div className={classes.mapTitle}>انتخاب مکان از روی نقشه</div>\r\n              <MapBox style={style} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box mt={8} style={{ width: \"100%\" }}>\r\n            <div className={classes.button}>\r\n              <Button variant=\"contained\" className={classes.Button2}>\r\n                انصراف\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.Button1}\r\n                onClick={handleSubmit(onSubmit)}\r\n              >\r\n                افزودن\r\n              </Button>\r\n            </div>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ApiaryAddList;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Hive\\styles.js",["757"],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\Setting\\AddSubmitCode.js",["758","759","760","761","762","763","764","765","766","767","768"],"import { Button, CircularProgress, Divider, Grid, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useUserDispatch } from '../../../context/UserContext';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport useStyles from \"./styles\";\r\n\r\nfunction AddSubmitCode() {\r\n  const classes = useStyles();\r\n  // const history=useHistory()\r\n  const [loginValue, setLoginValue] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n\r\n  // global\r\n  const userDispatch = useUserDispatch();\r\n  // const phoneRegExp = /09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/\r\n  const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/\r\n\r\n  const validationSchema = yup.object().shape({\r\n \r\n    phoneNumber:yup.string().required(\"لطفا کد تایید را وارد کنید\")\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n  const onSubmit = data => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // history.push(\"/login/step2\")\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n    <Typography variant=\"h6\" align=\"center\" margin=\"dense\" color='secondary' className={classes.Title}>\r\n         کد تایید    \r\n    </Typography>\r\n    <Divider  className={classes.Divider}/>\r\n    <Typography variant=\"h6\" align=\"center\" margin=\"dense\" color='primary' className={classes.codeTitle} >\r\n       کد تایید را وارد کنید.    \r\n    </Typography>\r\n    \r\n   <Grid className={classes.main} >\r\n    <TextField\r\n\r\n      style={{direction:\"ltr\"}}\r\n      className={classes.TextField}\r\n      label=\"کد تايید\"\r\n      onChange={e => setLoginValue(e.target.value)}\r\n\r\n      id=\"phoneNumber\"\r\n      name=\"phoneNumber\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      margin=\"normal\"\r\n      size=\"small\"\r\n      {...register('phoneNumber')}\r\n      error={errors.phoneNumber ? true : false}\r\n    />\r\n   <Typography variant=\"inherit\" color=\"textSecondary\" className={classes.errorMessage}>\r\n      {errors.phoneNumber?.message}\r\n    </Typography><br/>\r\n\r\n   \r\n\r\n\r\n\r\n<Button\r\n onClick={() =>        \r\n    console.log(\"click\")\r\n}\r\n    variant=\"contained\"\r\n    className={classes.buttonLogin}\r\n  >\r\n    ثبت\r\n</Button>\r\n </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddSubmitCode","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\Setting\\EditPhoneNumber.js",["769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784"],"import { Button, CircularProgress, Divider, Grid, TextField, Typography } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useUserDispatch } from '../../../context/UserContext';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport useStyles from \"./styles\";\r\n\r\nfunction EditPhoneNumber() {\r\n  const steps = [\r\n    {\r\n      id:\"1\",\r\n     \r\n    },\r\n    {\r\n      id:\"2\",\r\n    },\r\n\r\n  ];\r\n  const classes = useStyles();\r\n  // const history=useHistory()\r\n  const [loginValue, setLoginValue] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = steps.length;\r\n\r\n  // global\r\n  const userDispatch = useUserDispatch();\r\n  // const phoneRegExp = /09(1[0-9]|3[1-9]|2[1-9])-?[0-9]{3}-?[0-9]{4}/\r\n  const phoneRegExp = /9([0-3][0-9])-?[0-9]{3}-?[0-9]{4}/\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const validationSchema = yup.object().shape({\r\n \r\n    phoneNumber:yup.string().required(\"لطفا کد تایید را وارد کنید\")\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n  const onSubmit = data => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // history.push(\"/login/step2\")\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n    <Typography variant=\"h6\" align=\"center\" margin=\"dense\" color='secondary' className={classes.Title}>\r\n       ویرایش شماره تلفن      \r\n    </Typography>\r\n    <Divider className={classes.Divider}/>\r\n    <Typography variant=\"h6\" align=\"center\" margin=\"dense\" color='primary' className={classes.codeTitle}>\r\n       شماره تلفن جدید را وارد کنید    \r\n    </Typography>\r\n    \r\n   <Grid className={classes.main}>\r\n    <TextField\r\n      onClick={steps[activeStep].id == steps.length - 1 ? handleNext : console.log(\"inja code daryaft mishe mire server baraye taeed\")}  className={classes.buttonLogin}\r\n      style={{direction:\"ltr\"}}\r\n      className={classes.TextField}\r\n      label={steps[activeStep].id == steps.length - 1 ? '    شماره تلفن   ' : '   کد تایید را وارد نمایید'  }\r\n      onChange={e => setLoginValue(e.target.value)}\r\n\r\n      id=\"phoneNumber\"\r\n      name=\"phoneNumber\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      margin=\"normal\"\r\n      size=\"small\"\r\n      {...register('phoneNumber')}\r\n      error={errors.phoneNumber ? true : false}\r\n    />\r\n   <Typography variant=\"inherit\" color=\"textSecondary\" className={classes.errorMessage}>\r\n      {errors.phoneNumber?.message}\r\n    </Typography><br/>\r\n\r\n   \r\n\r\n    <Button onClick={steps[activeStep].id == steps.length - 1 ? onSubmit : console.log(\"inja code daryaft mishe mire server baraye taeed\")}  className={classes.buttonLogin} >{steps[activeStep].id == steps.length - 1 ? 'ثبت تمام پاسخ ها' : ' دریافت کد تایید'}</Button>\r\n\r\n{/* \r\n<Button\r\n    \r\n    onClick={handleNext}\r\n    variant=\"contained\"\r\n    className={classes.buttonLogin}\r\n    \r\n  >\r\n  دریافت کد تایید         \r\n</Button> */}\r\n </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditPhoneNumber","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\Setting\\styles.js",["785","786"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontFamily: \"Shabnam\",\r\n  },\r\n  container:{\r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-between\",\r\n  },\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n    marginRight: \"25px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"none\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Shabnam\",\r\n\r\n  },\r\n  Title:{\r\n    fontWeight: \"bold\"\r\n  },\r\n  Divider:{\r\n    marginTop:\"16px\"\r\n  },\r\n  codeTitle:{\r\n    fontWeight:\"bold\", margin:\"24px 0px\"\r\n  },\r\n  main:{\r\n    display:\"flex\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    flexDirection:\"column\"\r\n  },\r\n  errorMessage:{\r\ncolor:\"red\"\r\n  },\r\n  // Button1: {\r\n  //   marginTop: \"8px\",\r\n  //   display: \"flex\",\r\n  //   fontFamily: \"Shabnam\",\r\n  //   cursor: \"pointer\",\r\n  //   border: \"none\",\r\n  //   marginTop: \"100px\",\r\n  //   backgroundColor: \"rgb( 255, 255, 255)\",\r\n  //   boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n  //   color: \"#000\",\r\n  //   width: \"16%\",\r\n  //   padding: \"16px 0px\",\r\n  //   borderRadius: \"16px\",\r\n  //   fontWeight: \"bold\",\r\n  //   fontSize: \"16px\",\r\n  //   \"&:hover\": {\r\n  //     backgroundColor: \"#fff\",\r\n  //     borderWidth: 2,\r\n  //   },\r\n  // },\r\n  Button1: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 26 ,115, 233)\",\r\n    color:\"#fff\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"20%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 26 ,115, 233)\",\r\n      borderWidth: 2,\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  Button2: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 255 255 255)\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"20%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 255 255 255)\",\r\n      borderWidth: 2,\r\n      color: \"#000\",\r\n    },\r\n  },\r\n  inputText:{\r\n    display: \"flex\",\r\n    flexDirection:\"column\",\r\n  },\r\n  TextField:{\r\n    width: \"48%\",\r\n    background:\"rgb( 240 240 240)\",\r\n    border:\"none\",\r\n    borderRadius: \"10px\",\r\n    \"& label.Mui-focused\": {\r\n      color: \"rgb( 26 ,115, 233) !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n        borderRadius: \"10px\",\r\n\r\n      },\r\n    },\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems:\"center\",\r\n    marginTop: \"32px\",\r\n    fontFamily: \"Shabnam\",\r\n    border: \"none\",\r\n    \"& label.Mui-focused\": {\r\n      border:\"5px solid red\",\r\n      color: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"2px solid red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\", \r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid red !important\",\r\n        borderRadius: \"10px\",  \r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n\r\n      },\r\n    },\r\n  },\r\n  inputSelect: {\r\n    width: \"250px\",\r\n    display:\"flex\",\r\n    height:\"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n    \"&\t.MuiSelect-outlined\":{\r\n    \r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&\t.MuiSelect-outlined\":{\r\n    \r\n      borderRadius: \"10px\",\r\n    },\r\n\r\n \r\n  },\r\n\r\n\r\n\r\n  select: {\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    borderRadius: \"10px\",\r\n    \"&:before\": {\r\n      border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:hover\": {\r\n      border: \"none\",    backgroundColor: \"#fff\",outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:after\": {\r\n      border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n    },\r\n    \"&:not(.Mui-disabled):hover::before\": {\r\n      border: \"none\", backgroundColor: \"#fff\",outline: \"2px solid red\",      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  icon: {\r\n    fill: \"green\"\r\n  },\r\n  text: {\r\n    border: \"none\",backgroundColor: \"#fff\",outline: \"2px solid red\"\r\n  },\r\n  outline: {\r\n    \"&:before\": {\r\n    borderColor: \"red\"\r\n    },\r\n    \"&:after\": {\r\n    borderColor: \"red\"\r\n    }},\r\n    item:{\r\n        textDecoration:\"none\",\r\n        color: \"rgb( 227, 156, 0)\",\r\n     \r\n      },\r\n      activeItem:{\r\n      background:\"#fff\",\r\n      padding:\"4px 16px\",\r\n      borderRadius:\"8px\",\r\n      color:\"#000\",\r\n      textDecoration:\"none\",\r\n      cursor:\"pointer\",\r\n      boxShadow:\"0px 3px 6px 0px rgba(0,0,0,0.16)\"\r\n      \r\n    },\r\n\r\n    TabHeader: {\r\n        backgroundColor: \"rgb( 255 ,242, 212)\",\r\n        margin:\"0 auto\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        height: \"50px\",\r\n        boxShadow:\r\n          \" rgba(0, 0, 0, 0.1) 0px 60px 100px -100px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\r\n        color: \"rgb( 227, 156, 0)\",\r\n        fontWeight: \"bold\",\r\n        borderRadius: \"15px\",\r\n        fontSize: \"1rem\",\r\n        marginBottom:\"16px;\",\r\n        marginTop:\"16px\"\r\n      },\r\n\r\n      buttonLogin:{\r\n        backgroundColor:\"blue\",\r\n        borderRadius:\"8px\",\r\n        width:\"30%\",\r\n        color:\"#fff\",\r\n        fontFamily:\"Shabnam\",\r\n        fontWeight:\"bold\",\r\n        \"&:hover\":{\r\n          backgroundColor:\"blue\",\r\n        }\r\n      }\r\n}));\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\style.js",["787","788"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  TabHeader: {\r\n    backgroundColor: \"rgb( 255 ,242, 212)\",\r\n    margin:\"0 auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    height: \"45px\",\r\n    boxShadow:\r\n      \" rgba(0, 0, 0, 0.1) 0px 60px 100px -100px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\r\n    color: \"rgb(227 156 0)\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"15px\",\r\n    fontSize: \"1rem\",\r\n    marginBottom:\"16px\",\r\n    marginTop:\"32px\",\r\n   \r\n  },    \r\n  item:{\r\n    textDecoration:\"none\",\r\n    color: \"black\",\r\n    color: \"rgb(227 156 0)\",\r\n \r\n  },\r\n  activeItem:{\r\n  background:\"#fff\",\r\n  padding:\"4px 16px\",\r\n  borderRadius:\"8px\",\r\n  color:\"#000\",\r\n  textDecoration:\"none\",\r\n  cursor:\"pointer\",\r\n  boxShadow:\"0px 3px 6px 0px rgba(0,0,0,0.16)\"\r\n  \r\n},\r\ninputSelect: {\r\n  width: \"250px\",\r\n  display:\"flex\",\r\n  height:\"40px\",\r\n  borderRadius: \"8px\",\r\n  border: \"none\",\r\n  // height: \"40px\",\r\n  fontFamily: \"Shabnam\",\r\n  \"&\t.MuiSelect-outlined\":{\r\n  \r\n    borderRadius: \"8px\",\r\n  },\r\n  \"&\t.MuiSelect-outlined\":{\r\n  \r\n    borderRadius: \"8px\",\r\n  },\r\n\r\n\r\n},\r\n\r\n}));\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\JobUser\\AddJob.js",["789","790","791","792","793","794","795","796","797","798"],"import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport jMoment from \"moment-jalaali\";\r\nimport JalaliUtils from \"@date-io/jalaali\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"./styles\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  NavLink,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport {\r\n  DatePicker,\r\n  MuiPickersUtilsProvider,\r\n  TimePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { date } from \"yup/lib/locale\";\r\n\r\nconst AddJob = (props) => {\r\n  console.log(\"props\", props);\r\n  const classes = useStyles();\r\n  const [selectedDate, handleDateChange] = useState(moment());\r\n  jMoment.loadPersian({ dialect: \"persian-modern\", usePersianDigits: true });\r\n\r\n  const validationSchema = yup.object().shape({\r\n    Username: yup.string().required(\"لطفا نام کاربر را وارد کنید\"),\r\n    Beehive: yup.string().required(\"لطفا نام زنبورستان را وارد کنید\"),\r\n    Hive: yup.string().required(\"لطفا نام کندو را وارد کنید\"),\r\n    // Priority: yup.string().required(\"لطفا الویت را مشخص کنید\"),\r\n    // Reminder:yup.string().required(\"لطفا الویت را مشخص کنید\"),\r\n    jobTitle: yup.string().required(\"لطفا عنوان کار خود را وارد کنید\"),\r\n    email: yup.string().email(\"لطفا ایمیل معتبر وارد کنید\"),\r\n    startTime: yup.date().nullable(),\r\n    // Checkbox:yup.boolean()\r\n    // .oneOf([true], \"این \")\r\n  });\r\n\r\n  const {\r\n    register,\r\n    control,\r\n    watch,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const [start, setStart] = useState(new Date(2022, 4, 19));\r\n  const [end, setEnd] = useState(new Date());\r\n  const onSubmit = (data) => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // event.preventDefault();\r\n    props.onEventAdded({\r\n      title: data.jobTitle,\r\n      start: new Date(data.dateInput),\r\n      time: data.startTime,\r\n      end: new Date(data.endDate),\r\n    });\r\n\r\n    console.log(\"data.startTime\");\r\n    // props.onClose()\r\n    // history.push(\"/login/step2\")\r\n  };\r\n  let { path, url } = useRouteMatch();\r\n\r\n  const options = [\r\n    { label: \"همه\", value: \"همه\" },\r\n    { label: \"تغذیه زنبور\", value: \"تغذیه زنبور\" },\r\n    { label: \"برداشت عسل\", value: \"برداشت عسل\" },\r\n    { label: \"بیماری زنبور\", value: \"بیماری زنبور\" },\r\n  ];\r\n\r\n  console.log(\"whatch\", watch(\"dateInput\"));\r\n\r\n  return (\r\n    <Paper>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"center\"\r\n        margin=\"dense\"\r\n        color=\"secondary\"\r\n        className={classes.Title}\r\n      >\r\n        کار جدید\r\n      </Typography>\r\n      <Divider className={classes.Divider1} />\r\n\r\n      <Box px={3} py={2} className={classes.root}>\r\n        <Grid container spacing={1} className={classes.container}>\r\n          <Grid item xs={12}>\r\n            <div className={classes.box}>\r\n              <Grid item xs={12} sm={12} className={classes.Select}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}>نام کاربر</label>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    {...register(\"Username\")}\r\n                    error={errors.Username ? true : false}\r\n\r\n                    // onChange={(e) =>\r\n                    //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                    // } // Using setValue\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorMessage}\r\n                >\r\n                  {errors.Username?.message}\r\n                </Typography>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} className={classes.inputText}>\r\n                <div className={classes.input}>\r\n                  <label className={classes.label}> عنوان کار </label>\r\n                  <TextField\r\n                    className={classes.TextField}\r\n                    required\r\n                    id=\"jobTitle\"\r\n                    name=\"jobTitle\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"dense\"\r\n                    {...register(\"jobTitle\")}\r\n                    error={errors.jobTitle ? true : false}\r\n                  />\r\n                </div>\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorMessage}\r\n                >\r\n                  {errors.jobTitle?.message}\r\n                </Typography>\r\n              </Grid>\r\n            </div>\r\n            <Divider className={classes.Divider2} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <div className={classes.box2}>\r\n              <div>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  align=\"center\"\r\n                  margin=\"dense\"\r\n                  color=\"primary\"\r\n                  className={classes.subTitle}\r\n                >\r\n                  دسته بندی\r\n                </Typography>\r\n              </div>\r\n              <Grid item xs={6} sm={6} className={classes.TabHeader}>\r\n                <Grid>\r\n                  <NavLink\r\n                    to={`${url}/netflix1`}\r\n                    className={classes.item}\r\n                    activeClassName={classes.activeItem}\r\n                  >\r\n                    عمومی\r\n                  </NavLink>\r\n                </Grid>\r\n                <Grid>\r\n                  <NavLink\r\n                    to={`${url}/netflix2`}\r\n                    className={classes.item}\r\n                    activeClassName={classes.activeItem}\r\n                  >\r\n                    زنبورستان\r\n                  </NavLink>\r\n                </Grid>\r\n                <Grid>\r\n                  <NavLink\r\n                    to={`${url}/netflix3`}\r\n                    className={classes.item}\r\n                    activeClassName={classes.activeItem}\r\n                  >\r\n                    کندو\r\n                  </NavLink>\r\n                </Grid>\r\n              </Grid>\r\n              <div className={classes.box}>\r\n                <Grid item xs={12} sm={12} className={classes.Select}>\r\n                  <div className={classes.input}>\r\n                    <label className={classes.label}>زنبورستان</label>\r\n                    <Select\r\n                      className={classes.inputSelect}\r\n                      required\r\n                      variant=\"outlined\"\r\n                      {...register(\"Beehive\")}\r\n                      error={errors.Beehive ? true : false}\r\n\r\n                      // onChange={(e) =>\r\n                      //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                      // } // Using setValue\r\n                    >\r\n                      {options?.map((option) => {\r\n                        return (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label ?? option.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </div>\r\n                  {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                  <Typography\r\n                    variant=\"inherit\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.errorMessage}\r\n                  >\r\n                    {errors.Beehive?.message}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12} className={classes.Select}>\r\n                  <div className={classes.input}>\r\n                    <label className={classes.label}>کندو</label>\r\n                    <Select\r\n                      className={classes.inputSelect}\r\n                      required\r\n                      variant=\"outlined\"\r\n                      {...register(\"Hive\")}\r\n                      error={errors.Hive ? true : false}\r\n\r\n                      // onChange={(e) =>\r\n                      //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                      // } // Using setValue\r\n                    >\r\n                      {options?.map((option) => {\r\n                        return (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label ?? option.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </div>\r\n                  {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                  <Typography\r\n                    variant=\"inherit\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.errorMessage}\r\n                  >\r\n                    {errors.Hive?.message}\r\n                  </Typography>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.Divider2} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <div className={classes.box2}>\r\n              <div>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  align=\"center\"\r\n                  margin=\"dense\"\r\n                  color=\"primary\"\r\n                  className={classes.subTitle}\r\n                >\r\n                  زمانبندی\r\n                </Typography>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  width: \"100%\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <div style={{ width: \"100%\" }}>\r\n                  <Grid item xs={12} sm={12}>\r\n                    <div className={classes.inputDate}>\r\n                      <label className={classes.label}>از تاریخ</label>\r\n                      <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"dateInput\"\r\n                          render={({ field }) => (\r\n                            <DatePicker\r\n                              placeholderText=\"Select date\"\r\n                              onChange={(date) => field.onChange(date)}\r\n                              selected={field.value}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                    <Typography\r\n                      variant=\"inherit\"\r\n                      color=\"textSecondary\"\r\n                      className={classes.errorMessage}\r\n                    >\r\n                      {errors.Beehive?.message}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} className={classes.Select}>\r\n                    <div className={classes.input}>\r\n                      <MuiPickersUtilsProvider\r\n                        utils={JalaliUtils}\r\n                        locale=\"fa\"\r\n                        className={classes.input}\r\n                      >\r\n                        <label className={classes.label}>از ساعت</label>\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"startTime\"\r\n                          render={({ field }) => (\r\n                            <TimePicker\r\n                              placeholderText=\"Select date\"\r\n                              onChange={(date) => field.onChange(date)}\r\n                              selected={field.value}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                    <Typography\r\n                      variant=\"inherit\"\r\n                      color=\"textSecondary\"\r\n                      className={classes.errorMessage}\r\n                    >\r\n                      {errors.startTime?.message}\r\n                    </Typography>\r\n                  </Grid>\r\n                </div>\r\n\r\n                <div style={{ width: \"100%\" }}>\r\n                  <Grid item xs={12} sm={12} className={classes.Select}>\r\n                    <div className={classes.input}>\r\n                      <label className={classes.label}>تا تاریخ</label>\r\n                      <MuiPickersUtilsProvider utils={JalaliUtils} locale=\"fa\">\r\n                        <Controller\r\n                          control={control}\r\n                          name=\"endDate\"\r\n                          render={({ field }) => (\r\n                            <DatePicker\r\n                              placeholderText=\"Select date\"\r\n                              onChange={(date) => field.onChange(date)}\r\n                              selected={field.value}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                    <Typography\r\n                      variant=\"inherit\"\r\n                      color=\"textSecondary\"\r\n                      className={classes.errorMessage}\r\n                    >\r\n                      {errors.Hive?.message}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} className={classes.Select}>\r\n                    <div className={classes.input}>\r\n                      <label className={classes.label}>تا ساعت</label>\r\n                      <Select\r\n                        className={classes.inputSelect}\r\n                        required\r\n                        variant=\"outlined\"\r\n                        {...register(\"endTime\")}\r\n                        error={errors.Hive ? true : false}\r\n\r\n                        // onChange={(e) =>\r\n                        //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                        // } // Using setValue\r\n                      >\r\n                        {options?.map((option) => {\r\n                          return (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label ?? option.value}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </div>\r\n                    {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                    <Typography\r\n                      variant=\"inherit\"\r\n                      color=\"textSecondary\"\r\n                      className={classes.errorMessage}\r\n                    >\r\n                      {errors.Hive?.message}\r\n                    </Typography>\r\n                  </Grid>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.Divider2} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <div className={classes.box2}>\r\n              <div>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  align=\"center\"\r\n                  margin=\"dense\"\r\n                  color=\"primary\"\r\n                  className={classes.subTitle}\r\n                >\r\n                  فعالیت\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.box}>\r\n                <Grid item xs={12} sm={12} className={classes.Select}>\r\n                  <div>\r\n                    <Grid className={classes.input}>\r\n                      <label className={classes.label}>الویت</label>\r\n                      <Select\r\n                        className={classes.inputSelect}\r\n                        required\r\n                        variant=\"outlined\"\r\n                        {...register(\"Beehive\")}\r\n                        error={errors.Beehive ? true : false}\r\n\r\n                        // onChange={(e) =>\r\n                        //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                        // } // Using setValue\r\n                      >\r\n                        {options?.map((option) => {\r\n                          return (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label ?? option.value}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </Grid>\r\n                  </div>\r\n                  {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                  <Typography\r\n                    variant=\"inherit\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.errorMessage}\r\n                  >\r\n                    {errors.Beehive?.message}\r\n                  </Typography>\r\n\r\n                  <Grid item className={classes.checkBox}>\r\n                    <FormControlLabel\r\n                      {...register(\"Checkbox\")}\r\n                      control={<Checkbox />}\r\n                      label=\"انجام شده\"\r\n                    />\r\n                  </Grid>\r\n                  {/* \r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.errorMessage}\r\n                >\r\n                  {errors.Checkbox?.message}\r\n                </Typography>  */}\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12} className={classes.Select}>\r\n                  <div className={classes.input}>\r\n                    <label className={classes.label}>یادآوری</label>\r\n                    <Select\r\n                      className={classes.inputSelect}\r\n                      required\r\n                      variant=\"outlined\"\r\n                      {...register(\"Hive\")}\r\n                      error={errors.Hive ? true : false}\r\n\r\n                      // onChange={(e) =>\r\n                      //   setValue(\"select\", e.target.value, { shouldValidate: true })\r\n                      // } // Using setValue\r\n                    >\r\n                      {options?.map((option) => {\r\n                        return (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label ?? option.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </div>\r\n                  {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                  <Typography\r\n                    variant=\"inherit\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.errorMessage}\r\n                  >\r\n                    {errors.Hive?.message}\r\n                  </Typography>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n            <Divider className={classes.Divider2} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box mt={8} style={{ width: \"100%\" }}>\r\n          <div className={classes.buttonBox}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.Button2}\r\n              onClick={props.handleClose}\r\n            >\r\n              انصراف\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.Button1}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              افزودن\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\nexport default AddJob;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\FilterCalender.js",["799","800","801","802","803","804"],"import React, { useState } from \"react\";\r\nimport {\r\n  Add,\r\n  AddRounded,\r\n  ExpandMore,\r\n  Minimize,\r\n  RemoveSharp,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  FormControl,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nfunction FilterCalender() {\r\n  const [expanded, setExpanded] = useState();\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n  return (\r\n    <Grid container style={{ backgroundColor: \"#fff\", borderRadius: \"12px\" }}>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-start\",\r\n        }}\r\n      >\r\n        <Typography\r\n          style={{ width: \"100%\", textAlign: \"center\", marginTop: \"16px\" }}\r\n        >\r\n          فیلترها\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {/* item */}\r\n      <Grid style={{ width: \"100%\" }}>\r\n        <Accordion\r\n          expanded={expanded === \"panel1\"}\r\n          onChange={handleChange(\"panel1\")}\r\n          // className={classes.Accordion}\r\n          style={{ marginTop: \"16px\" }}\r\n        >\r\n          <AccordionSummary\r\n            style={{ display: \"flex\", flexDirection: \"row-reverse\" }}\r\n            // className={classes.arrowStyle}\r\n            expandIcon={\r\n              expanded === \"panel1\" ? (\r\n                <RemoveSharp\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              ) : (\r\n                <AddRounded\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            <Typography>زنبورستان</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography>زنبورستان</Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion\r\n          expanded={expanded === \"panel2\"}\r\n          onChange={handleChange(\"panel2\")}\r\n          // className={classes.Accordion}\r\n        >\r\n          <AccordionSummary\r\n            style={{ display: \"flex\", flexDirection: \"row-reverse\" }}\r\n            // className={classes.arrowStyle}\r\n            expandIcon={\r\n              expanded === \"panel2\" ? (\r\n                <RemoveSharp\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              ) : (\r\n                <AddRounded\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            <Typography>کندو</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography>زنبورستان</Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion\r\n          expanded={expanded === \"panel3\"}\r\n          onChange={handleChange(\"panel3\")}\r\n          // className={classes.Accordion}\r\n        >\r\n          <AccordionSummary\r\n            style={{ display: \"flex\", flexDirection: \"row-reverse\" }}\r\n            // className={classes.arrowStyle}\r\n            expandIcon={\r\n              expanded === \"panel3\" ? (\r\n                <RemoveSharp\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              ) : (\r\n                <AddRounded\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            <Typography>الویت</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography>زنبورستان</Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion\r\n          expanded={expanded === \"panel4\"}\r\n          onChange={handleChange(\"panel4\")}\r\n          // className={classes.Accordion}\r\n        >\r\n          <AccordionSummary\r\n            style={{ display: \"flex\", flexDirection: \"row-reverse\" }}\r\n            // className={classes.arrowStyle}\r\n            expandIcon={\r\n              expanded === \"panel4\" ? (\r\n                <RemoveSharp\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              ) : (\r\n                <AddRounded\r\n                  style={{ color: \"rgb( 26 115 233)\", fontSize: \"1.2rem\" }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            <Typography>کاربر</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography>زنبورستان</Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FilterCalender;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\CalenderProject\\event-utils.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\addTicket.js",["805","806","807","808","809","810","811","812","813"],"import {\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  TextareaAutosize,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport useStyles from \"./Style\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nfunction AddTicket(props) {\r\n  {\r\n    console.log(props.input);\r\n  }\r\n  const validationSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .required(\"لطفا تعداد QRCODE درخواستی را وارد نمایید.\"),\r\n\r\n    select: yup.string().required(\"لطفا یک گزینه را انتخاب کنید.\"),\r\n    request: yup\r\n      .string()\r\n      .required(\"لطفا درخواست خود را وارد نمایید.\"),\r\n      });\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const options = [\r\n    { label: \"درمان\"       ,           value: \"درمان\"          },\r\n    { label: \"تغذیه\"       ,           value: \"تغذیه\"          },\r\n    { label: \"بازدید\"       ,          value: \"بازدید\"         },\r\n    { label: \"برداشت عسل\"       ,      value: \"برداشت عسل\"     },\r\n    { label: \"زنبورستان\"       ,       value: \"زنبورستان\"      },\r\n    { label: \"کندو\"         ,          value: \"کندو\"           },\r\n    { label: \"محصولات\"         ,        value: \"محصولات\"         },\r\n    { label: \"ملکه\"       ,            value: \"ملکه\"           },\r\n    { label: \"رفتار زنبورعسل\"       ,  value: \"رفتار زنبورعسل\" },\r\n    { label: \"ارتباط با برد\"       ,   value: \"ارتباط با برد\"  },\r\n    { label: \"دسترسی ها\"       ,       value: \"دسترسی ها\"      },\r\n    { label: \"حساب کاربری\"       ,     value: \"حساب کاربری\"    },\r\n    { label: \"انتقال\"       ,          value: \"انتقال\"         },\r\n    { label: \"QRCODE\"       ,          value: \"QRCODE\"         },\r\n    { label: \"سایر\"       ,            value: \"سایر\"           },\r\n\r\n\r\n\r\n  ];\r\n  \r\n  const onSubmit = async(data) => {\r\n    console.log(JSON.stringify(data, null, 2));\r\n    alert(JSON.stringify(data, null, 2));\r\n    // const response = await axios.post(\"https://reqres.in/api/users\", data);\r\n    // setData({ data: [...data, data] });\r\n    props.handleClose()\r\n  };\r\n\r\n\r\n  const [data, setData] = useState();\r\n  const classes = useStyles();\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"24px 0px\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          color: \"rgb( 227 ,156, 0)\",\r\n          fontSize: \"1.2rem\",\r\n          fontWeight: 600,\r\n          fontFamily: \"Shabnam\",\r\n        }}\r\n      >\r\n        {props.title}{\" \"}\r\n      </div>\r\n      <Divider\r\n        style={{ backgroundColor: \"rgb( 244 ,244 ,244)\", marginTop: \"32px\" }}\r\n      />\r\n      <div\r\n        style={{\r\n          width: \"50vw\",\r\n          padding: \"0 48px\",\r\n          overflowX: \"hidden\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        {props.input ? (\r\n          <div\r\n            style={{ display: \"flex\", alignItems: \"center\", marginTop: \"32px\" }}\r\n          >\r\n            <h2\r\n              style={{\r\n                fontSize: \"0.8rem\",\r\n                fontWeight: 600,\r\n                fontFamily: \"Shabnam\",\r\n              }}\r\n            >\r\n              {props.title}\r\n            </h2>\r\n            <Grid item xs={12} sm={12} className={classes.Select}>\r\n                <div className={classes.input}>\r\n                  <Select\r\n                    className={classes.inputSelect}\r\n                    required\r\n                    variant=\"outlined\"\r\n                    {...register(\"select\")}\r\n                    error={errors.select ? true : false}\r\n                  >\r\n                    {options?.map((option) => {\r\n                      return (\r\n                        <MenuItem  key={option.value} value={option.value}>\r\n                          {option.label ?? option.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </div>\r\n                {/* {errors.select && <p>{errors.select.message}</p>} */}\r\n                <Typography\r\n                  variant=\"inherit\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.select?.message}\r\n                </Typography>\r\n              </Grid>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{ display: \"flex\", alignItems: \"center\", marginTop: \"16px\" }}\r\n          >\r\n            <h2\r\n              style={{\r\n                fontSize: \"0.8rem\",\r\n                fontWeight: 600,\r\n                fontFamily: \"Shabnam\",\r\n              }}\r\n            >\r\n              تعداد QR Code درخواستی\r\n            </h2>\r\n            <div style={{display:\"flex\",flexDirection:\"column\",     marginRight: \"32px\",}}>\r\n            <TextField\r\n             \r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              style={{\r\n                backgroundColor: \"rgb( 244, 244, 244)\",\r\n                width: \"200px\",\r\n                borderRadius: \"8px\",\r\n                border: \"none\",\r\n              }}\r\n              {...register(\"name\")}\r\n              error={errors.name ? true : false}\r\n            />\r\n              <Typography\r\n                  variant=\"inherit\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.name?.message}\r\n              </Typography>\r\n          </div></div>\r\n        )}\r\n\r\n        <DialogContent style={{ overflow: \"hidden\", padding: \"0\" }}>\r\n          <div style={{ marginTop: \"32px\" }}>شرح درخواست</div>\r\n          <TextareaAutosize\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              style={{\r\n                backgroundColor: \"rgb( 244, 244, 244)\",\r\n                width: \"100%\",\r\n                borderRadius: \"8px\",\r\n                border: \"none\",\r\n                height:\"130px\",\r\n                marginTop:\"16px\"\r\n              }}\r\n              {...register(\"request\")}\r\n              error={errors.request ? true : false}\r\n            />\r\n              <Typography\r\n                  variant=\"inherit\"\r\n                  className={classes.errorTitle}\r\n                >\r\n                  {errors.request?.message}\r\n              </Typography>\r\n          {/* <textarea\r\n            id=\"w3review\"\r\n            name=\"w3review\"\r\n            rows=\"4\"\r\n            cols=\"50\"\r\n            style={{\r\n              backgroundColor: \"rgb( 244, 244, 244)\",\r\n              border: \"none\",\r\n              width: \"100%\",\r\n              marginTop: \"8px\",\r\n              height: \"150px\",\r\n              borderRadius: \"12px\",\r\n              marginTop: \"20px\",\r\n            }}\r\n          >\r\n\r\n          </textarea> */}\r\n        </DialogContent>\r\n      </div>\r\n      <Divider\r\n        style={{ marginTop: \"40px\", backgroundColor: \"rgb( 244 ,244 ,244)\" }}\r\n      />\r\n      <DialogActions className={classes.actionButton}>\r\n        <Button onClick={props.handleClose} className={classes.cancelButton}>\r\n          انصراف\r\n        </Button>\r\n        <Button    onClick={handleSubmit(onSubmit)} className={classes.addButton}>\r\n          افزودن\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTicket;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\PageTitle\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\webHiveSubmit.js",["814","815","816","817","818","819","820","821","822","823","824","825"],"import { Button, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, MobileStepper, Typography } from '@material-ui/core'\nimport { Close, KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/styles';\nimport React, { useState } from 'react'\nimport Widget from '../../../components/Widget/Widget'\nimport useStyles from \"./Style\";\nimport { useForm, Controller } from 'react-hook-form';\n\nfunction WebHiveSubmit(props) {\n  const theme = useTheme();\n  const [activeStep, setActiveStep] =useState(0);\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n  const onSubmit = data => {\n    console.log(JSON.stringify(data, null, 2));\n    alert(JSON.stringify(data, null, 2));\n  };\n  const steps = [\n    {\n      id:\"0\",\n      label: 'مشاهده تخم روز',\n      // description نیاز نیست\n    },\n    {\n      id:\"1\",\n      label: 'مشاهده ملکه',\n\n    },\n    {\n      id:\"2\",\n      label: 'مشاهده اب و هوا',\n\n    },\n    {\n      id:\"3\",\n      label: 'اتمام بازدید',\n    }\n\n  ]\n  const maxSteps = steps.length;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n    console.log(\"props\",props)\n    const classes = useStyles();\n  return (\n      <div className={classes.DialogBox}>\n    <DialogTitle style={{textAlign:\"center\",fontWeight:600}}>{\"بازدید فصلی بهار\"}</DialogTitle>\n    <DialogContent>\n      <Grid  container style={{display:\"flex\",alignItems:\"flex-start\" ,justifyContent:\"space-between\",boxShadow:\"0px 3px 6px 0px rgba( 0, 0 ,0, 0.16)\",padding:\"16px 8px 32px\"}} >\n                <Grid item   style={{display:\"flex\",flexDirection:\"column\" }}>\n                    <Typography variant='p'>نکات: دقت به احتمال بچه دهی</Typography>\n                    <Typography variant='p'>عملیات: بازکردن کندو قاب به قاب</Typography>\n                </Grid>\n                <Grid item onClick={props.onClose} ><Close color='secondary'/></Grid>\n      </Grid>\n    </DialogContent >\n   <Grid item  xs={12} style={{display:\"flex\", alignItems:\"center\",justifyContent:\"center\",fontWeight:600,marginTop:\"24px\"}}> <Typography variant='p'> {steps[activeStep].label}</Typography></Grid>\n    <DialogActions className={classes.DialogActions}>\n      <Button onClick={steps[activeStep].id == steps.length - 1 ? props.onClose : handleNext}  className={steps[activeStep].id == steps.length - 1 ? classes.ButtonHiveSubmitFinish : classes.ButtonHiveSubmitYes} >{steps[activeStep].id == steps.length - 1 ? 'ثبت تمام پاسخ ها' : 'بله'}</Button>\n      <Button onClick={handleNext} className={steps[activeStep].id == steps.length - 1 ? classes.ButtonHiveSubmitNoFinish : classes.ButtonHiveSubmitNo}>خیر</Button>\n    </DialogActions>\n\n    <MobileStepper\n      variant=\"dots\"\n      style={{}}\n      steps={maxSteps}\n      position=\"static\"\n      activeStep={activeStep}\n      sx={{ maxWidth: 400, flexGrow: 1 }}\n      nextButton={\n        <Button size=\"small\" onClick={handleNext}  disabled={activeStep === maxSteps - 1}>\n      \n          {theme.direction === 'rtl' ? (\n            <KeyboardArrowLeft />\n          ) : (\n            <KeyboardArrowRight />\n          )}\n        </Button>\n      }\n      backButton={\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n          {theme.direction === 'rtl' ? (\n            <KeyboardArrowRight />\n          ) : (\n            <KeyboardArrowLeft />\n          )}\n   \n        </Button>\n      }\n    />\n    </div>\n  )\n}\n\nexport default WebHiveSubmit","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\LeftCard.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\RightTopCard.js",["826","827","828","829","830","831","832","833","834"],"import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Widget from \"../../../components/Widget/Widget\";\nimport useStyles from \"./Style\";\n\nfunction RightTopCard() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      item\n      xs={12}\n      style={{ fontWeight: 600,height:\"480px\"}}\n    >\n  \n\n      <Widget\n        color=\"secondary\"\n        style={{\n          fontWeight: 600, \n          width: \"100%\",        \n        }}\n      >\n        <Grid\n          item\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          className={classes.greenHeader}\n        >\n          <Grid item>\n            <Typography\n              variant=\"p\"\n              weight=\"Bold\"\n              noWrap\n              style={{ fontWeight: 600 }}\n            >\n              بازدید فعلی\n            </Typography>\n          </Grid>\n\n          <Grid item>\n            <Typography variant=\"p\" weight=\"Bold\" noWrap>\n              مهلت تا سه روز آینده\n            </Typography>\n          </Grid>\n        </Grid>\n\n\n\n\n\n\n\n        <Grid\n          item\n          xs={12}\n          style={{\n            display: \"flex\",\n            marginTop: \"50px\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n           \n          }}\n        >\n\n          <Grid\n            item\n            sm={3}\n            xs={12}\n            color=\"secondary\"\n            className={classes.cards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"flex-start\",\n          \n\n            }}\n          >\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                تاریخ بازدید\n              </Typography>\n            </Grid>\n\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n            >\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\n            </Grid>\n          </Grid>\n\n\n\n\n\n\n\n\n\n\n\n\n\n          <Grid\n            item\n            sm={3}\n            xs={12}\n            color=\"secondary\"\n            className={classes.cards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                تاریخ بازدید\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n            >\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            sm={3}\n            xs={12}\n            color=\"secondary\"\n            className={classes.cards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                تاریخ بازدید\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n            >\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\n            </Grid>\n          </Grid>\n\n        </Grid>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        <Grid\n          item\n          xs={12}\n          style={{\n            display: \"flex\",\n            marginTop: \"32px\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Grid\n            item\n            sm={3}\n            xs={12}\n            color=\"secondary\"\n            className={classes.cards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                تاریخ بازدید\n              </Typography>\n            </Grid>\n\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n            >\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            sm={3}\n            xs={12}\n            color=\"secondary\"\n            className={classes.cards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                تاریخ بازدید\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n            >\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            sm={3}\n            xs={12}\n            color=\"secondary\"\n            className={classes.cards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                تاریخ بازدید\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n            >\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\n            </Grid>\n          </Grid>\n        </Grid>\n        \n        <Grid\n          item\n          xs={12}\n          style={{\n            display: \"flex\",\n            marginTop: \"32px\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Grid\n            item\n            sm={3}\n            xs={12}\n            color=\"secondary\"\n            className={classes.cards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                تاریخ بازدید\n              </Typography>\n            </Grid>\n\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n            >\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            sm={3}\n            xs={12}\n            color=\"secondary\"\n            className={classes.cards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                تاریخ بازدید\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n            >\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\n            </Grid>\n          </Grid>\n\n          <Grid\n            item\n            sm={3}\n            xs={12}\n            color=\"secondary\"\n            className={classes.cards}\n            style={{\n              fontWeight: 600,\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <Grid item alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"p\" weight=\"Bold\" noWrap>\n                تاریخ بازدید\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              //   className={classes}\n            >\n              <img src=\"/assets/refresh-svgrepo-com-1.svg\" />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Widget>\n    </Grid>\n  );\n}\n\nexport default RightTopCard;\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\FrequentlyQuestions\\Styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportPage\\Style.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\charts\\PieCharts.js",["835","836","837"],"\nimport React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Sector } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 50 }, \n  { name: \"Group D\", value: 500 }\n];\n\nconst renderActiveShape = (props) => {\n    const RADIAN = Math.PI / 180;\n\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g >\n      <text x={cx} y={cy} dy={6} textAnchor=\"middle\" fill={fill} style={{display:\"flex\",alignItems: \"center\",justifyContent: \"center\"}}>\n      {` ${(percent * 100).toFixed(2)}%`}\n      </text>\n      <Sector \n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={percent?\"red\":\"green\"}\n      />\n      {/* <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill=\"red\"\n      /> */}\n      {/* <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      /> */}\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{` ${value.toFixed(2)}`}</text>\n      {/* <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"red\"\n      >\n        {` ${(percent * 100)}%`}\n      </text> */}\n    </g>\n  );\n};\n\nexport default function PieCharts() {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const onPieEnter = useCallback(\n    (_, index) => {\n      setActiveIndex(index);\n    },\n    [setActiveIndex]\n  );\n\n  return (\n    <PieChart width={70} height={70}>\n      <Pie\n      style={{border: '1px solid red'}}\n        activeIndex={activeIndex}\n        activeShape={renderActiveShape}\n        data={data}\n        cx={30}\n        cy={25}\n        innerRadius={20}\n        outerRadius={30}\n        fill= \"rgb( 206 206 207)\"\n        dataKey=\"value\"\n        onMouseEnter={onPieEnter}\n      />\n    </PieChart>\n  );\n}\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\Diagram.js",["838","839","840","841","842"],"import {\r\n  Grid,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Area,\r\n  ComposedChart,\r\n  Line,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  Tooltip,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport Dot from \"../../../components/Sidebar/components/Dot\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\n// import useStyles from \"../../dashboard/styles\";\r\nimport useStyles from \"./Style\";\r\nimport TableDiagram from \"./tableDiagram\";\r\n\r\nfunction Diagram() {\r\n  const data = [\r\n    {\r\n      day: \"10:52\",\r\n      week: \"شنبه\",\r\n      bardia: 200,\r\n      total2: 200,\r\n      total: {\r\n        monthly: 50,\r\n        weekly: 200,\r\n        daily: 199,\r\n        percent: { value: 3.7, profit: false },\r\n      },\r\n      color: \"primary\",\r\n\r\n      registrations: {\r\n        monthly: { value: 830, profit: false },\r\n        weekly: { value: 215, profit: true },\r\n        daily: { value: \"به موقع\", profit: true },\r\n      },\r\n      bounce: {\r\n        monthly: { value: 4.5, profit: false },\r\n        weekly: { value: 3, profit: true },\r\n        daily: { value: 3.25, profit: true },\r\n      },\r\n    },\r\n    {\r\n      day: \"12:52\",\r\n      week: \"یک شنبه\",\r\n      bardia: 300,\r\n      total2: 300,\r\n      total: {\r\n        monthly: 80,\r\n        weekly: 800,\r\n        daily: 280,\r\n        percent: { value: 3.7, profit: false },\r\n      },\r\n      color: \"primary\",\r\n      registrations: {\r\n        monthly: { value: 830, profit: false },\r\n        weekly: { value: 215, profit: true },\r\n        daily: { value: \"به موقع\", profit: true },\r\n      },\r\n      bounce: {\r\n        monthly: { value: 4.5, profit: false },\r\n        weekly: { value: 3, profit: true },\r\n        daily: { value: 3.25, profit: true },\r\n      },\r\n    },\r\n    {\r\n      day: \"15:52\",\r\n      week: \"دوشنبه\",\r\n      bardia: 800,\r\n      total: {\r\n        monthly: 100,\r\n        weekly: 900,\r\n        daily: 550,\r\n        percent: { value: 3.7, profit: false },\r\n      },\r\n      color: \"primary\",\r\n      registrations: {\r\n        monthly: { value: 830, profit: false },\r\n        weekly: { value: 215, profit: true },\r\n        daily: { value: \"به موقع\", profit: true },\r\n      },\r\n      bounce: {\r\n        monthly: { value: 4.5, profit: false },\r\n        weekly: { value: 3, profit: true },\r\n        daily: { value: 3.25, profit: true },\r\n      },\r\n    },\r\n    // {\r\n    //   name: 'شنبه',\r\n    //   temperature: 400,\r\n    //   humidity: 240,\r\n    //   amt: 240,\r\n    // },\r\n    // {\r\n    //   name: 'یکشنبه',\r\n    //   temperature: 300,\r\n    //   humidity: 139,\r\n    //   amt: 221,\r\n    // },\r\n    // {\r\n    //   name: 'دوشنبه',\r\n    //   temperature: 200,\r\n    //   humidity: 980,\r\n    //   amt: 229,\r\n    // },\r\n    // {\r\n    //   name: 'سه شنبه',\r\n    //   temperature: 278,\r\n    //   humidity: 390,\r\n    //   amt: 200,\r\n    // },\r\n    // {\r\n    //   name: 'چهارشنبه',\r\n    //   temperature: 189,\r\n    //   humidity: 480,\r\n    //   amt: 218,\r\n    // },\r\n    // {\r\n    //   name: 'پنجشنبه',\r\n    //   temperature: 230,\r\n    //   humidity: 380,\r\n    //   amt: 250,\r\n    // },\r\n    // {\r\n    //   name: 'جمعه',\r\n    //   temperature: 349,\r\n    //   humidity: 430,\r\n    //   amt: 210,\r\n    // },\r\n  ];\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n  // const mainChartData = getMainChartData();\r\n  const [date, setDate] = useState(mainChartState);\r\n  // function getMainChartData() {\r\n  //   var resultArray = [];\r\n  //   var tablet = getRandomData(31, 350, 650, 750, 100);\r\n  //   var desktop = getRandomData(31, 150, 750, 750, 150);\r\n  //   var mobile = getRandomData(31, 150, 750, 750, 150);\r\n\r\n  //   for (let i = 0; i < tablet.length; i++) {\r\n  //     resultArray.push({\r\n  //       tablet: tablet[i].value,\r\n  //       desktop: desktop[i].value,\r\n  //       mobile: mobile[i].value,\r\n  //     });\r\n  //   }\r\n\r\n  //   return resultArray;\r\n  // }\r\n  // function getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  //   var array = new Array(length).fill();\r\n  //   let lastValue;\r\n\r\n  //   return array.map((item, index) => {\r\n  //     let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n  //     while (\r\n  //       randomValue <= min ||\r\n  //       randomValue >= max ||\r\n  //       (lastValue && randomValue - lastValue > maxDiff)\r\n  //     ) {\r\n  //       randomValue = Math.floor(Math.random() * multiplier + 1);\r\n  //     }\r\n\r\n  //     lastValue = randomValue;\r\n\r\n  //     return { value: randomValue };\r\n  //   });\r\n  // }\r\n\r\n  var tooltip;\r\n  const CustomizedTooltip = ({ active, payload, label }) => {\r\n    console.log(\"active\", active);\r\n    console.log(\"payload\", payload);\r\n    console.log(\"label\", label);\r\n    console.log(\"tooltip\", tooltip);\r\n    if (!active || !tooltip) return null;\r\n    for (const bar of payload)\r\n      if (bar.dataKey === tooltip)\r\n        return (\r\n          <div\r\n            style={{\r\n              background: bar.color,\r\n              color: \"#fff\",\r\n              padding: \" 8px\",\r\n              borderRadius: \"16px\",\r\n            }}\r\n          >\r\n            {bar.name}\r\n            <br />\r\n            {bar.value.toFixed(2)}\r\n          </div>\r\n        );\r\n    return null;\r\n  };\r\n  const openDatepicker = () => {};\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Widget\r\n        bodyClass={classes.mainChartBody}\r\n        header={\r\n          <Grid item xs={12} className={classes.mainChartHeader}>\r\n            {/* <div className={classes.mainChartHeaderLabels}>\r\n              <div className={classes.mainChartHeaderLabel}>\r\n                <Dot color=\"warning\" />\r\n                <Typography className={classes.mainChartLegentElement}>\r\n                  Tablet\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.mainChartHeaderLabel}>\r\n                <Dot color=\"primary\" />\r\n                <Typography className={classes.mainChartLegentElement}>\r\n                  Mobile\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.mainChartHeaderLabel}>\r\n                <Dot color=\"secondary\" />\r\n                <Typography className={classes.mainChartLegentElement}>\r\n                  Desktop\r\n                </Typography>\r\n              </div>\r\n            </div> */}\r\n            <Grid>\r\n              <Select\r\n                className={classes.select}\r\n                value={mainChartState}\r\n                onChange={(e) => setMainChartState(e.target.value)}\r\n                input={\r\n                  <OutlinedInput\r\n                    labelWidth={0}\r\n                    classes={{\r\n                      notchedOutline: classes.mainChartSelectRoot,\r\n                      input: classes.mainChartSelect,\r\n                    }}\r\n                  />\r\n                }\r\n                autoWidth\r\n              >\r\n                <MenuItem value=\"daily\">روزانه</MenuItem>\r\n                <MenuItem value=\"weekly\">هفتگی</MenuItem>\r\n                <MenuItem value=\"monthly\">ماهیانه</MenuItem>\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid className={classes.leftHeader}>\r\n              <Grid>\r\n                <Typography\r\n                  variant=\"p\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  style={{ fontFamily: \"Shabnam\" }}\r\n                >\r\n                  تاریخ شروع\r\n                </Typography>\r\n              </Grid>\r\n              <Grid>\r\n                <Typography\r\n                  variant=\"p\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  style={{ fontFamily: \"Shabnam\" }}\r\n                  className={classes.date}\r\n                >\r\n                  1400/03/20\r\n                </Typography>\r\n              </Grid>\r\n              <Grid>\r\n                <img\r\n                  src=\"./assets/calender-svgrepo-com.svg\"\r\n                  onClick={openDatepicker}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n      >\r\n        {/* Diagram */}\r\n        <ResponsiveContainer width=\"100%\" minWidth={450} height={350}>\r\n          <ComposedChart\r\n            margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n            data={data}\r\n          >\r\n            <YAxis\r\n              tickMargin={32}\r\n              allowDataOverflow\r\n              domain={[0, 100]}\r\n              type=\"number\"\r\n              yAxisId=\"1\"\r\n              stroke=\"blue\"\r\n            />\r\n            <YAxis\r\n              tickMargin={32}\r\n              orientation=\"left\"\r\n              allowDataOverflow\r\n              domain={[0, 1000]}\r\n              type=\"number\"\r\n              stroke=\"red\"\r\n            />\r\n            <YAxis\r\n              tickMargin={32}\r\n              orientation=\"right\"\r\n              allowDataOverflow\r\n              domain={[0, 1000]}\r\n              type=\"number\"\r\n              yAxisId=\"3\"\r\n              stroke=\"green\"\r\n            />\r\n            {/* <Tooltip content={<CustomizedTooltip />} /> */}\r\n\r\n            <XAxis\r\n              // type=\"number\"\r\n              // ticks={[10, 20, 30 ,100]}\r\n              // domain={[10, 100]}\r\n              dataKey=\"week\"\r\n              tickFormatter={[]}\r\n              tick={{ fill: theme.palette.primary.main, fontSize: 14 }}\r\n              stroke={theme.palette.primary.main}\r\n              tickLine={false}\r\n            />\r\n            <Tooltip />\r\n            {/* {data.map((el) => {\r\n              console.log(el.total[\"monthly\"]);\r\n              return (\r\n                <Line\r\n                  type=\"natural\"\r\n                  // label={{ fill: \"red\", marginTop: \"16px\" }}\r\n                  dataKey=\"total[monthly]\"\r\n                  stroke={theme.palette.red.main}\r\n                  strokeWidth={2}\r\n                  name=\"رطوبت\"\r\n                  onMouseOver={() => (tooltip = \"mobile\")}\r\n                  dot={{\r\n                    stroke: theme.palette.primary.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.primary.main,\r\n                  }}\r\n                />\r\n              );\r\n            })} */}\r\n            {console.log(\"data.total\", data.total)}\r\n            {console.log(\"date\", date)}\r\n            <Line\r\n              type=\"natural\"\r\n              // label={{ fill: \"red\", marginTop: \"16px\" }}\r\n              dataKey=\"total[monthly]\"\r\n              stroke={theme.palette.blue.main}\r\n              strokeWidth={2}\r\n              name=\"رطوبت\"\r\n              onMouseOver={() => (tooltip = \"mobile\")}\r\n              dot={{\r\n                stroke: theme.palette.blue.dark,\r\n                strokeWidth: 2,\r\n                fill: theme.palette.blue.main,\r\n              }}\r\n            />\r\n            <Line\r\n              type=\"natural\"\r\n              // dataKey={data.total(mainChartState)}\r\n              stroke={theme.palette.green.main}\r\n              dataKey=\"total[daily]\"\r\n              strokeWidth={2}\r\n              name=\"وزن\"\r\n              onMouseOver={() => (tooltip = \"desktop\")}\r\n              dot={{\r\n                stroke: theme.palette.green.dark,\r\n                strokeWidth: 2,\r\n                fill: \"green\",\r\n              }}\r\n            />\r\n            <Line\r\n              // label\r\n              type=\"natural\"\r\n              dataKey=\"total[weekly]\"\r\n              stroke={theme.palette.red.main}\r\n              strokeWidth={2}\r\n              name=\"دما\"\r\n              onMouseOver={() => (tooltip = \"tablet\")}\r\n              dot={{\r\n                stroke: theme.palette.red.dark,\r\n                strokeWidth: 2,\r\n                fill: theme.palette.red.main,\r\n              }}\r\n            />\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n\r\n        <Grid item xs={12} className={classes.mainChartHeaderLabels}>\r\n          <div className={classes.mainChartHeaderLabel}>\r\n            <Dot color=\"blue\" className={classes.dot} />\r\n\r\n            <Typography className={classes.mainChartLegentElement}>\r\n              رطوبت\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.mainChartHeaderLabel}>\r\n            <Dot color=\"green\" className={classes.dot} />\r\n            <Typography className={classes.mainChartLegentElement}>\r\n              وزن\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.mainChartHeaderLabel}>\r\n            <Dot color=\"red\" className={classes.dot} />\r\n            <Typography className={classes.mainChartLegentElement}>\r\n              دما\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} style={{ borderRadius: \"8px\", marginTop: \"16px\" }}>\r\n          <TableDiagram />\r\n        </Grid>\r\n      </Widget>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Diagram;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Widget\\Widget.js",["843","844","845"],"import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\nimport Title from \"../Typography/Title/Title\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  Img,\r\n  color,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && { ...style }}>\r\n      <Paper\r\n        className={classes.paper}\r\n        classes={{\r\n          root: classnames(classes.widgetRoot, {\r\n            [classes.noWidgetShadow]: noWidgetShadow,\r\n          }),\r\n        }}\r\n      >\r\n        <div\r\n          className={classnames(classes.widgetHeader, {\r\n            [classes.noPadding]: noHeaderPadding,\r\n            [headerClass]: headerClass,\r\n          })}\r\n        >\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Grid item style={{ width: \"100%\"}}>\r\n                <Grid item xs={12} container alignItems={\"center\"}>\r\n                  <img src={Img}  className={classes.Img}/>\r\n                  <Title title={title} variant=\"p\"/>\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Login\\Style.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Chart\\Chart.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Support\\SupportMessage\\Style.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\AboutUsMain\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\JobUser\\styles.js",["846","847"],"import { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    fontFamily: \"Shabnam\",\r\n  },\r\n\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  Title: {\r\n    fontWeight: \"bold\",\r\n    marginTop: \"16px\",\r\n  },\r\n\r\n  subTitle: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\",\r\n    marginTop: \"8px\",\r\n  },\r\n\r\n  Divider1: {\r\n    marginTop: \"8px\",\r\n    width: \"100%\",\r\n  },\r\n  Divider2: {\r\n    margin: \"32px auto 0\",\r\n    width: \"100%\",\r\n  },\r\n  label: {\r\n    whiteSpace: \"nowrap\",\r\n    marginLeft: \"50px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    border: \"none\",\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Shabnam\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n  },\r\n  box2: {\r\n    width: \"100%\",\r\n    marginBottom: \"8px\",\r\n  },\r\n  Button1: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 26 ,115, 233)\",\r\n    color: \"#fff\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"16%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 26 ,115, 233)\",\r\n      borderWidth: 2,\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  Button2: {\r\n    fontFamily: \"Shabnam\",\r\n    cursor: \"pointer\",\r\n    border: \"none\",\r\n    padding: \"8px 0px\",\r\n    borderRadius: \"16px\",\r\n    backgroundColor: \"rgb( 255 255 255)\",\r\n\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"16px\",\r\n    width: \"16%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb( 255 255 255)\",\r\n      borderWidth: 2,\r\n      color: \"#000\",\r\n    },\r\n  },\r\n  inputText: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  TextField: {\r\n    width: \"50%\",\r\n    background: \"rgb( 244 244 244)\",\r\n    border: \"none\",\r\n    borderRadius: \"10px\",\r\n\r\n    \"& label.Mui-focused\": {\r\n      color: \"rgb( 26 ,115, 233) !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n        borderRadius: \"10px\",\r\n      },\r\n    },\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: \"32px\",\r\n    fontFamily: \"Shabnam\",\r\n    border: \"none\",\r\n    \"& label.Mui-focused\": {\r\n      border: \"5px solid red\",\r\n      color: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"2px solid red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n      },\r\n\r\n    \"&.Mui-focused fieldset\": {\r\n        borderRadius: \"10px\",\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n      },\r\n    },\r\n  },\r\n  inputDate: {\r\n    display: \"flex\",\r\n    height: \"40px\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: \"32px\",\r\n    fontFamily: \"Shabnam\",\r\n    border: \"none\",\r\n    \"& label.Mui-focused\": {\r\n      border: \"5px solid red\",\r\n      color: \"red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"2px solid red !important\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        border: \"none\",\r\n        borderRadius: \"10px\",\r\n        padding: \"0 !important\",\r\n      },\r\n\r\n      \"&.Mui-focused fieldset\": {\r\n        borderRadius: \"10px\",\r\n        border: \"2px solid rgb(255 ,176, 4) !important\",\r\n      },\r\n    },\r\n  },\r\n  inputSelect: {\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    height: \"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n    \"&\t.MuiSelect-outlined\": {\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&\t.MuiSelect-outlined\": {\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n\r\n  Datepicker: {\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    height: \"40px\",\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    boxShadow: \"0px 3px 6px rgba(0 ,0, 0, 0.16)\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    // height: \"40px\",\r\n    fontFamily: \"Shabnam\",\r\n    \"&\t.MuiSelect-outlined\": {\r\n      borderRadius: \"10px\",\r\n      height: \"40px\",\r\n    },\r\n    \"&\t.MuiSelect-outlined\": {\r\n      borderRadius: \"10px\",\r\n      height: \"40px\",\r\n    },\r\n  },\r\n\r\n  select: {\r\n    backgroundColor: \"rgb( 244, 244 ,244)\",\r\n    borderRadius: \"10px\",\r\n    \"&:before\": {\r\n      border: \"none\",\r\n      backgroundColor: \"#fff\",\r\n      outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:hover\": {\r\n      border: \"none\",\r\n      backgroundColor: \"#fff\",\r\n      outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:after\": {\r\n      border: \"none\",\r\n      backgroundColor: \"#fff\",\r\n      outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&:not(.Mui-disabled):hover::before\": {\r\n      border: \"none\",\r\n      backgroundColor: \"#fff\",\r\n      outline: \"2px solid red\",\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  icon: {\r\n    fill: \"green\",\r\n  },\r\n  text: {\r\n    border: \"none\",\r\n    backgroundColor: \"#fff\",\r\n    outline: \"2px solid red\",\r\n  },\r\n  outline: {\r\n    \"&:before\": {\r\n      borderColor: \"red\",\r\n    },\r\n    \"&:after\": {\r\n      borderColor: \"red\",\r\n    },\r\n  },\r\n  item: {\r\n    textDecoration: \"none\",\r\n    color: \"rgb( 227, 156, 0)\",\r\n  },\r\n  activeItem: {\r\n    background: \"#fff\",\r\n    padding: \"4px 16px\",\r\n    borderRadius: \"8px\",\r\n    color: \"#000\",\r\n    textDecoration: \"none\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 3px 6px 0px rgba(0,0,0,0.16)\",\r\n  },\r\n  TabHeader: {\r\n    backgroundColor: \"rgb( 255 ,242, 212)\",\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    height: \"50px\",\r\n    boxShadow:\r\n      \" rgba(0, 0, 0, 0.1) 0px 60px 100px -100px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset\",\r\n    color: \"rgb( 227, 156, 0)\",\r\n    fontWeight: \"bold\",\r\n    borderRadius: \"15px\",\r\n    fontSize: \"1rem\",\r\n    marginBottom: \"16px;\",\r\n    marginTop: \"16px\",\r\n  },\r\n  errorMessage: {\r\n    color: \"red\",\r\n  },\r\n  checkBox: {\r\n    margin: \"16px 32px 0\",\r\n  },\r\n  buttonBox: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\HiveStatus\\tableDiagram.js",["848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869"],"import MaterialTable from \"material-table\";\nimport React from \"react\";\nimport { DoneRounded, MinimizeRounded, VisibilityRounded } from \"@material-ui/icons\";\nfunction TableDiagram() {\n  const rowBackgroundColors = {\n    0: \"yellow\", // just for example, remove it if you don't need\n    1: \"rgb( 255 ,242, 212)\",\n  };\n  return (\n    <MaterialTable\n      columns={[\n        {\n          title: (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <p style={{ padding: \"0\", margin: \"0\" }}>تاریخ</p>\n            </div>\n          ),\n          field: \"date\",\n          headerStyle: {\n            backgroundColor: \"rgb( 255 ,242, 212)\",\n            color: \"#000\",\n          },\n    \n        },\n        {\n          title: (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <p style={{ padding: \"0\", margin: \"0\" }}>بازدید</p>\n              <div>\n                <img src=\"/assets/view-svgrepo-com.svg\" width=\"20px\" />\n              </div>\n            </div>\n          ),\n          field: \"visit\",\n          // cellStyle: {\n          //   backgroundColor: \"red\",\n          //   color: \"#FFF\",\n          // },\n\n          headerStyle: {\n            backgroundColor: \"rgb( 255 ,242, 212)\",\n            color: \"#000\",\n          },\n          cellStyle: {\n            textAlign: \"center\",\n        },\n          render: (row) => (\n            <div >\n              {row.visit ?<img src=\"/assets/check-svgrepo-com (2).svg\" width=\"20px\" style={{margin: \"0 10px\"}}/>:<img src=\"/assets/minus-svgrepo-com.svg\" width=\"20px\" style={{margin: \"0 10px\"}}/>}\n            </div>\n          ),\n        },\n        {\n          title: (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <p style={{ padding: \"0\", margin: \"0\" }}>تغذیه</p>\n              <div>\n                <img src=\"/assets/flower-svgrepo-com.svg\" />\n              </div>\n            </div>\n          ),\n          field: \"Nutrition\",\n          // cellStyle: {\n          //   backgroundColor: \"red\",\n          //   color: \"#FFF\",\n          // },\n\n          headerStyle: {\n            backgroundColor: \"rgb( 255 ,242, 212)\",\n            color: \"#000\"\n          },\n          render: (row) => (\n            <div>\n              {row.Nutrition ?<img src=\"/assets/check-svgrepo-com (2).svg\" width=\"20px\"/>:<img src=\"/assets/minus-svgrepo-com.svg\" width=\"20px\" style={{margin: \"0 10px\"}}/>}\n            </div>\n          ),\n        },\n        {\n          title: (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                whiteSpace: \"nowrap\"\n              }}\n            >\n              <p style={{ padding: \"0\", margin: \"0\" }}>صدای کندو</p>\n              <div>\n                <img src=\"/assets/flower-svgrepo-com.svg\" />\n              </div>\n            </div>\n          ),\n          field: \" soundOfHive\",\n          // cellStyle: {\n          //   backgroundColor: \"red\",\n          //   color: \"#FFF\",\n          // },\n\n          headerStyle: {\n            backgroundColor: \"rgb( 255 ,242, 212)\",\n            color: \"#000\",\n          },\n          render: (row) => (\n            <div >\n              {row.soundOfHive ?<img src=\"/assets/Group 11029.svg\" />:<img src=\"/assets/minus-svgrepo-com.svg\" width=\"20px\" style={{margin: \"0 20px\"}}/>}\n            </div>\n          ),\n        },\n        {\n          title: (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\", whiteSpace: \"nowrap\"\n              }}\n            >\n              <p style={{ padding: \"0\", margin: \"0\" }}>درب</p>\n              <div>\n                <img src=\"/assets/flower-svgrepo-com.svg\" />\n              </div>\n            </div>\n          ),\n          field: \"door\",\n          // cellStyle: {\n          //   backgroundColor: \"red\",\n          //   color: \"#FFF\",\n          // },\n\n          headerStyle: {\n            backgroundColor: \"rgb( 255 ,242, 212)\",\n            color: \"#000\",\n          },\n          render: (row) => (\n            <div >\n              {row.door ?<img src=\"/assets/check-svgrepo-com (2).svg\" width=\"20px\"/>:<img src=\"/assets/minus-svgrepo-com.svg\" width=\"20px\" style={{margin: \"0 10px\"}} />}\n            </div>\n          ),\n        },\n        {\n          title: (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\", whiteSpace: \"nowrap\"\n              }}\n            >\n              <p style={{ padding: \"0\", margin: \"0\" }}>تصویر</p>\n              <div>\n                <img src=\"/assets/flower-svgrepo-com.svg\" />\n              </div>\n            </div>\n          ),\n          field: \"picture\",\n          // cellStyle: {\n          //   backgroundColor: \"red\",\n          //   color: \"#FFF\",\n          // },\n\n          headerStyle: {\n            backgroundColor: \"rgb( 255 ,242, 212)\",\n            color: \"#000\",\n          },\n          render: (row) => (\n            <div >\n              {row.picture ?<img src=\"/assets/Group 11030.svg\" />:<img src=\"/assets/minus-svgrepo-com.svg\" width=\"20px\" style={{margin: \"0 10px\"}}  />}\n            </div>\n          ),\n        },\n        {\n          title: (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\", whiteSpace: \"nowrap\"\n              }}\n            >\n              <p style={{ padding: \"0\", margin: \"0\" }}>یادداشت صوتی</p>\n\n            </div>\n          ),\n          field: \"voiceNotes\",\n          // cellStyle: {\n          //   backgroundColor: \"red\",\n          //   color: \"#FFF\",\n          // },\n\n          headerStyle: {\n            backgroundColor: \"rgb( 255 ,242, 212)\",\n            color: \"#000\",\n          },\n          render: (row) => (\n            <div >\n              {row.voiceNotes ?<img src=\"/assets/Group 11029.svg\" />:<img src=\"/assets/check-svgrepo-com (2).svg\" width=\"20px\" style={{margin: \"0 10px\"}}/>}\n            </div>\n          ),\n        },\n        {\n          title: (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\", whiteSpace: \"nowrap\"\n              }}\n            >\n              <p style={{ padding: \"0\", margin: \"0\" }}>یادداشت متنی</p>\n\n            </div>\n          ),\n          field: \"textNotes\",\n          // cellStyle: {\n          //   backgroundColor: \"red\",\n          //   color: \"#FFF\",\n          // },\n\n          headerStyle: {\n            backgroundColor: \"rgb( 255 ,242, 212)\",\n            color: \"#000\",\n          },\n          render: (row) => (\n            <div >\n              {row.textNotes ?<img src=\"/assets/note-svgrepo-com.svg\" />:<img src=\"/assets/check-svgrepo-com (2).svg\" width=\"20px\" style={{margin: \"0 10px\"}}/>}\n            </div>\n          ),\n        },\n      ]}\n      data={[\n        {\n          date: \"1400/01/11\",\n          visit: 1,\n          Nutrition: 0,\n          soundOfHive: 0,\n          door: 1,\n          picture: 0,\n          voiceNotes: 1,\n          textNotes: 1,\n          \n        },\n        {\n          date: \"1400/01/12\",\n          visit: 0,\n          Nutrition: 0,\n          soundOfHive: 0,\n          door: 1,\n          picture: 1,\n          voiceNotes: 0,\n          textNotes: 0,\n          priority: 1,\n        },\n      ]}\n      options={{\n        headerStyle: {\n          backgroundColor: \"#01579b\",\n          color: \"#FFF\",\n        },\n        toolbar: false,\n        paging: false,\n        rowStyle: (rowData) => {\n          console.log(rowData);\n          return {\n            fontFamily: \"Mulish-Regular\",\n            backgroundColor: rowBackgroundColors[rowData.priority] ?? \"#fff\",\n          };\n        },\n      }}\n    />\n  );\n}\n\nexport default TableDiagram;\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Widget\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Layout\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\error\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Sidebar\\Sidebar.js",["870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888"],"import React, { useState, useEffect } from \"react\";\r\nimport { Divider, Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Menu as MenuIcon,\r\n  LocationCity,\r\n  TableChart,\r\n  Accessibility,\r\n  ArrowForwardRounded,\r\n\r\n} from \"@material-ui/icons\";\r\n\r\n\r\n\r\n\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport CalenderProject from \"../../pages/candoProject/CalenderProject/CalenderProject\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"خانه\" , link:\"/app/dashboard\", icon:<img src=\"/assets/house.png\"/>},\r\n\r\n  // { id: -4, label: \"زنبورستان\", link: \"/app/user\", icon:<img src=\"/assets/hive-svgrepo-com (1).svg\"/> },\r\n  { id: -4, label: \"زنبورستان\", link: \"/app/ApiaryList\", icon:<img src=\"/assets/hive-svgrepo-com (1).svg\"/> },\r\n\r\n  { id: -3, label: \"پشتیبانی\", link: \"/app/Support\", icon:<img src=\"/assets/customer-support-symbol-svgrepo-com-1.svg\"/>, \r\n  children: [\r\n    { label: \"پیام های من\", link: \"/app/Support\",color:\"secondary\" },\r\n    { label: \"پیام های پشتیبانی\", link: \"/app/SupportMessage\" },\r\n    { label: \"سوالات متداول\", link: \"/app/FrequentlyQuestions\"  },\r\n  ],\r\n},\r\n  {\r\n    id: -2,\r\n    label: \"تازه ها\",\r\n    link: \"/app/new\",\r\n    icon:<img src=\"/assets/megaphone-svgrepo-com.svg\"/>,\r\n  },\r\n  {\r\n    id: -1,\r\n    label: \"آموزش\",\r\n    link: \"/app/Education\",\r\n    icon:<img src=\"/assets/mortarboard-education-svgrepo-com-1.svg\"/>,\r\n  },\r\n  // { id: -5, label: \"محصولات\", link: \"/app/products\", icon:<img src=\"/assets/mortarboard-education-svgrepo-com-1.svg\"/>},\r\n  {\r\n    id: 1,\r\n    label: \"کاربران\",\r\n    link: \"/app/user\",\r\n    icon:<img src=\"/assets/usersSidebar.svg\"/>,\r\n  },\r\n  // {\r\n  //   id: 3,\r\n  //   label: \"تقویم کاری\",\r\n  //   link: \"/app/JobCalender\",\r\n  //   icon: <NotificationsIcon />,\r\n  // },\r\n\r\n  {\r\n    id: 3,\r\n    label: \"تقویم کاری\",\r\n    link: \"/app/JobCalender\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n\r\n  { id: 10, type: \"divider\"  ,backgroundColor:\"#fff\"},\r\n\r\n  {\r\n    id: 5,\r\n    label: \"درباره ما\",\r\n    link:\"/app/AboutUs\",\r\n    icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"تنظیمات\",\r\n    link: \"/app/setting\",\r\n    icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n  var layoutState = useLayoutState();\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\nconst [icon,setIcon]=useState(true)\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\nconst changeIcon=()=>{\r\n  setIcon(!icon)\r\n}\r\n  return (\r\n    <Drawer \r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div  />\r\n\r\n\r\n      <List className={classes.sidebarList}>\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}> \r\n          {icon?<ArrowForwardRounded \r\n          onClick={changeIcon}\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />:<ArrowBackIcon   onClick={changeIcon} classes={{\r\n            root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n          }}/>}\r\n        </IconButton>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n       {icon?<div className={classes.candoTopSidebar}> \r\n          <div className={classes.candoLogo}>\r\n            <img src=\"/assets/Component 24 – 53.svg\" alt=\"عکس زنبور\" width=\"50px\"/>\r\n          </div>\r\n          <div>\r\n            <h1 className={classes.candoTopSidebarTitle}>کندوان پلاس</h1>\r\n            <h2>مدیریت هوشمند زنبورستان</h2>\r\n          </div>\r\n        </div>:null} \r\n        <Divider style={\r\n          {backgroundColor:\"#fff\"}\r\n        }/>,\r\n\r\n\r\n\r\n\r\n        {structure.map((link) => (\r\n           \r\n          <SidebarLink\r\n          \r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\typography\\Typography.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Header\\Header.js",["889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link,\r\n  Avatar\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  KeyboardArrowDown,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\nادمین پنل\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            {/* <SearchIcon classes={{ root: classes.headerIcon }} /> */}\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.HeaderBarcode}>\r\n        <img src=\"/assets/qr-code.svg\" width=\"20%\"/>  اسکن بارکد</div>\r\n     <div className={classes.HeaderLeft}>\r\n      <div className={classes.HeaderLogo} >\r\n        <Avatar\r\n        style={{cursor:\"pointer\"}}\r\n         alt=\"Remy Sharp\" \r\n         src=\"/assets/HeaderProfile.svg\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon style={{cursor:\"pointer\"}} classes={{ root: classes.headerIcon }} />\r\n        </Avatar>\r\n         <KeyboardArrowDown    onClick={e => setProfileMenu(e.currentTarget)}/>\r\n      </div>\r\n         <Typography variant=\"p\" weight=\"medium\" className={classes.logotype}>\r\n             سلام شاهین!\r\n        </Typography>\r\n       </div> \r\n\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n          \r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"secondary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\Dashboard.js",["909","910","911","912","913","914","915","916","917"],"import React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport ApexLineChart from \"../charts/components/ApexLineChart\";\r\nimport BigStat2 from \"./components/BigStat/BigStat2\";\r\n// import MapBox from \"../../components/MapBox/MapBox\";\r\nimport Title from \"../../components/Typography/Title/Title\";\r\n\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport MapBox from \"../../components/MapBox/MapBox\";\r\nimport Calender from \"../candoProject/Calender/Calender\";\r\n\r\n// const GET_USER = gql`\r\n//   query {\r\n//     post(id: 14) {\r\n//       id\r\n//       title\r\n//       body\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport default function Dashboard(props) {\r\n  const classes = useStyles();\r\n  // const { loading, error, data, networkStatus, refetch } = useQuery(GET_USER, {\r\n  //   notifyOnNetworkStatusChange: true,\r\n  // });\r\n\r\n  // if (loading) return \"Loading...\";\r\n  // if (error) return `Error ${error.message}`;\r\n  // const {\r\n  //   post: { body, id, title },\r\n  // } = data;\r\n\r\n  // console.log(\"id\", id);\r\n  // console.log(\"title\", title);\r\n  // console.log(\"body\", body);\r\n\r\n  return (\r\n    <>\r\n      <Title title=\"نقشه\" variant=\"h6\" />\r\n\r\n      {/* map */}\r\n\r\n      <Grid item xs={12} className={classes.mapBox}>\r\n        <MapBox />\r\n      </Grid>\r\n\r\n      {/* second part */}\r\n\r\n      <Grid container spacing={3} className={classes.secondPart}>\r\n        <Grid item xs={12}  style={{display: \"flex\"}}>\r\n          <Grid item lg={3} md={4} sm={6} xs={12} >\r\n            <Widget\r\n              color=\"secondary\"\r\n              Img=\"/assets/hive-svgrepo-com (-1.svg\"\r\n              title=\"تعداد زنبورستان\"\r\n              upperTitle\r\n              style={{ fontWeight: 600,marginLeft: 30}}\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت خودم\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Widget\r\n              color=\"secondary\"\r\n              Img=\"/assets/hive-svgrepo-com (3).svg\"\r\n              title=\"تعداد کندو\"\r\n              upperTitle\r\n              style={{ fontWeight: 600,marginLeft: 30}}\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت خودم\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Widget\r\n              color=\"secondary\"\r\n              Img=\"/assets/Group 11039.svg\"\r\n              title=\"تعداد بازدید\"\r\n              upperTitle\r\n              style={{ fontWeight: 600,marginLeft: 15}}\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت خودم\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Widget\r\n              color=\"secondary\"\r\n              Img=\"/assets/power-svgrepo-com-1.svg\"\r\n              title=\"میانگین قدرت\"\r\n              upperTitle\r\n              style={{ fontWeight: 600,marginLeft: 15,marginRight:15}}\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت خودم\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={3} md={4} sm={6} xs={12}>\r\n            <Widget\r\n              color=\"secondary\"\r\n              Img=\"/assets/12425575071619191957.svg\"\r\n              title=\"تعداد کارها\"\r\n              upperTitle\r\n              style={{ fontWeight: 600,marginRight: 15}}\r\n              bodyClass={classes.fullHeightBody}\r\n              className={classes.card}\r\n            >\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت خودم\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                item\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={classes.firstTitleBox}\r\n              >\r\n                <Grid item>\r\n                  <Typography\r\n                    variant=\"p\"\r\n                    weight=\"Bold\"\r\n                    noWrap\r\n                    style={{ fontWeight: 600 }}\r\n                  >\r\n                    اکانت\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                    1\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* <Grid item lg={2} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            color=\"secondary\"\r\n            Img=\"/assets/hive-svgrepo-com (-1.svg\"\r\n            title=\"تعداد کارها\"\r\n            upperTitle\r\n            style={{ fontWeight: 600 }}\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              style={{ marginTop: \"30px\" }}\r\n            >\r\n              <Grid item>\r\n                <Typography\r\n                  variant=\"p\"\r\n                  weight=\"Bold\"\r\n                  noWrap\r\n                  style={{ fontWeight: 600 }}\r\n                >\r\n                  اکانت خودم\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                  1\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              style={{ marginTop: \"30px\" }}\r\n            >\r\n              <Grid item>\r\n                <Typography\r\n                  variant=\"p\"\r\n                  weight=\"Bold\"\r\n                  noWrap\r\n                  style={{ fontWeight: 600 }}\r\n                >\r\n                  اکانت\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"p\" weight=\"Bold\" noWrap>\r\n                  1\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid> */}\r\n\r\n        {/* calender */}\r\n        <Grid item lg={12} xs={12}>\r\n          <Title title=\"تقویم\" variant=\"h6\" />\r\n          <Calender />\r\n        </Grid>\r\n\r\n        {/* last part */}\r\n        <Grid\r\n          className={classes.Programs}\r\n          item\r\n          lg={12}\r\n          xs={12}\r\n          style={{ display: \"flex\" }}\r\n        >\r\n          <Grid className={classes.reminderJob} item lg={12} xs={12}>\r\n            <Title title=\"يادآوری کارها\" variant=\"h6\" />\r\n            {mock.bigState.map((stat, index) => (\r\n              <Grid item lg={12} xs={12} style={{ display: \"flex\" }}>\r\n                <Grid\r\n                  item\r\n                  lg={12}\r\n                  md={12}\r\n                  sm={12}\r\n                  xs={12}\r\n                  key={stat.product}\r\n                  style={{ marginTop: \"16px\" }}\r\n                >\r\n                  <BigStat2 {...stat} />\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <Grid className={classes.workDone} item lg={12} xs={12}>\r\n            <Title title=\"کارهای انجام شده\" variant=\"h6\" />\r\n            {mock.DoneJob.map((stat, index) => (\r\n              <Grid item lg={12} xs={12} style={{ display: \"flex\" }}>\r\n                <Grid\r\n                  item\r\n                  lg={12}\r\n                  md={12}\r\n                  sm={12}\r\n                  xs={12}\r\n                  key={index}\r\n                  style={{ marginTop: \"16px\" }}\r\n                >\r\n                  <BigStat {...stat} />\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Sidebar\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\typography\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Header\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\mock.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Calender\\Calender.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",["918","919","920","921","922","923","924","925","926","927","928","929","930"],"import React, { useState } from \"react\";\r\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar } from \"recharts\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../../components/Widget\";\r\nimport { Typography } from \"../../../../components/Wrappers\";\r\nimport Bardia from \"../../../../components/Form/CategoryForm/Bardiaadd\";\r\n\r\nexport default function BigStat(props) {\r\n  const { product, total, color, registrations, bounce } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  // local\r\n  const [value, setValue] = useState(\"daily\");\r\n  return (\r\n    <Widget\r\n      header={\r\n  \r\n          <Grid container   alignItems=\"center\" justifyContent=\"space-between\">\r\n   <div>  \r\n          <Typography variant=\"h6\">{product}</Typography>\r\n          <div style={{marginTop:\"16px\" ,color:\"rgb( 102, 103, 104)\"}} >\r\n           <Typography variant=\"p\"   colorBrightness=\"secondary\" >\r\n           {registrations[value].value}\r\n          </Typography></div>\r\n   </div>     \r\n    <div style={{display:\"flex\"}\r\n    }>\r\n    <Typography variant=\"p\" style={{fontWeight:\"bold\"}}  className={registrations[value].profit?classes.profitArrowGreen:classes.profitArrowDangerRed}>{registrations[value].title2}</Typography>\r\n      \r\n            {/* <Typography variant=\"h6\" className={classnames(classes.profitArrow, {\r\n                [!registrations[value].profit]: classes.profitArrowDanger,\r\n              })}>{console.log(registrations[value].profit)}ss</Typography> */}\r\n    \r\n    </div>\r\n          </Grid>\r\n\r\n      }\r\n  \r\n    />\r\n\r\n\r\n\r\n\r\n      \r\n  \r\n  );\r\n}\r\n\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\BigStat2.js",["931","932","933","934","935","936","937","938","939","940","941","942","943"],"import React, { useState } from \"react\";\r\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar } from \"recharts\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../../components/Widget\";\r\nimport { Typography } from \"../../../../components/Wrappers\";\r\n\r\nexport default function BigStat2(props) {\r\n  const { product, total, color, registrations, bounce ,icon} = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  // local\r\n  const [value, setValue] = useState(\"daily\");\r\n\r\n  return (\r\n    <Widget\r\n      header={\r\n  \r\n          <Grid container   alignItems=\"center\" justifyContent=\"space-between\">\r\n     <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>  \r\n         <img src={icon}/>\r\n      <div style={{marginRight:\"32px\"}}>\r\n        \r\n          <Typography variant=\"h6\">{product}</Typography>\r\n          <div style={{marginTop:\"16px\" ,color:\"rgb( 102, 103, 104)\"}} >\r\n      </div> \r\n          <Typography variant=\"p\"   colorBrightness=\"secondary\" >\r\n           {registrations[value].value}\r\n          </Typography></div>\r\n    </div>     \r\n    <div style={{display:\"flex\"}\r\n    }>\r\n    <Typography variant=\"p\" style={{color:\"#fff\"}}  className={registrations[value].profit?classes.profitArrow:classes.profitArrowDanger}>{registrations[value].title2}</Typography>\r\n\r\n    \r\n    </div>\r\n          </Grid>\r\n\r\n      }\r\n  \r\n    />\r\n\r\n\r\n\r\n\r\n      \r\n  \r\n  );\r\n}\r\n\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\UserAvatar\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Calender\\dayStyle.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Calender\\buildCalender.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Calender\\CalenderHeader.js",["944"],"import { ArrowBackIosRounded, ArrowForwardIosRounded, ArrowRightTwoTone } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction CalenderHeader({ value, setValue }) {\r\n    function currMnthName() {\r\n        return value.format(\"MMMM\");\r\n      }\r\n      function currYear() {\r\n        return value.format(\"YYYY\");\r\n      }\r\n      function prevDay() {\r\n        return value.clone().subtract(1, \"day\");\r\n      }\r\n      function nextDay() {\r\n        return value.clone().add(1, \"day\");\r\n      }\r\n      const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.Header}>\r\n      <div className={classes.arrow} onClick={() => setValue(prevDay())}>\r\n        <ArrowForwardIosRounded/>\r\n      </div>\r\n      <div>\r\n        {currMnthName()}\r\n        {currYear()}\r\n      </div>\r\n      <div className={classes.arrow} onClick={() => setValue(nextDay())}>\r\n      <ArrowBackIosRounded/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalenderHeader;\r\n","D:\\پروژه کندو\\CandoProject-master\\src\\pages\\candoProject\\Calender\\styles.js",[],"D:\\پروژه کندو\\CandoProject-master\\src\\components\\Form\\CategoryForm\\Bardiaadd.js",["945","946","947"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik, useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from 'axios';\n\n\n\nconst useStyles = makeStyles({\n  Button: {\n    marginTop: \"8px\",\n    fontFamily: \"Shabnam\",\n    cursor: \"pointer\",\n  },\n});\nconst FILE_SIZE = 10000*10000;\n    const SUPPORTED_FORMATS = [\n      \"image/jpg\",\n      \"image/jpeg\",\n      \"image/gif\",\n      \"image/png\"\n    ];\n    const validationSchema = yup.object({\n  name:yup\n  .string('Enter your name')\n  .min(2, 'name should be of minimum 2 characters length')\n  .required('name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n  videoFile: yup\n    .mixed()\n    .required(\"لطفا یک فایل انتخاب کنید\")\n    .test(\n      \"fileFormat\",\n      \"این فرمت از فایل پشتیبانی نمیشود\",\n      value => value && SUPPORTED_FORMATS.includes(value?.type)\n    )\n\n    .test(\n      \"fileSize\",\n      \"قایل انتخابی حجم زیادی دارد\",\n      (value) => {\n        console.log(\"vlaue\",value?.size)\n        return value && value?.size <= FILE_SIZE\n      }\n    )\n    \n});\n\nconst Bardia = () => {\n  const[upload,setUpload]=useState()\n\n  const classes = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      // id:\"\",\n      name:\"\",\n      email: 'foobar@example.com',\n      password: 'foobar',\n      videoFile:null,\n    },\n    validationSchema: validationSchema,\n    onSubmit:async (values) => {\n      let formData=new FormData();\n      formData.append(\"name\",values.name)\n      formData.append(\"email\",values.email)\n      formData.append(\"password\",values.password)\n      formData.append(\"videoFile\",values.videoFile.name)\n      formData.append(\"formData\",formData)\n      // const res=await axios.post(\"url\",{body:formData})\n      console.log(\"1\",formData.get(\"name\"))\n      console.log(\"2\",formData.get(\"email\"))\n      console.log(\"3\",formData.get(\"password\"))\n      console.log(\"4\",formData.get(\"videoFile\"))\n      console.log(\"5\",...formData)\n      console.log(\"submit\",values)\n         alert(JSON.stringify(values, null, 2));   alert(\"from submitted!\")\n    },\n  });\n  const fileSelectedHandler=(e)=>{\n    setUpload(e.target.files[0])\n    formik.values.videoFile=upload\n  }\n  const fileUploadHandler=()=>{\n    const fd=new FormData();\n\n    // console.log(upload)\n    fd.append(\"image\",upload,upload.name)\n    console.log(...fd)\n    console.log(formik.values)\n    formik.values.videoFile=upload\n\n  }\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        {console.log(\"formik\",formik)}\n     \n      <TextField\n          fullWidth\n          id=\"name\"\n          variant=\"outlined\"\n          name=\"name\"\n          label=\"نام زیر صنعت\"\n          type=\"text\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n         <TextField\n       \n          variant=\"outlined\"\n          fullWidth\n          id=\"videoFile\"\n          type=\"file\"\n          name=\"videoFile\"\n          label=\"عکس\"\n          placeholder=\"asdasdasd\"\n          // onChange={fileSelectedHandler}\n     \n          onChange={(e)=>fileSelectedHandler(e)}\n          margin=\"dense\"\n          inputProps={{ style: { fontSize: 16 } }} // font size of input text\n          InputLabelProps={{\n            style: { fontSize: \"1rem\", fontFamily: \"Shabnam\" },\n          }} \n          error={formik.touched.videoFile && Boolean(formik.errors.videoFile)}\n          helperText={formik.touched.videoFile && formik.errors.videoFile}\n        />\n         <Button\n          className={classes.Button}\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"button\"\n          onClick={fileUploadHandler}\n          disabled={formik.values.videoFile===null}\n        >\n          upload\n        </Button>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        \n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Bardia;",{"ruleId":"948","severity":1,"message":"949","line":2,"column":47,"nodeType":"950","messageId":"951","endLine":2,"endColumn":53},{"ruleId":"948","severity":1,"message":"952","line":16,"column":10,"nodeType":"950","messageId":"951","endLine":16,"endColumn":24},{"ruleId":"948","severity":1,"message":"953","line":25,"column":11,"nodeType":"950","messageId":"951","endLine":25,"endColumn":15},{"ruleId":"948","severity":1,"message":"954","line":25,"column":17,"nodeType":"950","messageId":"951","endLine":25,"endColumn":24},{"ruleId":"948","severity":1,"message":"955","line":27,"column":9,"nodeType":"950","messageId":"951","endLine":27,"endColumn":21},{"ruleId":"956","replacedBy":"957"},{"ruleId":"958","replacedBy":"959"},{"ruleId":"948","severity":1,"message":"960","line":4,"column":10,"nodeType":"950","messageId":"951","endLine":4,"endColumn":18},{"ruleId":"948","severity":1,"message":"961","line":3,"column":3,"nodeType":"950","messageId":"951","endLine":3,"endColumn":7},{"ruleId":"948","severity":1,"message":"962","line":7,"column":3,"nodeType":"950","messageId":"951","endLine":7,"endColumn":7},{"ruleId":"948","severity":1,"message":"963","line":8,"column":3,"nodeType":"950","messageId":"951","endLine":8,"endColumn":6},{"ruleId":"948","severity":1,"message":"964","line":10,"column":3,"nodeType":"950","messageId":"951","endLine":10,"endColumn":7},{"ruleId":"948","severity":1,"message":"965","line":13,"column":8,"nodeType":"950","messageId":"951","endLine":13,"endColumn":18},{"ruleId":"948","severity":1,"message":"966","line":19,"column":8,"nodeType":"950","messageId":"951","endLine":19,"endColumn":12},{"ruleId":"948","severity":1,"message":"967","line":20,"column":8,"nodeType":"950","messageId":"951","endLine":20,"endColumn":14},{"ruleId":"948","severity":1,"message":"968","line":21,"column":10,"nodeType":"950","messageId":"951","endLine":21,"endColumn":19},{"ruleId":"948","severity":1,"message":"969","line":23,"column":27,"nodeType":"950","messageId":"951","endLine":23,"endColumn":36},{"ruleId":"948","severity":1,"message":"970","line":24,"column":19,"nodeType":"950","messageId":"951","endLine":24,"endColumn":29},{"ruleId":"948","severity":1,"message":"971","line":27,"column":8,"nodeType":"950","messageId":"951","endLine":27,"endColumn":13},{"ruleId":"948","severity":1,"message":"972","line":32,"column":9,"nodeType":"950","messageId":"951","endLine":32,"endColumn":16},{"ruleId":"948","severity":1,"message":"973","line":39,"column":9,"nodeType":"950","messageId":"951","endLine":39,"endColumn":20},{"ruleId":"948","severity":1,"message":"974","line":51,"column":5,"nodeType":"950","messageId":"951","endLine":51,"endColumn":12},{"ruleId":"948","severity":1,"message":"961","line":3,"column":3,"nodeType":"950","messageId":"951","endLine":3,"endColumn":7},{"ruleId":"948","severity":1,"message":"962","line":7,"column":3,"nodeType":"950","messageId":"951","endLine":7,"endColumn":7},{"ruleId":"948","severity":1,"message":"963","line":8,"column":3,"nodeType":"950","messageId":"951","endLine":8,"endColumn":6},{"ruleId":"948","severity":1,"message":"964","line":10,"column":3,"nodeType":"950","messageId":"951","endLine":10,"endColumn":7},{"ruleId":"948","severity":1,"message":"965","line":13,"column":8,"nodeType":"950","messageId":"951","endLine":13,"endColumn":18},{"ruleId":"948","severity":1,"message":"968","line":21,"column":10,"nodeType":"950","messageId":"951","endLine":21,"endColumn":19},{"ruleId":"948","severity":1,"message":"969","line":23,"column":27,"nodeType":"950","messageId":"951","endLine":23,"endColumn":36},{"ruleId":"948","severity":1,"message":"970","line":24,"column":19,"nodeType":"950","messageId":"951","endLine":24,"endColumn":29},{"ruleId":"948","severity":1,"message":"975","line":27,"column":10,"nodeType":"950","messageId":"951","endLine":27,"endColumn":13},{"ruleId":"948","severity":1,"message":"976","line":27,"column":15,"nodeType":"950","messageId":"951","endLine":27,"endColumn":26},{"ruleId":"948","severity":1,"message":"977","line":35,"column":10,"nodeType":"950","messageId":"951","endLine":35,"endColumn":20},{"ruleId":"948","severity":1,"message":"978","line":36,"column":21,"nodeType":"950","messageId":"951","endLine":36,"endColumn":33},{"ruleId":"948","severity":1,"message":"979","line":42,"column":9,"nodeType":"950","messageId":"951","endLine":42,"endColumn":21},{"ruleId":"948","severity":1,"message":"980","line":44,"column":9,"nodeType":"950","messageId":"951","endLine":44,"endColumn":21},{"ruleId":"948","severity":1,"message":"974","line":52,"column":5,"nodeType":"950","messageId":"951","endLine":52,"endColumn":12},{"ruleId":"948","severity":1,"message":"981","line":58,"column":10,"nodeType":"950","messageId":"951","endLine":58,"endColumn":11},{"ruleId":"948","severity":1,"message":"982","line":58,"column":13,"nodeType":"950","messageId":"951","endLine":58,"endColumn":25},{"ruleId":"948","severity":1,"message":"983","line":58,"column":27,"nodeType":"950","messageId":"951","endLine":58,"endColumn":42},{"ruleId":"948","severity":1,"message":"961","line":3,"column":3,"nodeType":"950","messageId":"951","endLine":3,"endColumn":7},{"ruleId":"948","severity":1,"message":"984","line":4,"column":3,"nodeType":"950","messageId":"951","endLine":4,"endColumn":19},{"ruleId":"948","severity":1,"message":"962","line":7,"column":3,"nodeType":"950","messageId":"951","endLine":7,"endColumn":7},{"ruleId":"948","severity":1,"message":"963","line":8,"column":3,"nodeType":"950","messageId":"951","endLine":8,"endColumn":6},{"ruleId":"948","severity":1,"message":"964","line":10,"column":3,"nodeType":"950","messageId":"951","endLine":10,"endColumn":7},{"ruleId":"948","severity":1,"message":"968","line":13,"column":10,"nodeType":"950","messageId":"951","endLine":13,"endColumn":19},{"ruleId":"948","severity":1,"message":"969","line":14,"column":27,"nodeType":"950","messageId":"951","endLine":14,"endColumn":36},{"ruleId":"948","severity":1,"message":"970","line":15,"column":19,"nodeType":"950","messageId":"951","endLine":15,"endColumn":29},{"ruleId":"948","severity":1,"message":"954","line":29,"column":11,"nodeType":"950","messageId":"951","endLine":29,"endColumn":18},{"ruleId":"948","severity":1,"message":"979","line":38,"column":7,"nodeType":"950","messageId":"951","endLine":38,"endColumn":19},{"ruleId":"948","severity":1,"message":"974","line":55,"column":5,"nodeType":"950","messageId":"951","endLine":55,"endColumn":12},{"ruleId":"948","severity":1,"message":"985","line":2,"column":8,"nodeType":"950","messageId":"951","endLine":2,"endColumn":13},{"ruleId":"948","severity":1,"message":"986","line":22,"column":8,"nodeType":"950","messageId":"951","endLine":22,"endColumn":13},{"ruleId":"948","severity":1,"message":"987","line":26,"column":8,"nodeType":"950","messageId":"951","endLine":26,"endColumn":13},{"ruleId":"948","severity":1,"message":"988","line":27,"column":8,"nodeType":"950","messageId":"951","endLine":27,"endColumn":22},{"ruleId":"948","severity":1,"message":"989","line":29,"column":8,"nodeType":"950","messageId":"951","endLine":29,"endColumn":23},{"ruleId":"948","severity":1,"message":"990","line":32,"column":8,"nodeType":"950","messageId":"951","endLine":32,"endColumn":23},{"ruleId":"948","severity":1,"message":"991","line":33,"column":8,"nodeType":"950","messageId":"951","endLine":33,"endColumn":19},{"ruleId":"948","severity":1,"message":"992","line":3,"column":8,"nodeType":"950","messageId":"951","endLine":3,"endColumn":17},{"ruleId":"948","severity":1,"message":"993","line":15,"column":16,"nodeType":"950","messageId":"951","endLine":15,"endColumn":23},{"ruleId":"948","severity":1,"message":"994","line":1,"column":42,"nodeType":"950","messageId":"951","endLine":1,"endColumn":52},{"ruleId":"948","severity":1,"message":"995","line":3,"column":8,"nodeType":"950","messageId":"951","endLine":3,"endColumn":14},{"ruleId":"948","severity":1,"message":"993","line":8,"column":16,"nodeType":"950","messageId":"951","endLine":8,"endColumn":23},{"ruleId":"948","severity":1,"message":"996","line":76,"column":10,"nodeType":"950","messageId":"951","endLine":76,"endColumn":25},{"ruleId":"948","severity":1,"message":"997","line":77,"column":10,"nodeType":"950","messageId":"951","endLine":77,"endColumn":16},{"ruleId":"948","severity":1,"message":"998","line":83,"column":10,"nodeType":"950","messageId":"951","endLine":83,"endColumn":21},{"ruleId":"948","severity":1,"message":"999","line":83,"column":23,"nodeType":"950","messageId":"951","endLine":83,"endColumn":38},{"ruleId":"948","severity":1,"message":"1000","line":2,"column":10,"nodeType":"950","messageId":"951","endLine":2,"endColumn":20},{"ruleId":"948","severity":1,"message":"1001","line":3,"column":10,"nodeType":"950","messageId":"951","endLine":3,"endColumn":16},{"ruleId":"948","severity":1,"message":"994","line":3,"column":60,"nodeType":"950","messageId":"951","endLine":3,"endColumn":70},{"ruleId":"948","severity":1,"message":"1002","line":4,"column":8,"nodeType":"950","messageId":"951","endLine":4,"endColumn":17},{"ruleId":"948","severity":1,"message":"995","line":5,"column":8,"nodeType":"950","messageId":"951","endLine":5,"endColumn":14},{"ruleId":"948","severity":1,"message":"1003","line":7,"column":8,"nodeType":"950","messageId":"951","endLine":7,"endColumn":13},{"ruleId":"948","severity":1,"message":"1004","line":10,"column":3,"nodeType":"950","messageId":"951","endLine":10,"endColumn":22},{"ruleId":"948","severity":1,"message":"1005","line":11,"column":3,"nodeType":"950","messageId":"951","endLine":11,"endColumn":16},{"ruleId":"948","severity":1,"message":"1006","line":12,"column":3,"nodeType":"950","messageId":"951","endLine":12,"endColumn":12},{"ruleId":"948","severity":1,"message":"1007","line":13,"column":3,"nodeType":"950","messageId":"951","endLine":13,"endColumn":12},{"ruleId":"948","severity":1,"message":"1008","line":14,"column":3,"nodeType":"950","messageId":"951","endLine":14,"endColumn":7},{"ruleId":"948","severity":1,"message":"1009","line":15,"column":3,"nodeType":"950","messageId":"951","endLine":15,"endColumn":7},{"ruleId":"948","severity":1,"message":"1010","line":16,"column":3,"nodeType":"950","messageId":"951","endLine":16,"endColumn":11},{"ruleId":"948","severity":1,"message":"1011","line":17,"column":3,"nodeType":"950","messageId":"951","endLine":17,"endColumn":6},{"ruleId":"948","severity":1,"message":"1012","line":18,"column":3,"nodeType":"950","messageId":"951","endLine":18,"endColumn":7},{"ruleId":"948","severity":1,"message":"1013","line":19,"column":3,"nodeType":"950","messageId":"951","endLine":19,"endColumn":8},{"ruleId":"948","severity":1,"message":"1014","line":20,"column":3,"nodeType":"950","messageId":"951","endLine":20,"endColumn":8},{"ruleId":"948","severity":1,"message":"949","line":23,"column":20,"nodeType":"950","messageId":"951","endLine":23,"endColumn":26},{"ruleId":"948","severity":1,"message":"968","line":27,"column":3,"nodeType":"950","messageId":"951","endLine":27,"endColumn":12},{"ruleId":"948","severity":1,"message":"1001","line":1,"column":10,"nodeType":"950","messageId":"951","endLine":1,"endColumn":16},{"ruleId":"1015","severity":1,"message":"1016","line":110,"column":15,"nodeType":"1017","endLine":110,"endColumn":80},{"ruleId":"1015","severity":1,"message":"1016","line":140,"column":15,"nodeType":"1017","endLine":140,"endColumn":74},{"ruleId":"1015","severity":1,"message":"1016","line":170,"column":15,"nodeType":"1017","endLine":170,"endColumn":76},{"ruleId":"1015","severity":1,"message":"1016","line":200,"column":15,"nodeType":"1017","endLine":200,"endColumn":65},{"ruleId":"948","severity":1,"message":"1018","line":21,"column":24,"nodeType":"950","messageId":"951","endLine":21,"endColumn":34},{"ruleId":"948","severity":1,"message":"1019","line":30,"column":8,"nodeType":"950","messageId":"951","endLine":30,"endColumn":14},{"ruleId":"948","severity":1,"message":"1020","line":2,"column":3,"nodeType":"950","messageId":"951","endLine":2,"endColumn":9},{"ruleId":"948","severity":1,"message":"1021","line":4,"column":3,"nodeType":"950","messageId":"951","endLine":4,"endColumn":16},{"ruleId":"948","severity":1,"message":"1022","line":5,"column":3,"nodeType":"950","messageId":"951","endLine":5,"endColumn":16},{"ruleId":"948","severity":1,"message":"1023","line":6,"column":3,"nodeType":"950","messageId":"951","endLine":6,"endColumn":20},{"ruleId":"948","severity":1,"message":"1024","line":7,"column":3,"nodeType":"950","messageId":"951","endLine":7,"endColumn":14},{"ruleId":"948","severity":1,"message":"949","line":12,"column":20,"nodeType":"950","messageId":"951","endLine":12,"endColumn":26},{"ruleId":"948","severity":1,"message":"1025","line":15,"column":3,"nodeType":"950","messageId":"951","endLine":15,"endColumn":7},{"ruleId":"948","severity":1,"message":"968","line":17,"column":3,"nodeType":"950","messageId":"951","endLine":17,"endColumn":12},{"ruleId":"948","severity":1,"message":"1026","line":40,"column":9,"nodeType":"950","messageId":"951","endLine":40,"endColumn":30},{"ruleId":"948","severity":1,"message":"993","line":32,"column":16,"nodeType":"950","messageId":"951","endLine":32,"endColumn":23},{"ruleId":"948","severity":1,"message":"1020","line":9,"column":5,"nodeType":"950","messageId":"951","endLine":9,"endColumn":11},{"ruleId":"948","severity":1,"message":"964","line":11,"column":5,"nodeType":"950","messageId":"951","endLine":11,"endColumn":9},{"ruleId":"948","severity":1,"message":"961","line":12,"column":5,"nodeType":"950","messageId":"951","endLine":12,"endColumn":9},{"ruleId":"948","severity":1,"message":"1027","line":13,"column":5,"nodeType":"950","messageId":"951","endLine":13,"endColumn":15},{"ruleId":"948","severity":1,"message":"1028","line":17,"column":5,"nodeType":"950","messageId":"951","endLine":17,"endColumn":11},{"ruleId":"948","severity":1,"message":"994","line":19,"column":5,"nodeType":"950","messageId":"951","endLine":19,"endColumn":15},{"ruleId":"948","severity":1,"message":"1029","line":21,"column":19,"nodeType":"950","messageId":"951","endLine":21,"endColumn":27},{"ruleId":"948","severity":1,"message":"1002","line":22,"column":10,"nodeType":"950","messageId":"951","endLine":22,"endColumn":19},{"ruleId":"948","severity":1,"message":"971","line":23,"column":10,"nodeType":"950","messageId":"951","endLine":23,"endColumn":15},{"ruleId":"948","severity":1,"message":"1000","line":24,"column":12,"nodeType":"950","messageId":"951","endLine":24,"endColumn":22},{"ruleId":"948","severity":1,"message":"1030","line":27,"column":12,"nodeType":"950","messageId":"951","endLine":27,"endColumn":18},{"ruleId":"948","severity":1,"message":"1031","line":27,"column":34,"nodeType":"950","messageId":"951","endLine":27,"endColumn":42},{"ruleId":"948","severity":1,"message":"1032","line":29,"column":27,"nodeType":"950","messageId":"951","endLine":29,"endColumn":40},{"ruleId":"948","severity":1,"message":"1033","line":30,"column":10,"nodeType":"950","messageId":"951","endLine":30,"endColumn":24},{"ruleId":"948","severity":1,"message":"1034","line":31,"column":10,"nodeType":"950","messageId":"951","endLine":31,"endColumn":19},{"ruleId":"948","severity":1,"message":"1035","line":36,"column":10,"nodeType":"950","messageId":"951","endLine":36,"endColumn":23},{"ruleId":"948","severity":1,"message":"1036","line":37,"column":10,"nodeType":"950","messageId":"951","endLine":37,"endColumn":26},{"ruleId":"948","severity":1,"message":"1037","line":38,"column":10,"nodeType":"950","messageId":"951","endLine":38,"endColumn":17},{"ruleId":"948","severity":1,"message":"949","line":41,"column":22,"nodeType":"950","messageId":"951","endLine":41,"endColumn":28},{"ruleId":"948","severity":1,"message":"1038","line":43,"column":5,"nodeType":"950","messageId":"951","endLine":43,"endColumn":12},{"ruleId":"948","severity":1,"message":"1039","line":44,"column":5,"nodeType":"950","messageId":"951","endLine":44,"endColumn":18},{"ruleId":"948","severity":1,"message":"1040","line":54,"column":12,"nodeType":"950","messageId":"951","endLine":54,"endColumn":19},{"ruleId":"948","severity":1,"message":"1041","line":74,"column":11,"nodeType":"950","messageId":"951","endLine":74,"endColumn":21},{"ruleId":"948","severity":1,"message":"1042","line":77,"column":11,"nodeType":"950","messageId":"951","endLine":77,"endColumn":25},{"ruleId":"1015","severity":1,"message":"1016","line":240,"column":17,"nodeType":"1017","endLine":240,"endColumn":64},{"ruleId":"1015","severity":1,"message":"1016","line":242,"column":17,"nodeType":"1017","endLine":242,"endColumn":54},{"ruleId":"1015","severity":1,"message":"1016","line":330,"column":31,"nodeType":"1017","endLine":330,"endColumn":107},{"ruleId":"1015","severity":1,"message":"1016","line":350,"column":31,"nodeType":"1017","endLine":350,"endColumn":111},{"ruleId":"948","severity":1,"message":"1043","line":377,"column":11,"nodeType":"950","messageId":"951","endLine":377,"endColumn":14},{"ruleId":"948","severity":1,"message":"1044","line":396,"column":11,"nodeType":"950","messageId":"951","endLine":396,"endColumn":23},{"ruleId":"948","severity":1,"message":"1045","line":422,"column":11,"nodeType":"950","messageId":"951","endLine":422,"endColumn":14},{"ruleId":"1046","severity":1,"message":"1047","line":441,"column":11,"nodeType":"1048","messageId":"1049","endLine":469,"endColumn":13},{"ruleId":"1050","severity":1,"message":"1051","line":463,"column":13,"nodeType":"1052","messageId":"1053","endLine":463,"endColumn":17},{"ruleId":"1046","severity":1,"message":"1047","line":598,"column":18,"nodeType":"1048","messageId":"1049","endLine":598,"endColumn":49},{"ruleId":"1046","severity":1,"message":"1047","line":617,"column":18,"nodeType":"1048","messageId":"1049","endLine":617,"endColumn":49},{"ruleId":"1046","severity":1,"message":"1047","line":636,"column":18,"nodeType":"1048","messageId":"1049","endLine":636,"endColumn":49},{"ruleId":"1015","severity":1,"message":"1016","line":723,"column":31,"nodeType":"1017","endLine":723,"endColumn":107},{"ruleId":"1015","severity":1,"message":"1016","line":743,"column":31,"nodeType":"1017","endLine":743,"endColumn":111},{"ruleId":"1015","severity":1,"message":"1016","line":761,"column":19,"nodeType":"1017","endLine":773,"endColumn":21},{"ruleId":"1015","severity":1,"message":"1016","line":797,"column":19,"nodeType":"1017","endLine":800,"endColumn":21},{"ruleId":"1015","severity":1,"message":"1016","line":845,"column":71,"nodeType":"1017","endLine":845,"endColumn":113},{"ruleId":"1015","severity":1,"message":"1016","line":846,"column":67,"nodeType":"1017","endLine":846,"endColumn":111},{"ruleId":"948","severity":1,"message":"1054","line":1,"column":23,"nodeType":"950","messageId":"951","endLine":1,"endColumn":30},{"ruleId":"948","severity":1,"message":"994","line":1,"column":56,"nodeType":"950","messageId":"951","endLine":1,"endColumn":66},{"ruleId":"948","severity":1,"message":"949","line":7,"column":22,"nodeType":"950","messageId":"951","endLine":7,"endColumn":28},{"ruleId":"948","severity":1,"message":"1025","line":9,"column":5,"nodeType":"950","messageId":"951","endLine":9,"endColumn":9},{"ruleId":"948","severity":1,"message":"1038","line":9,"column":10,"nodeType":"950","messageId":"951","endLine":9,"endColumn":17},{"ruleId":"948","severity":1,"message":"1037","line":13,"column":8,"nodeType":"950","messageId":"951","endLine":13,"endColumn":15},{"ruleId":"948","severity":1,"message":"1055","line":15,"column":8,"nodeType":"950","messageId":"951","endLine":15,"endColumn":21},{"ruleId":"948","severity":1,"message":"1056","line":16,"column":8,"nodeType":"950","messageId":"951","endLine":16,"endColumn":14},{"ruleId":"948","severity":1,"message":"993","line":55,"column":18,"nodeType":"950","messageId":"951","endLine":55,"endColumn":25},{"ruleId":"948","severity":1,"message":"974","line":76,"column":9,"nodeType":"950","messageId":"951","endLine":76,"endColumn":16},{"ruleId":"948","severity":1,"message":"1057","line":77,"column":9,"nodeType":"950","messageId":"951","endLine":77,"endColumn":21},{"ruleId":"948","severity":1,"message":"1058","line":83,"column":13,"nodeType":"950","messageId":"951","endLine":83,"endColumn":21},{"ruleId":"948","severity":1,"message":"1059","line":89,"column":13,"nodeType":"950","messageId":"951","endLine":89,"endColumn":17},{"ruleId":"948","severity":1,"message":"1060","line":89,"column":19,"nodeType":"950","messageId":"951","endLine":89,"endColumn":22},{"ruleId":"948","severity":1,"message":"1020","line":3,"column":3,"nodeType":"950","messageId":"951","endLine":3,"endColumn":9},{"ruleId":"948","severity":1,"message":"964","line":5,"column":3,"nodeType":"950","messageId":"951","endLine":5,"endColumn":7},{"ruleId":"948","severity":1,"message":"1027","line":6,"column":3,"nodeType":"950","messageId":"951","endLine":6,"endColumn":13},{"ruleId":"948","severity":1,"message":"1028","line":9,"column":3,"nodeType":"950","messageId":"951","endLine":9,"endColumn":9},{"ruleId":"948","severity":1,"message":"1029","line":11,"column":17,"nodeType":"950","messageId":"951","endLine":11,"endColumn":25},{"ruleId":"948","severity":1,"message":"1061","line":11,"column":27,"nodeType":"950","messageId":"951","endLine":11,"endColumn":36},{"ruleId":"948","severity":1,"message":"1030","line":16,"column":3,"nodeType":"950","messageId":"951","endLine":16,"endColumn":9},{"ruleId":"948","severity":1,"message":"1031","line":18,"column":11,"nodeType":"950","messageId":"951","endLine":18,"endColumn":19},{"ruleId":"948","severity":1,"message":"1062","line":19,"column":3,"nodeType":"950","messageId":"951","endLine":19,"endColumn":7},{"ruleId":"948","severity":1,"message":"1063","line":22,"column":3,"nodeType":"950","messageId":"951","endLine":22,"endColumn":14},{"ruleId":"948","severity":1,"message":"1032","line":25,"column":25,"nodeType":"950","messageId":"951","endLine":25,"endColumn":38},{"ruleId":"948","severity":1,"message":"975","line":32,"column":10,"nodeType":"950","messageId":"951","endLine":32,"endColumn":13},{"ruleId":"948","severity":1,"message":"1064","line":32,"column":15,"nodeType":"950","messageId":"951","endLine":32,"endColumn":23},{"ruleId":"948","severity":1,"message":"1065","line":33,"column":10,"nodeType":"950","messageId":"951","endLine":33,"endColumn":24},{"ruleId":"948","severity":1,"message":"1066","line":33,"column":26,"nodeType":"950","messageId":"951","endLine":33,"endColumn":31},{"ruleId":"948","severity":1,"message":"971","line":35,"column":8,"nodeType":"950","messageId":"951","endLine":35,"endColumn":13},{"ruleId":"948","severity":1,"message":"1040","line":45,"column":10,"nodeType":"950","messageId":"951","endLine":45,"endColumn":17},{"ruleId":"948","severity":1,"message":"1067","line":47,"column":10,"nodeType":"950","messageId":"951","endLine":47,"endColumn":22},{"ruleId":"948","severity":1,"message":"1068","line":47,"column":23,"nodeType":"950","messageId":"951","endLine":47,"endColumn":36},{"ruleId":"948","severity":1,"message":"1069","line":48,"column":10,"nodeType":"950","messageId":"951","endLine":48,"endColumn":15},{"ruleId":"948","severity":1,"message":"1070","line":48,"column":16,"nodeType":"950","messageId":"951","endLine":48,"endColumn":26},{"ruleId":"948","severity":1,"message":"1071","line":58,"column":9,"nodeType":"950","messageId":"951","endLine":58,"endColumn":25},{"ruleId":"948","severity":1,"message":"1041","line":62,"column":9,"nodeType":"950","messageId":"951","endLine":62,"endColumn":19},{"ruleId":"948","severity":1,"message":"1042","line":65,"column":9,"nodeType":"950","messageId":"951","endLine":65,"endColumn":23},{"ruleId":"948","severity":1,"message":"1072","line":77,"column":9,"nodeType":"950","messageId":"951","endLine":77,"endColumn":20},{"ruleId":"948","severity":1,"message":"1073","line":185,"column":9,"nodeType":"950","messageId":"951","endLine":185,"endColumn":16},{"ruleId":"1015","severity":1,"message":"1016","line":378,"column":27,"nodeType":"1017","endLine":381,"endColumn":29},{"ruleId":"1015","severity":1,"message":"1016","line":402,"column":27,"nodeType":"1017","endLine":405,"endColumn":29},{"ruleId":"948","severity":1,"message":"1043","line":435,"column":9,"nodeType":"950","messageId":"951","endLine":435,"endColumn":12},{"ruleId":"948","severity":1,"message":"1044","line":455,"column":9,"nodeType":"950","messageId":"951","endLine":455,"endColumn":21},{"ruleId":"948","severity":1,"message":"1045","line":496,"column":9,"nodeType":"950","messageId":"951","endLine":496,"endColumn":12},{"ruleId":"1046","severity":1,"message":"1047","line":519,"column":9,"nodeType":"1048","messageId":"1049","endLine":547,"endColumn":11},{"ruleId":"1050","severity":1,"message":"1051","line":541,"column":11,"nodeType":"1052","messageId":"1053","endLine":541,"endColumn":15},{"ruleId":"1015","severity":1,"message":"1016","line":737,"column":29,"nodeType":"1017","endLine":740,"endColumn":31},{"ruleId":"1015","severity":1,"message":"1016","line":780,"column":17,"nodeType":"1017","endLine":792,"endColumn":19},{"ruleId":"1015","severity":1,"message":"1016","line":818,"column":17,"nodeType":"1017","endLine":821,"endColumn":19},{"ruleId":"1015","severity":1,"message":"1016","line":900,"column":15,"nodeType":"1017","endLine":900,"endColumn":58},{"ruleId":"1015","severity":1,"message":"1016","line":903,"column":15,"nodeType":"1017","endLine":903,"endColumn":60},{"ruleId":"948","severity":1,"message":"1020","line":5,"column":3,"nodeType":"950","messageId":"951","endLine":5,"endColumn":9},{"ruleId":"948","severity":1,"message":"964","line":7,"column":3,"nodeType":"950","messageId":"951","endLine":7,"endColumn":7},{"ruleId":"948","severity":1,"message":"1027","line":8,"column":3,"nodeType":"950","messageId":"951","endLine":8,"endColumn":13},{"ruleId":"948","severity":1,"message":"1028","line":12,"column":3,"nodeType":"950","messageId":"951","endLine":12,"endColumn":9},{"ruleId":"948","severity":1,"message":"994","line":14,"column":3,"nodeType":"950","messageId":"951","endLine":14,"endColumn":13},{"ruleId":"948","severity":1,"message":"1029","line":16,"column":17,"nodeType":"950","messageId":"951","endLine":16,"endColumn":25},{"ruleId":"948","severity":1,"message":"1002","line":17,"column":8,"nodeType":"950","messageId":"951","endLine":17,"endColumn":17},{"ruleId":"948","severity":1,"message":"971","line":18,"column":8,"nodeType":"950","messageId":"951","endLine":18,"endColumn":13},{"ruleId":"948","severity":1,"message":"1030","line":22,"column":10,"nodeType":"950","messageId":"951","endLine":22,"endColumn":16},{"ruleId":"948","severity":1,"message":"1031","line":22,"column":32,"nodeType":"950","messageId":"951","endLine":22,"endColumn":40},{"ruleId":"948","severity":1,"message":"1074","line":22,"column":76,"nodeType":"950","messageId":"951","endLine":22,"endColumn":88},{"ruleId":"948","severity":1,"message":"1032","line":24,"column":25,"nodeType":"950","messageId":"951","endLine":24,"endColumn":38},{"ruleId":"948","severity":1,"message":"1033","line":25,"column":8,"nodeType":"950","messageId":"951","endLine":25,"endColumn":22},{"ruleId":"948","severity":1,"message":"1034","line":26,"column":8,"nodeType":"950","messageId":"951","endLine":26,"endColumn":17},{"ruleId":"948","severity":1,"message":"1000","line":32,"column":10,"nodeType":"950","messageId":"951","endLine":32,"endColumn":20},{"ruleId":"948","severity":1,"message":"1075","line":37,"column":9,"nodeType":"950","messageId":"951","endLine":37,"endColumn":17},{"ruleId":"948","severity":1,"message":"1040","line":47,"column":10,"nodeType":"950","messageId":"951","endLine":47,"endColumn":17},{"ruleId":"948","severity":1,"message":"1041","line":55,"column":9,"nodeType":"950","messageId":"951","endLine":55,"endColumn":19},{"ruleId":"1015","severity":1,"message":"1016","line":212,"column":15,"nodeType":"1017","endLine":212,"endColumn":64},{"ruleId":"1015","severity":1,"message":"1016","line":214,"column":15,"nodeType":"1017","endLine":214,"endColumn":62},{"ruleId":"1015","severity":1,"message":"1016","line":233,"column":15,"nodeType":"1017","endLine":233,"endColumn":63},{"ruleId":"1015","severity":1,"message":"1016","line":235,"column":15,"nodeType":"1017","endLine":235,"endColumn":63},{"ruleId":"1015","severity":1,"message":"1016","line":254,"column":15,"nodeType":"1017","endLine":254,"endColumn":57},{"ruleId":"1015","severity":1,"message":"1016","line":256,"column":15,"nodeType":"1017","endLine":256,"endColumn":57},{"ruleId":"1015","severity":1,"message":"1016","line":335,"column":29,"nodeType":"1017","endLine":335,"endColumn":105},{"ruleId":"1015","severity":1,"message":"1016","line":355,"column":29,"nodeType":"1017","endLine":355,"endColumn":109},{"ruleId":"948","severity":1,"message":"1043","line":382,"column":9,"nodeType":"950","messageId":"951","endLine":382,"endColumn":12},{"ruleId":"948","severity":1,"message":"1044","line":401,"column":9,"nodeType":"950","messageId":"951","endLine":401,"endColumn":21},{"ruleId":"1046","severity":1,"message":"1047","line":471,"column":9,"nodeType":"1048","messageId":"1049","endLine":499,"endColumn":11},{"ruleId":"1050","severity":1,"message":"1051","line":493,"column":11,"nodeType":"1052","messageId":"1053","endLine":493,"endColumn":15},{"ruleId":"1015","severity":1,"message":"1016","line":715,"column":29,"nodeType":"1017","endLine":715,"endColumn":105},{"ruleId":"1015","severity":1,"message":"1016","line":735,"column":29,"nodeType":"1017","endLine":735,"endColumn":109},{"ruleId":"1015","severity":1,"message":"1016","line":752,"column":17,"nodeType":"1017","endLine":764,"endColumn":19},{"ruleId":"1015","severity":1,"message":"1016","line":788,"column":17,"nodeType":"1017","endLine":791,"endColumn":19},{"ruleId":"1015","severity":1,"message":"1016","line":825,"column":69,"nodeType":"1017","endLine":825,"endColumn":111},{"ruleId":"1015","severity":1,"message":"1016","line":826,"column":65,"nodeType":"1017","endLine":826,"endColumn":109},{"ruleId":"948","severity":1,"message":"1020","line":672,"column":3,"nodeType":"950","messageId":"951","endLine":672,"endColumn":9},{"ruleId":"948","severity":1,"message":"964","line":674,"column":3,"nodeType":"950","messageId":"951","endLine":674,"endColumn":7},{"ruleId":"948","severity":1,"message":"1027","line":675,"column":3,"nodeType":"950","messageId":"951","endLine":675,"endColumn":13},{"ruleId":"948","severity":1,"message":"1028","line":679,"column":3,"nodeType":"950","messageId":"951","endLine":679,"endColumn":9},{"ruleId":"948","severity":1,"message":"994","line":681,"column":3,"nodeType":"950","messageId":"951","endLine":681,"endColumn":13},{"ruleId":"948","severity":1,"message":"1029","line":683,"column":17,"nodeType":"950","messageId":"951","endLine":683,"endColumn":25},{"ruleId":"948","severity":1,"message":"1002","line":684,"column":8,"nodeType":"950","messageId":"951","endLine":684,"endColumn":17},{"ruleId":"948","severity":1,"message":"971","line":685,"column":8,"nodeType":"950","messageId":"951","endLine":685,"endColumn":13},{"ruleId":"948","severity":1,"message":"1000","line":686,"column":10,"nodeType":"950","messageId":"951","endLine":686,"endColumn":20},{"ruleId":"948","severity":1,"message":"1030","line":690,"column":3,"nodeType":"950","messageId":"951","endLine":690,"endColumn":9},{"ruleId":"948","severity":1,"message":"1031","line":692,"column":11,"nodeType":"950","messageId":"951","endLine":692,"endColumn":19},{"ruleId":"948","severity":1,"message":"949","line":697,"column":20,"nodeType":"950","messageId":"951","endLine":697,"endColumn":26},{"ruleId":"948","severity":1,"message":"1076","line":698,"column":3,"nodeType":"950","messageId":"951","endLine":698,"endColumn":9},{"ruleId":"948","severity":1,"message":"1077","line":699,"column":3,"nodeType":"950","messageId":"951","endLine":699,"endColumn":8},{"ruleId":"948","severity":1,"message":"1038","line":700,"column":8,"nodeType":"950","messageId":"951","endLine":700,"endColumn":15},{"ruleId":"948","severity":1,"message":"968","line":701,"column":3,"nodeType":"950","messageId":"951","endLine":701,"endColumn":12},{"ruleId":"948","severity":1,"message":"1032","line":703,"column":25,"nodeType":"950","messageId":"951","endLine":703,"endColumn":38},{"ruleId":"948","severity":1,"message":"1033","line":704,"column":8,"nodeType":"950","messageId":"951","endLine":704,"endColumn":22},{"ruleId":"948","severity":1,"message":"1034","line":705,"column":8,"nodeType":"950","messageId":"951","endLine":705,"endColumn":17},{"ruleId":"948","severity":1,"message":"1035","line":710,"column":8,"nodeType":"950","messageId":"951","endLine":710,"endColumn":21},{"ruleId":"948","severity":1,"message":"1036","line":711,"column":8,"nodeType":"950","messageId":"951","endLine":711,"endColumn":24},{"ruleId":"948","severity":1,"message":"1040","line":724,"column":10,"nodeType":"950","messageId":"951","endLine":724,"endColumn":17},{"ruleId":"948","severity":1,"message":"1059","line":726,"column":9,"nodeType":"950","messageId":"951","endLine":726,"endColumn":13},{"ruleId":"948","severity":1,"message":"1060","line":726,"column":15,"nodeType":"950","messageId":"951","endLine":726,"endColumn":18},{"ruleId":"1015","severity":1,"message":"1016","line":941,"column":25,"nodeType":"1017","endLine":944,"endColumn":27},{"ruleId":"1015","severity":1,"message":"1016","line":963,"column":25,"nodeType":"1017","endLine":966,"endColumn":27},{"ruleId":"948","severity":1,"message":"1043","line":993,"column":9,"nodeType":"950","messageId":"951","endLine":993,"endColumn":12},{"ruleId":"948","severity":1,"message":"1044","line":1012,"column":9,"nodeType":"950","messageId":"951","endLine":1012,"endColumn":21},{"ruleId":"948","severity":1,"message":"1045","line":1038,"column":9,"nodeType":"950","messageId":"951","endLine":1038,"endColumn":12},{"ruleId":"1046","severity":1,"message":"1047","line":1055,"column":9,"nodeType":"1048","messageId":"1049","endLine":1083,"endColumn":11},{"ruleId":"1050","severity":1,"message":"1051","line":1077,"column":11,"nodeType":"1052","messageId":"1053","endLine":1077,"endColumn":15},{"ruleId":"1046","severity":1,"message":"1047","line":1207,"column":16,"nodeType":"1048","messageId":"1049","endLine":1207,"endColumn":47},{"ruleId":"1015","severity":1,"message":"1016","line":1289,"column":29,"nodeType":"1017","endLine":1292,"endColumn":31},{"ruleId":"1015","severity":1,"message":"1016","line":1311,"column":29,"nodeType":"1017","endLine":1314,"endColumn":31},{"ruleId":"1015","severity":1,"message":"1016","line":1331,"column":17,"nodeType":"1017","endLine":1343,"endColumn":19},{"ruleId":"1015","severity":1,"message":"1016","line":1369,"column":17,"nodeType":"1017","endLine":1372,"endColumn":19},{"ruleId":"1015","severity":1,"message":"1016","line":1430,"column":15,"nodeType":"1017","endLine":1430,"endColumn":58},{"ruleId":"1015","severity":1,"message":"1016","line":1433,"column":15,"nodeType":"1017","endLine":1433,"endColumn":60},{"ruleId":"1050","severity":1,"message":"1078","line":123,"column":5,"nodeType":"1052","messageId":"1053","endLine":123,"endColumn":15},{"ruleId":"1079","severity":1,"message":"1080","line":1,"column":1,"nodeType":"1081","messageId":"1053","fix":"1082"},{"ruleId":"1050","severity":1,"message":"1083","line":16,"column":9,"nodeType":"1052","messageId":"1053","endLine":16,"endColumn":32},{"ruleId":"948","severity":1,"message":"970","line":2,"column":19,"nodeType":"950","messageId":"951","endLine":2,"endColumn":29},{"ruleId":"948","severity":1,"message":"949","line":17,"column":20,"nodeType":"950","messageId":"951","endLine":17,"endColumn":26},{"ruleId":"948","severity":1,"message":"1025","line":18,"column":3,"nodeType":"950","messageId":"951","endLine":18,"endColumn":7},{"ruleId":"948","severity":1,"message":"1084","line":27,"column":9,"nodeType":"950","messageId":"951","endLine":27,"endColumn":18},{"ruleId":"948","severity":1,"message":"974","line":55,"column":5,"nodeType":"950","messageId":"951","endLine":55,"endColumn":12},{"ruleId":"948","severity":1,"message":"1085","line":62,"column":7,"nodeType":"950","messageId":"951","endLine":62,"endColumn":14},{"ruleId":"948","severity":1,"message":"1086","line":73,"column":9,"nodeType":"950","messageId":"951","endLine":73,"endColumn":26},{"ruleId":"948","severity":1,"message":"1059","line":75,"column":9,"nodeType":"950","messageId":"951","endLine":75,"endColumn":13},{"ruleId":"1015","severity":1,"message":"1016","line":257,"column":16,"nodeType":"1017","endLine":257,"endColumn":83},{"ruleId":"948","severity":1,"message":"970","line":2,"column":19,"nodeType":"950","messageId":"951","endLine":2,"endColumn":29},{"ruleId":"948","severity":1,"message":"949","line":17,"column":20,"nodeType":"950","messageId":"951","endLine":17,"endColumn":26},{"ruleId":"948","severity":1,"message":"1025","line":18,"column":3,"nodeType":"950","messageId":"951","endLine":18,"endColumn":7},{"ruleId":"948","severity":1,"message":"1084","line":27,"column":9,"nodeType":"950","messageId":"951","endLine":27,"endColumn":18},{"ruleId":"948","severity":1,"message":"993","line":52,"column":13,"nodeType":"950","messageId":"951","endLine":52,"endColumn":20},{"ruleId":"948","severity":1,"message":"974","line":60,"column":5,"nodeType":"950","messageId":"951","endLine":60,"endColumn":12},{"ruleId":"948","severity":1,"message":"1085","line":68,"column":7,"nodeType":"950","messageId":"951","endLine":68,"endColumn":14},{"ruleId":"948","severity":1,"message":"1086","line":79,"column":9,"nodeType":"950","messageId":"951","endLine":79,"endColumn":26},{"ruleId":"948","severity":1,"message":"1059","line":81,"column":9,"nodeType":"950","messageId":"951","endLine":81,"endColumn":13},{"ruleId":"1015","severity":1,"message":"1016","line":263,"column":16,"nodeType":"1017","endLine":263,"endColumn":83},{"ruleId":"948","severity":1,"message":"1087","line":7,"column":3,"nodeType":"950","messageId":"951","endLine":7,"endColumn":19},{"ruleId":"948","severity":1,"message":"1088","line":8,"column":3,"nodeType":"950","messageId":"951","endLine":8,"endColumn":11},{"ruleId":"948","severity":1,"message":"1061","line":16,"column":27,"nodeType":"950","messageId":"951","endLine":16,"endColumn":36},{"ruleId":"948","severity":1,"message":"970","line":17,"column":19,"nodeType":"950","messageId":"951","endLine":17,"endColumn":29},{"ruleId":"948","severity":1,"message":"1067","line":30,"column":10,"nodeType":"950","messageId":"951","endLine":30,"endColumn":22},{"ruleId":"948","severity":1,"message":"1068","line":30,"column":23,"nodeType":"950","messageId":"951","endLine":30,"endColumn":36},{"ruleId":"948","severity":1,"message":"1069","line":31,"column":10,"nodeType":"950","messageId":"951","endLine":31,"endColumn":15},{"ruleId":"948","severity":1,"message":"1070","line":31,"column":16,"nodeType":"950","messageId":"951","endLine":31,"endColumn":26},{"ruleId":"948","severity":1,"message":"974","line":52,"column":5,"nodeType":"950","messageId":"951","endLine":52,"endColumn":12},{"ruleId":"948","severity":1,"message":"1089","line":64,"column":11,"nodeType":"950","messageId":"951","endLine":64,"endColumn":19},{"ruleId":"948","severity":1,"message":"1090","line":96,"column":9,"nodeType":"950","messageId":"951","endLine":96,"endColumn":17},{"ruleId":"948","severity":1,"message":"1091","line":102,"column":9,"nodeType":"950","messageId":"951","endLine":102,"endColumn":17},{"ruleId":"1050","severity":1,"message":"1092","line":158,"column":9,"nodeType":"1052","messageId":"1053","endLine":158,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1092","line":135,"column":9,"nodeType":"1052","messageId":"1053","endLine":135,"endColumn":15},{"ruleId":"948","severity":1,"message":"1087","line":8,"column":3,"nodeType":"950","messageId":"951","endLine":8,"endColumn":19},{"ruleId":"948","severity":1,"message":"1088","line":9,"column":3,"nodeType":"950","messageId":"951","endLine":9,"endColumn":11},{"ruleId":"948","severity":1,"message":"970","line":18,"column":19,"nodeType":"950","messageId":"951","endLine":18,"endColumn":29},{"ruleId":"948","severity":1,"message":"974","line":40,"column":5,"nodeType":"950","messageId":"951","endLine":40,"endColumn":12},{"ruleId":"948","severity":1,"message":"1089","line":50,"column":11,"nodeType":"950","messageId":"951","endLine":50,"endColumn":19},{"ruleId":"1050","severity":1,"message":"1083","line":16,"column":9,"nodeType":"1052","messageId":"1053","endLine":16,"endColumn":32},{"ruleId":"948","severity":1,"message":"984","line":1,"column":18,"nodeType":"950","messageId":"951","endLine":1,"endColumn":34},{"ruleId":"948","severity":1,"message":"977","line":12,"column":10,"nodeType":"950","messageId":"951","endLine":12,"endColumn":20},{"ruleId":"948","severity":1,"message":"1093","line":13,"column":10,"nodeType":"950","messageId":"951","endLine":13,"endColumn":19},{"ruleId":"948","severity":1,"message":"978","line":13,"column":21,"nodeType":"950","messageId":"951","endLine":13,"endColumn":33},{"ruleId":"948","severity":1,"message":"1069","line":14,"column":8,"nodeType":"950","messageId":"951","endLine":14,"endColumn":13},{"ruleId":"948","severity":1,"message":"1094","line":14,"column":15,"nodeType":"950","messageId":"951","endLine":14,"endColumn":23},{"ruleId":"948","severity":1,"message":"979","line":17,"column":9,"nodeType":"950","messageId":"951","endLine":17,"endColumn":21},{"ruleId":"948","severity":1,"message":"973","line":19,"column":9,"nodeType":"950","messageId":"951","endLine":19,"endColumn":20},{"ruleId":"948","severity":1,"message":"974","line":28,"column":5,"nodeType":"950","messageId":"951","endLine":28,"endColumn":12},{"ruleId":"948","severity":1,"message":"1057","line":29,"column":5,"nodeType":"950","messageId":"951","endLine":29,"endColumn":17},{"ruleId":"948","severity":1,"message":"1058","line":34,"column":9,"nodeType":"950","messageId":"951","endLine":34,"endColumn":17},{"ruleId":"948","severity":1,"message":"984","line":1,"column":18,"nodeType":"950","messageId":"951","endLine":1,"endColumn":34},{"ruleId":"948","severity":1,"message":"977","line":22,"column":10,"nodeType":"950","messageId":"951","endLine":22,"endColumn":20},{"ruleId":"948","severity":1,"message":"1093","line":23,"column":10,"nodeType":"950","messageId":"951","endLine":23,"endColumn":19},{"ruleId":"948","severity":1,"message":"978","line":23,"column":21,"nodeType":"950","messageId":"951","endLine":23,"endColumn":33},{"ruleId":"948","severity":1,"message":"1069","line":24,"column":8,"nodeType":"950","messageId":"951","endLine":24,"endColumn":13},{"ruleId":"948","severity":1,"message":"1094","line":24,"column":15,"nodeType":"950","messageId":"951","endLine":24,"endColumn":23},{"ruleId":"948","severity":1,"message":"1095","line":26,"column":9,"nodeType":"950","messageId":"951","endLine":26,"endColumn":17},{"ruleId":"948","severity":1,"message":"979","line":29,"column":9,"nodeType":"950","messageId":"951","endLine":29,"endColumn":21},{"ruleId":"948","severity":1,"message":"973","line":31,"column":9,"nodeType":"950","messageId":"951","endLine":31,"endColumn":20},{"ruleId":"948","severity":1,"message":"974","line":44,"column":5,"nodeType":"950","messageId":"951","endLine":44,"endColumn":12},{"ruleId":"948","severity":1,"message":"1057","line":45,"column":5,"nodeType":"950","messageId":"951","endLine":45,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1097","line":73,"column":37,"nodeType":"1098","messageId":"1053","endLine":73,"endColumn":39},{"ruleId":"1046","severity":1,"message":"1047","line":75,"column":7,"nodeType":"1048","messageId":"1049","endLine":75,"endColumn":36},{"ruleId":"1096","severity":1,"message":"1097","line":76,"column":35,"nodeType":"1098","messageId":"1053","endLine":76,"endColumn":37},{"ruleId":"1096","severity":1,"message":"1097","line":94,"column":43,"nodeType":"1098","messageId":"1053","endLine":94,"endColumn":45},{"ruleId":"1096","severity":1,"message":"1097","line":94,"column":197,"nodeType":"1098","messageId":"1053","endLine":94,"endColumn":199},{"ruleId":"1050","severity":1,"message":"1092","line":155,"column":9,"nodeType":"1052","messageId":"1053","endLine":155,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1083","line":174,"column":5,"nodeType":"1052","messageId":"1053","endLine":174,"endColumn":28},{"ruleId":"1050","severity":1,"message":"1099","line":24,"column":5,"nodeType":"1052","messageId":"1053","endLine":24,"endColumn":10},{"ruleId":"1050","severity":1,"message":"1083","line":49,"column":3,"nodeType":"1052","messageId":"1053","endLine":49,"endColumn":26},{"ruleId":"948","severity":1,"message":"949","line":23,"column":20,"nodeType":"950","messageId":"951","endLine":23,"endColumn":26},{"ruleId":"948","severity":1,"message":"1025","line":24,"column":3,"nodeType":"950","messageId":"951","endLine":24,"endColumn":7},{"ruleId":"948","severity":1,"message":"1100","line":33,"column":10,"nodeType":"950","messageId":"951","endLine":33,"endColumn":14},{"ruleId":"948","severity":1,"message":"1101","line":38,"column":10,"nodeType":"950","messageId":"951","endLine":38,"endColumn":22},{"ruleId":"948","severity":1,"message":"1102","line":38,"column":24,"nodeType":"950","messageId":"951","endLine":38,"endColumn":40},{"ruleId":"948","severity":1,"message":"1103","line":63,"column":10,"nodeType":"950","messageId":"951","endLine":63,"endColumn":15},{"ruleId":"948","severity":1,"message":"1104","line":63,"column":17,"nodeType":"950","messageId":"951","endLine":63,"endColumn":25},{"ruleId":"948","severity":1,"message":"1105","line":64,"column":10,"nodeType":"950","messageId":"951","endLine":64,"endColumn":13},{"ruleId":"948","severity":1,"message":"1106","line":64,"column":15,"nodeType":"950","messageId":"951","endLine":64,"endColumn":21},{"ruleId":"948","severity":1,"message":"1059","line":80,"column":9,"nodeType":"950","messageId":"951","endLine":80,"endColumn":13},{"ruleId":"948","severity":1,"message":"1107","line":3,"column":3,"nodeType":"950","messageId":"951","endLine":3,"endColumn":6},{"ruleId":"948","severity":1,"message":"1108","line":5,"column":3,"nodeType":"950","messageId":"951","endLine":5,"endColumn":13},{"ruleId":"948","severity":1,"message":"1109","line":6,"column":3,"nodeType":"950","messageId":"951","endLine":6,"endColumn":11},{"ruleId":"948","severity":1,"message":"1110","line":13,"column":3,"nodeType":"950","messageId":"951","endLine":13,"endColumn":14},{"ruleId":"948","severity":1,"message":"1111","line":15,"column":3,"nodeType":"950","messageId":"951","endLine":15,"endColumn":11},{"ruleId":"948","severity":1,"message":"1112","line":16,"column":3,"nodeType":"950","messageId":"951","endLine":16,"endColumn":9},{"ruleId":"948","severity":1,"message":"1023","line":5,"column":3,"nodeType":"950","messageId":"951","endLine":5,"endColumn":20},{"ruleId":"948","severity":1,"message":"1024","line":6,"column":3,"nodeType":"950","messageId":"951","endLine":6,"endColumn":14},{"ruleId":"948","severity":1,"message":"1113","line":10,"column":3,"nodeType":"950","messageId":"951","endLine":10,"endColumn":16},{"ruleId":"948","severity":1,"message":"970","line":18,"column":19,"nodeType":"950","messageId":"951","endLine":18,"endColumn":29},{"ruleId":"948","severity":1,"message":"971","line":19,"column":8,"nodeType":"950","messageId":"951","endLine":19,"endColumn":13},{"ruleId":"1114","severity":1,"message":"1115","line":24,"column":3,"nodeType":"1116","messageId":"1117","endLine":26,"endColumn":4},{"ruleId":"948","severity":1,"message":"974","line":39,"column":5,"nodeType":"950","messageId":"951","endLine":39,"endColumn":12},{"ruleId":"948","severity":1,"message":"1118","line":76,"column":10,"nodeType":"950","messageId":"951","endLine":76,"endColumn":14},{"ruleId":"948","severity":1,"message":"993","line":76,"column":16,"nodeType":"950","messageId":"951","endLine":76,"endColumn":23},{"ruleId":"948","severity":1,"message":"1023","line":1,"column":48,"nodeType":"950","messageId":"951","endLine":1,"endColumn":65},{"ruleId":"948","severity":1,"message":"995","line":5,"column":8,"nodeType":"950","messageId":"951","endLine":5,"endColumn":14},{"ruleId":"948","severity":1,"message":"970","line":7,"column":19,"nodeType":"950","messageId":"951","endLine":7,"endColumn":29},{"ruleId":"948","severity":1,"message":"1119","line":13,"column":5,"nodeType":"950","messageId":"951","endLine":13,"endColumn":13},{"ruleId":"948","severity":1,"message":"974","line":14,"column":5,"nodeType":"950","messageId":"951","endLine":14,"endColumn":12},{"ruleId":"948","severity":1,"message":"1057","line":15,"column":5,"nodeType":"950","messageId":"951","endLine":15,"endColumn":17},{"ruleId":"948","severity":1,"message":"1120","line":16,"column":18,"nodeType":"950","messageId":"951","endLine":16,"endColumn":24},{"ruleId":"948","severity":1,"message":"1058","line":18,"column":9,"nodeType":"950","messageId":"951","endLine":18,"endColumn":17},{"ruleId":"1096","severity":1,"message":"1097","line":69,"column":45,"nodeType":"1098","messageId":"1053","endLine":69,"endColumn":47},{"ruleId":"1096","severity":1,"message":"1097","line":69,"column":128,"nodeType":"1098","messageId":"1053","endLine":69,"endColumn":130},{"ruleId":"1096","severity":1,"message":"1097","line":69,"column":235,"nodeType":"1098","messageId":"1053","endLine":69,"endColumn":237},{"ruleId":"1096","severity":1,"message":"1097","line":70,"column":68,"nodeType":"1098","messageId":"1053","endLine":70,"endColumn":70},{"ruleId":"1015","severity":1,"message":"1016","line":93,"column":15,"nodeType":"1017","endLine":93,"endColumn":62},{"ruleId":"1015","severity":1,"message":"1016","line":133,"column":15,"nodeType":"1017","endLine":133,"endColumn":62},{"ruleId":"1015","severity":1,"message":"1016","line":161,"column":15,"nodeType":"1017","endLine":161,"endColumn":62},{"ruleId":"1015","severity":1,"message":"1016","line":217,"column":15,"nodeType":"1017","endLine":217,"endColumn":62},{"ruleId":"1015","severity":1,"message":"1016","line":245,"column":15,"nodeType":"1017","endLine":245,"endColumn":62},{"ruleId":"1015","severity":1,"message":"1016","line":273,"column":15,"nodeType":"1017","endLine":273,"endColumn":62},{"ruleId":"1015","severity":1,"message":"1016","line":313,"column":15,"nodeType":"1017","endLine":313,"endColumn":62},{"ruleId":"1015","severity":1,"message":"1016","line":341,"column":15,"nodeType":"1017","endLine":341,"endColumn":62},{"ruleId":"1015","severity":1,"message":"1016","line":369,"column":15,"nodeType":"1017","endLine":369,"endColumn":62},{"ruleId":"948","severity":1,"message":"1121","line":22,"column":5,"nodeType":"950","messageId":"951","endLine":22,"endColumn":12},{"ruleId":"948","severity":1,"message":"1122","line":28,"column":9,"nodeType":"950","messageId":"951","endLine":28,"endColumn":11},{"ruleId":"948","severity":1,"message":"1123","line":29,"column":9,"nodeType":"950","messageId":"951","endLine":29,"endColumn":11},{"ruleId":"948","severity":1,"message":"1124","line":9,"column":8,"nodeType":"950","messageId":"951","endLine":9,"endColumn":21},{"ruleId":"948","severity":1,"message":"1009","line":12,"column":3,"nodeType":"950","messageId":"951","endLine":12,"endColumn":7},{"ruleId":"948","severity":1,"message":"1125","line":144,"column":16,"nodeType":"950","messageId":"951","endLine":144,"endColumn":23},{"ruleId":"948","severity":1,"message":"1126","line":183,"column":9,"nodeType":"950","messageId":"951","endLine":183,"endColumn":26},{"ruleId":"1015","severity":1,"message":"1016","line":279,"column":17,"nodeType":"1017","endLine":282,"endColumn":19},{"ruleId":"948","severity":1,"message":"960","line":1,"column":17,"nodeType":"950","messageId":"951","endLine":1,"endColumn":25},{"ruleId":"948","severity":1,"message":"1127","line":6,"column":22,"nodeType":"950","messageId":"951","endLine":6,"endColumn":30},{"ruleId":"1015","severity":1,"message":"1016","line":52,"column":19,"nodeType":"1017","endLine":52,"endColumn":60},{"ruleId":"1050","severity":1,"message":"1083","line":192,"column":5,"nodeType":"1052","messageId":"1053","endLine":192,"endColumn":28},{"ruleId":"1050","severity":1,"message":"1083","line":211,"column":5,"nodeType":"1052","messageId":"1053","endLine":211,"endColumn":28},{"ruleId":"948","severity":1,"message":"1128","line":3,"column":10,"nodeType":"950","messageId":"951","endLine":3,"endColumn":21},{"ruleId":"948","severity":1,"message":"1129","line":3,"column":23,"nodeType":"950","messageId":"951","endLine":3,"endColumn":38},{"ruleId":"948","severity":1,"message":"1130","line":3,"column":40,"nodeType":"950","messageId":"951","endLine":3,"endColumn":57},{"ruleId":"1015","severity":1,"message":"1016","line":44,"column":17,"nodeType":"1017","endLine":44,"endColumn":72},{"ruleId":"1015","severity":1,"message":"1016","line":63,"column":27,"nodeType":"1017","endLine":63,"endColumn":113},{"ruleId":"1015","severity":1,"message":"1016","line":63,"column":114,"nodeType":"1017","endLine":63,"endColumn":196},{"ruleId":"1015","severity":1,"message":"1016","line":79,"column":17,"nodeType":"1017","endLine":79,"endColumn":61},{"ruleId":"1015","severity":1,"message":"1016","line":95,"column":31,"nodeType":"1017","endLine":95,"endColumn":90},{"ruleId":"1015","severity":1,"message":"1016","line":95,"column":91,"nodeType":"1017","endLine":95,"endColumn":173},{"ruleId":"1015","severity":1,"message":"1016","line":112,"column":17,"nodeType":"1017","endLine":112,"endColumn":61},{"ruleId":"1015","severity":1,"message":"1016","line":128,"column":33,"nodeType":"1017","endLine":128,"endColumn":70},{"ruleId":"1015","severity":1,"message":"1016","line":128,"column":71,"nodeType":"1017","endLine":128,"endColumn":153},{"ruleId":"1015","severity":1,"message":"1016","line":144,"column":17,"nodeType":"1017","endLine":144,"endColumn":61},{"ruleId":"1015","severity":1,"message":"1016","line":160,"column":26,"nodeType":"1017","endLine":160,"endColumn":85},{"ruleId":"1015","severity":1,"message":"1016","line":160,"column":86,"nodeType":"1017","endLine":160,"endColumn":169},{"ruleId":"1015","severity":1,"message":"1016","line":176,"column":17,"nodeType":"1017","endLine":176,"endColumn":61},{"ruleId":"1015","severity":1,"message":"1016","line":192,"column":29,"nodeType":"1017","endLine":192,"endColumn":66},{"ruleId":"1015","severity":1,"message":"1016","line":192,"column":67,"nodeType":"1017","endLine":192,"endColumn":151},{"ruleId":"1015","severity":1,"message":"1016","line":222,"column":32,"nodeType":"1017","endLine":222,"endColumn":69},{"ruleId":"1015","severity":1,"message":"1016","line":222,"column":70,"nodeType":"1017","endLine":222,"endColumn":156},{"ruleId":"1015","severity":1,"message":"1016","line":252,"column":31,"nodeType":"1017","endLine":252,"endColumn":73},{"ruleId":"1015","severity":1,"message":"1016","line":252,"column":74,"nodeType":"1017","endLine":252,"endColumn":160},{"ruleId":"948","severity":1,"message":"1131","line":4,"column":11,"nodeType":"950","messageId":"951","endLine":4,"endColumn":19},{"ruleId":"948","severity":1,"message":"1132","line":6,"column":17,"nodeType":"950","messageId":"951","endLine":6,"endColumn":31},{"ruleId":"948","severity":1,"message":"1133","line":7,"column":17,"nodeType":"950","messageId":"951","endLine":7,"endColumn":31},{"ruleId":"948","severity":1,"message":"1134","line":8,"column":16,"nodeType":"950","messageId":"951","endLine":8,"endColumn":25},{"ruleId":"948","severity":1,"message":"1135","line":9,"column":21,"nodeType":"950","messageId":"951","endLine":9,"endColumn":32},{"ruleId":"948","severity":1,"message":"1136","line":10,"column":19,"nodeType":"950","messageId":"951","endLine":10,"endColumn":30},{"ruleId":"948","severity":1,"message":"1137","line":11,"column":18,"nodeType":"950","messageId":"951","endLine":11,"endColumn":25},{"ruleId":"948","severity":1,"message":"1138","line":13,"column":11,"nodeType":"950","messageId":"951","endLine":13,"endColumn":19},{"ruleId":"948","severity":1,"message":"1139","line":14,"column":3,"nodeType":"950","messageId":"951","endLine":14,"endColumn":15},{"ruleId":"948","severity":1,"message":"1140","line":15,"column":3,"nodeType":"950","messageId":"951","endLine":15,"endColumn":13},{"ruleId":"948","severity":1,"message":"1141","line":16,"column":3,"nodeType":"950","messageId":"951","endLine":16,"endColumn":16},{"ruleId":"948","severity":1,"message":"990","line":41,"column":8,"nodeType":"950","messageId":"951","endLine":41,"endColumn":23},{"ruleId":"1015","severity":1,"message":"1016","line":44,"column":56,"nodeType":"1017","endLine":44,"endColumn":86},{"ruleId":"1015","severity":1,"message":"1016","line":47,"column":63,"nodeType":"1017","endLine":47,"endColumn":108},{"ruleId":"1015","severity":1,"message":"1016","line":49,"column":59,"nodeType":"1017","endLine":49,"endColumn":121},{"ruleId":"1015","severity":1,"message":"1016","line":60,"column":10,"nodeType":"1017","endLine":60,"endColumn":56},{"ruleId":"1015","severity":1,"message":"1016","line":66,"column":10,"nodeType":"1017","endLine":66,"endColumn":70},{"ruleId":"1015","severity":1,"message":"1016","line":73,"column":10,"nodeType":"1017","endLine":73,"endColumn":47},{"ruleId":"948","severity":1,"message":"1142","line":108,"column":7,"nodeType":"950","messageId":"951","endLine":108,"endColumn":18},{"ruleId":"948","severity":1,"message":"1143","line":9,"column":3,"nodeType":"950","messageId":"951","endLine":9,"endColumn":6},{"ruleId":"948","severity":1,"message":"1025","line":10,"column":3,"nodeType":"950","messageId":"951","endLine":10,"endColumn":7},{"ruleId":"948","severity":1,"message":"1144","line":15,"column":18,"nodeType":"950","messageId":"951","endLine":15,"endColumn":26},{"ruleId":"948","severity":1,"message":"1145","line":16,"column":24,"nodeType":"950","messageId":"951","endLine":16,"endColumn":41},{"ruleId":"948","severity":1,"message":"1146","line":18,"column":13,"nodeType":"950","messageId":"951","endLine":18,"endColumn":23},{"ruleId":"948","severity":1,"message":"1147","line":19,"column":11,"nodeType":"950","messageId":"951","endLine":19,"endColumn":19},{"ruleId":"948","severity":1,"message":"1148","line":29,"column":10,"nodeType":"950","messageId":"951","endLine":29,"endColumn":15},{"ruleId":"948","severity":1,"message":"1020","line":29,"column":29,"nodeType":"950","messageId":"951","endLine":29,"endColumn":35},{"ruleId":"948","severity":1,"message":"1149","line":30,"column":8,"nodeType":"950","messageId":"951","endLine":30,"endColumn":18},{"ruleId":"948","severity":1,"message":"1150","line":40,"column":7,"nodeType":"950","messageId":"951","endLine":40,"endColumn":15},{"ruleId":"948","severity":1,"message":"1151","line":71,"column":7,"nodeType":"950","messageId":"951","endLine":71,"endColumn":20},{"ruleId":"948","severity":1,"message":"1152","line":102,"column":8,"nodeType":"950","messageId":"951","endLine":102,"endColumn":16},{"ruleId":"948","severity":1,"message":"1153","line":102,"column":18,"nodeType":"950","messageId":"951","endLine":102,"endColumn":29},{"ruleId":"948","severity":1,"message":"1154","line":103,"column":8,"nodeType":"950","messageId":"951","endLine":103,"endColumn":21},{"ruleId":"948","severity":1,"message":"1155","line":103,"column":23,"nodeType":"950","messageId":"951","endLine":103,"endColumn":39},{"ruleId":"948","severity":1,"message":"1156","line":104,"column":8,"nodeType":"950","messageId":"951","endLine":104,"endColumn":25},{"ruleId":"948","severity":1,"message":"1157","line":104,"column":27,"nodeType":"950","messageId":"951","endLine":104,"endColumn":47},{"ruleId":"948","severity":1,"message":"1158","line":105,"column":8,"nodeType":"950","messageId":"951","endLine":105,"endColumn":29},{"ruleId":"948","severity":1,"message":"1159","line":105,"column":31,"nodeType":"950","messageId":"951","endLine":105,"endColumn":55},{"ruleId":"1015","severity":1,"message":"1016","line":167,"column":9,"nodeType":"1017","endLine":167,"endColumn":53},{"ruleId":"948","severity":1,"message":"960","line":1,"column":17,"nodeType":"950","messageId":"951","endLine":1,"endColumn":25},{"ruleId":"948","severity":1,"message":"1160","line":3,"column":10,"nodeType":"950","messageId":"951","endLine":3,"endColumn":18},{"ruleId":"948","severity":1,"message":"1002","line":11,"column":8,"nodeType":"950","messageId":"951","endLine":11,"endColumn":17},{"ruleId":"948","severity":1,"message":"1161","line":13,"column":8,"nodeType":"950","messageId":"951","endLine":13,"endColumn":11},{"ruleId":"948","severity":1,"message":"1162","line":14,"column":8,"nodeType":"950","messageId":"951","endLine":14,"endColumn":13},{"ruleId":"948","severity":1,"message":"1163","line":16,"column":8,"nodeType":"950","messageId":"951","endLine":16,"endColumn":21},{"ruleId":"948","severity":1,"message":"1064","line":21,"column":10,"nodeType":"950","messageId":"951","endLine":21,"endColumn":18},{"ruleId":"948","severity":1,"message":"975","line":21,"column":20,"nodeType":"950","messageId":"951","endLine":21,"endColumn":23},{"ruleId":"948","severity":1,"message":"1164","line":495,"column":10,"nodeType":"950","messageId":"951","endLine":495,"endColumn":26},{"ruleId":"948","severity":1,"message":"1112","line":2,"column":16,"nodeType":"950","messageId":"951","endLine":2,"endColumn":22},{"ruleId":"948","severity":1,"message":"1111","line":2,"column":24,"nodeType":"950","messageId":"951","endLine":2,"endColumn":32},{"ruleId":"948","severity":1,"message":"1165","line":2,"column":34,"nodeType":"950","messageId":"951","endLine":2,"endColumn":39},{"ruleId":"948","severity":1,"message":"1166","line":3,"column":26,"nodeType":"950","messageId":"951","endLine":3,"endColumn":42},{"ruleId":"948","severity":1,"message":"1167","line":5,"column":10,"nodeType":"950","messageId":"951","endLine":5,"endColumn":18},{"ruleId":"948","severity":1,"message":"1168","line":5,"column":20,"nodeType":"950","messageId":"951","endLine":5,"endColumn":23},{"ruleId":"948","severity":1,"message":"965","line":6,"column":8,"nodeType":"950","messageId":"951","endLine":6,"endColumn":18},{"ruleId":"948","severity":1,"message":"1169","line":14,"column":8,"nodeType":"950","messageId":"951","endLine":14,"endColumn":14},{"ruleId":"948","severity":1,"message":"1170","line":17,"column":20,"nodeType":"950","messageId":"951","endLine":17,"endColumn":25},{"ruleId":"948","severity":1,"message":"1171","line":17,"column":27,"nodeType":"950","messageId":"951","endLine":17,"endColumn":32},{"ruleId":"948","severity":1,"message":"1172","line":17,"column":49,"nodeType":"950","messageId":"951","endLine":17,"endColumn":55},{"ruleId":"948","severity":1,"message":"1173","line":19,"column":9,"nodeType":"950","messageId":"951","endLine":19,"endColumn":14},{"ruleId":"948","severity":1,"message":"1174","line":22,"column":17,"nodeType":"950","messageId":"951","endLine":22,"endColumn":25},{"ruleId":"948","severity":1,"message":"1112","line":2,"column":16,"nodeType":"950","messageId":"951","endLine":2,"endColumn":22},{"ruleId":"948","severity":1,"message":"1111","line":2,"column":24,"nodeType":"950","messageId":"951","endLine":2,"endColumn":32},{"ruleId":"948","severity":1,"message":"1165","line":2,"column":34,"nodeType":"950","messageId":"951","endLine":2,"endColumn":39},{"ruleId":"948","severity":1,"message":"1166","line":3,"column":26,"nodeType":"950","messageId":"951","endLine":3,"endColumn":42},{"ruleId":"948","severity":1,"message":"1167","line":5,"column":10,"nodeType":"950","messageId":"951","endLine":5,"endColumn":18},{"ruleId":"948","severity":1,"message":"1168","line":5,"column":20,"nodeType":"950","messageId":"951","endLine":5,"endColumn":23},{"ruleId":"948","severity":1,"message":"965","line":6,"column":8,"nodeType":"950","messageId":"951","endLine":6,"endColumn":18},{"ruleId":"948","severity":1,"message":"1170","line":16,"column":20,"nodeType":"950","messageId":"951","endLine":16,"endColumn":25},{"ruleId":"948","severity":1,"message":"1171","line":16,"column":27,"nodeType":"950","messageId":"951","endLine":16,"endColumn":32},{"ruleId":"948","severity":1,"message":"1172","line":16,"column":49,"nodeType":"950","messageId":"951","endLine":16,"endColumn":55},{"ruleId":"948","severity":1,"message":"1173","line":18,"column":9,"nodeType":"950","messageId":"951","endLine":18,"endColumn":14},{"ruleId":"948","severity":1,"message":"1174","line":21,"column":17,"nodeType":"950","messageId":"951","endLine":21,"endColumn":25},{"ruleId":"1015","severity":1,"message":"1016","line":29,"column":10,"nodeType":"1017","endLine":29,"endColumn":27},{"ruleId":"948","severity":1,"message":"1175","line":1,"column":55,"nodeType":"950","messageId":"951","endLine":1,"endColumn":72},{"ruleId":"948","severity":1,"message":"1176","line":2,"column":8,"nodeType":"950","messageId":"951","endLine":2,"endColumn":16},{"ruleId":"948","severity":1,"message":"1177","line":3,"column":10,"nodeType":"950","messageId":"951","endLine":3,"endColumn":16},{"ruleId":"948","severity":1,"message":"971","line":8,"column":8,"nodeType":"950","messageId":"951","endLine":8,"endColumn":13},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'ApolloProvider' is defined but never used.","'auth' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'apolloClient' is assigned a value but never used.","no-native-reassign",["1178"],"no-negated-in-lhs",["1179"],"'useState' is defined but never used.","'Grid' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Fade' is defined but never used.","'classnames' is defined but never used.","'logo' is defined but never used.","'google' is defined but never used.","'useParams' is defined but never used.","'loginUser' is defined but never used.","'Controller' is defined but never used.","'axios' is defined but never used.","'history' is assigned a value but never used.","'phoneRegExp' is assigned a value but never used.","'control' is assigned a value but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'loginValue' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'userDispatch' is assigned a value but never used.","'mobileRegExp' is assigned a value but never used.","'_' is assigned a value but never used.","'setAuthToken' is assigned a value but never used.","'removeAuthtoken' is assigned a value but never used.","'CircularProgress' is defined but never used.","'Image' is defined but never used.","'Audio' is defined but never used.","'Login' is defined but never used.","'LoginWithPhone' is defined but never used.","'SmsVerification' is defined but never used.","'CalenderProject' is defined but never used.","'JobCalender' is defined but never used.","'useStyles' is defined but never used.","'setData' is assigned a value but never used.","'Typography' is defined but never used.","'Widget' is defined but never used.","'CallMissedSharp' is defined but never used.","'styled' is defined but never used.","'borderColor' is assigned a value but never used.","'setborderColort' is assigned a value but never used.","'makeStyles' is defined but never used.","'Avatar' is defined but never used.","'PageTitle' is defined but never used.","'Chart' is defined but never used.","'ResponsiveContainer' is defined but never used.","'ComposedChart' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'YAxis' is defined but never used.","'XAxis' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'formatDate' is defined but never used.","'moment' is defined but never used.","'Button' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Link' is defined but never used.","'descriptionElementRef' is assigned a value but never used.","'IconButton' is defined but never used.","'Popper' is defined but never used.","'Children' is defined but never used.","'Delete' is defined but never used.","'EditIcon' is defined but never used.","'MTableToolbar' is defined but never used.","'CompanyAddList' is defined but never used.","'SearchBar' is defined but never used.","'ApiaryAddList' is defined but never used.","'ApiaryUpdateList' is defined but never used.","'Adduser' is defined but never used.","'NavLink' is defined but never used.","'useRouteMatch' is defined but never used.","'toolbar' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleEditOpen' is assigned a value but never used.","'buf' is assigned a value but never used.","'cancelSearch' is assigned a value but never used.","'add' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-dupe-keys","Duplicate key 'body'.","ObjectExpression","unexpected","'Divider' is defined but never used.","'AddSubmitCode' is defined but never used.","'AddJob' is defined but never used.","'handleSubmit' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'path' is assigned a value but never used.","'url' is assigned a value but never used.","'useEffect' is defined but never used.","'Info' is defined but never used.","'TramRounded' is defined but never used.","'useQuery' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'error' is assigned a value but never used.","'setIserror' is assigned a value but never used.","'handleDeleteOpen' is assigned a value but never used.","'Information' is assigned a value but never used.","'classes' is assigned a value but never used.","'NavigateNext' is defined but never used.","'location' is assigned a value but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","Duplicate key 'fontWeight'.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"1180","text":"1181"},"Duplicate key '&\t.MuiSelect-outlined'.","'FILE_SIZE' is assigned a value but never used.","'fileRef' is assigned a value but never used.","'fileUploadHandler' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'response' is assigned a value but never used.","'optopns6' is assigned a value but never used.","'optopns7' is assigned a value but never used.","Duplicate key 'border'.","'isLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'maxSteps' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Duplicate key 'color'.","'date' is defined but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'start' is assigned a value but never used.","'setStart' is assigned a value but never used.","'end' is assigned a value but never used.","'setEnd' is assigned a value but never used.","'Add' is defined but never used.","'ExpandMore' is defined but never used.","'Minimize' is defined but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'data' is assigned a value but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'payload' is assigned a value but never used.","'sx' is assigned a value but never used.","'sy' is assigned a value but never used.","'MaterialTable' is defined but never used.","'setDate' is assigned a value but never used.","'CustomizedTooltip' is assigned a value but never used.","'MoreIcon' is defined but never used.","'DoneRounded' is defined but never used.","'MinimizeRounded' is defined but never used.","'VisibilityRounded' is defined but never used.","'HomeIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'MenuIcon' is defined but never used.","'LocationCity' is defined but never used.","'TableChart' is defined but never used.","'Accessibility' is defined but never used.","'layoutState' is assigned a value but never used.","'Fab' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'UserAvatar' is defined but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","'setNotificationsMenu' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'useTheme' is defined but never used.","'Dot' is defined but never used.","'Table' is defined but never used.","'ApexLineChart' is defined but never used.","'getMainChartData' is defined but never used.","'Input' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'BarChart' is defined but never used.","'Bar' is defined but never used.","'Bardia' is defined but never used.","'total' is assigned a value but never used.","'color' is assigned a value but never used.","'bounce' is assigned a value but never used.","'theme' is assigned a value but never used.","'setValue' is assigned a value but never used.","'ArrowRightTwoTone' is defined but never used.","'ReactDOM' is defined but never used.","'Formik' is defined but never used.","no-global-assign","no-unsafe-negation",[-1,0],""]